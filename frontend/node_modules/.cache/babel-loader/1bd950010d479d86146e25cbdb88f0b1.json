{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport { classNamesFunction, divProperties, elementContains, getNativeProps, focusFirstChild } from '../../Utilities';\nimport { OverflowButton } from './OverflowButton';\nvar getClassNames = classNamesFunction();\nvar COMPONENT_NAME = 'OverflowSet';\n\nvar useComponentRef = function (props, divContainer) {\n  React.useImperativeHandle(props.componentRef, function () {\n    return {\n      focus: function () {\n        var focusSucceeded = false;\n\n        if (divContainer.current) {\n          focusSucceeded = focusFirstChild(divContainer.current);\n        }\n\n        return focusSucceeded;\n      },\n      focusElement: function (childElement) {\n        var focusSucceeded = false;\n\n        if (!childElement) {\n          return false;\n        }\n\n        if (divContainer.current && elementContains(divContainer.current, childElement)) {\n          childElement.focus();\n          focusSucceeded = document.activeElement === childElement;\n        }\n\n        return focusSucceeded;\n      }\n    };\n  }, [divContainer]);\n};\n\nexport var OverflowSetBase = React.forwardRef(function (props, forwardedRef) {\n  var divContainer = React.useRef(null);\n  var mergedRef = useMergedRefs(divContainer, forwardedRef);\n  useComponentRef(props, divContainer);\n  var items = props.items,\n      overflowItems = props.overflowItems,\n      className = props.className,\n      styles = props.styles,\n      vertical = props.vertical,\n      role = props.role,\n      _a = props.overflowSide,\n      overflowSide = _a === void 0 ? 'end' : _a,\n      onRenderItem = props.onRenderItem;\n  var classNames = getClassNames(styles, {\n    className: className,\n    vertical: vertical\n  });\n  var showOverflow = !!overflowItems && overflowItems.length > 0;\n  return React.createElement(\"div\", __assign({}, getNativeProps(props, divProperties), {\n    role: role || 'group',\n    \"aria-orientation\": role === 'menubar' ? vertical === true ? 'vertical' : 'horizontal' : undefined,\n    className: classNames.root,\n    ref: mergedRef\n  }), overflowSide === 'start' && showOverflow && React.createElement(OverflowButton, __assign({}, props, {\n    className: classNames.overflowButton\n  })), items && items.map(function (item, i) {\n    return React.createElement(\"div\", {\n      className: classNames.item,\n      key: item.key,\n      role: \"none\"\n    }, onRenderItem(item));\n  }), overflowSide === 'end' && showOverflow && React.createElement(OverflowButton, __assign({}, props, {\n    className: classNames.overflowButton\n  })));\n});\nOverflowSetBase.displayName = COMPONENT_NAME;","map":{"version":3,"mappings":"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","names":["React","useMergedRefs","classNamesFunction","divProperties","elementContains","getNativeProps","focusFirstChild","OverflowButton","getClassNames","COMPONENT_NAME","useComponentRef","props","divContainer","useImperativeHandle","componentRef","focus","focusSucceeded","current","focusElement","childElement","document","activeElement","OverflowSetBase","forwardRef","forwardedRef","useRef","mergedRef","overflowItems","className","styles","vertical","role","_a","overflowSide","onRenderItem","classNames","showOverflow","length","undefined","root","ref","__assign","overflowButton","items","map","item","i","key","displayName"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\OverflowSet\\OverflowSet.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport { classNamesFunction, divProperties, elementContains, getNativeProps, focusFirstChild } from '../../Utilities';\nimport { OverflowButton } from './OverflowButton';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { IOverflowSetProps, IOverflowSetStyles, IOverflowSetStyleProps, IOverflowSet } from './OverflowSet.types';\n\nconst getClassNames = classNamesFunction<IOverflowSetStyleProps, IOverflowSetStyles>();\nconst COMPONENT_NAME = 'OverflowSet';\n\nconst useComponentRef = (props: IOverflowSetProps, divContainer: React.RefObject<HTMLDivElement>) => {\n  React.useImperativeHandle(\n    props.componentRef,\n    (): IOverflowSet => ({\n      focus: (): boolean => {\n        let focusSucceeded = false;\n        if (divContainer.current) {\n          focusSucceeded = focusFirstChild(divContainer.current);\n        }\n        return focusSucceeded;\n      },\n      focusElement: (childElement?: HTMLElement) => {\n        let focusSucceeded = false;\n        if (!childElement) {\n          return false;\n        }\n        if (divContainer.current && elementContains(divContainer.current, childElement)) {\n          childElement.focus();\n          focusSucceeded = document.activeElement === childElement;\n        }\n        return focusSucceeded;\n      },\n    }),\n    [divContainer],\n  );\n};\n\nexport const OverflowSetBase: React.FunctionComponent<IOverflowSetProps> = React.forwardRef<\n  HTMLDivElement,\n  IOverflowSetProps\n>((props, forwardedRef) => {\n  const divContainer = React.useRef<HTMLDivElement>(null);\n  const mergedRef = useMergedRefs(divContainer, forwardedRef);\n  useComponentRef(props, divContainer);\n\n  const { items, overflowItems, className, styles, vertical, role, overflowSide = 'end', onRenderItem } = props;\n\n  const classNames: IProcessedStyleSet<IOverflowSetStyles> = getClassNames(styles, { className, vertical });\n\n  const showOverflow = !!overflowItems && overflowItems.length > 0;\n\n  return (\n    <div\n      {...getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties)}\n      role={role || 'group'}\n      aria-orientation={role === 'menubar' ? (vertical === true ? 'vertical' : 'horizontal') : undefined}\n      className={classNames.root}\n      ref={mergedRef}\n    >\n      {overflowSide === 'start' && showOverflow && <OverflowButton {...props} className={classNames.overflowButton} />}\n      {items &&\n        items.map((item, i) => (\n          <div className={classNames.item} key={item.key} role=\"none\">\n            {onRenderItem(item)}\n          </div>\n        ))}\n      {overflowSide === 'end' && showOverflow && <OverflowButton {...props} className={classNames.overflowButton} />}\n    </div>\n  );\n});\nOverflowSetBase.displayName = COMPONENT_NAME;\n"]},"metadata":{},"sourceType":"module"}