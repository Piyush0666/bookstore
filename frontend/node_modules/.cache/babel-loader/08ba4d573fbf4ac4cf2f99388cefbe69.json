{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getGlobalClassNames, HighContrastSelector, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nexport var SuggestionsItemGlobalClassNames = {\n  root: 'ms-Suggestions-item',\n  itemButton: 'ms-Suggestions-itemButton',\n  closeButton: 'ms-Suggestions-closeButton',\n  isSuggested: 'is-suggested'\n};\nexport function getStyles(props) {\n  var _a, _b, _c, _d, _e, _f;\n\n  var className = props.className,\n      theme = props.theme,\n      suggested = props.suggested;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(SuggestionsItemGlobalClassNames, theme);\n  return {\n    root: [classNames.root, {\n      display: 'flex',\n      alignItems: 'stretch',\n      boxSizing: 'border-box',\n      width: '100%',\n      position: 'relative',\n      selectors: {\n        '&:hover': {\n          background: semanticColors.menuItemBackgroundHovered\n        },\n        '&:hover .ms-Suggestions-closeButton': {\n          display: 'block'\n        }\n      }\n    }, suggested && {\n      selectors: (_a = {}, _a[\".\" + IsFocusVisibleClassName + \" &\"] = {\n        selectors: (_b = {}, _b[\".\" + classNames.closeButton] = {\n          display: 'block',\n          background: semanticColors.menuItemBackgroundPressed\n        }, _b)\n      }, _a[':after'] = {\n        pointerEvents: 'none',\n        content: '\"\"',\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n        border: \"1px solid \" + theme.semanticColors.focusBorder\n      }, _a)\n    }, className],\n    itemButton: [classNames.itemButton, {\n      width: '100%',\n      padding: 0,\n      border: 'none',\n      height: '100%',\n      // Force the item button to be collapsible so it can always shrink\n      // to accommodate the close button as a peer in its flex container.\n      minWidth: 0,\n      // Require for IE11 to truncate the component.\n      overflow: 'hidden',\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'WindowText',\n        selectors: {\n          ':hover': __assign({\n            background: 'Highlight',\n            color: 'HighlightText'\n          }, getHighContrastNoAdjustStyle())\n        }\n      }, _c[':hover'] = {\n        color: semanticColors.menuItemTextHovered\n      }, _c)\n    }, suggested && [classNames.isSuggested, {\n      background: semanticColors.menuItemBackgroundPressed,\n      selectors: (_d = {\n        ':hover': {\n          background: semanticColors.menuDivider\n        }\n      }, _d[HighContrastSelector] = __assign({\n        background: 'Highlight',\n        color: 'HighlightText'\n      }, getHighContrastNoAdjustStyle()), _d)\n    }]],\n    closeButton: [classNames.closeButton, {\n      display: 'none',\n      color: palette.neutralSecondary,\n      padding: '0 4px',\n      height: 'auto',\n      width: 32,\n      selectors: (_e = {\n        ':hover, :active': {\n          background: palette.neutralTertiaryAlt,\n          color: palette.neutralDark\n        }\n      }, _e[HighContrastSelector] = {\n        color: 'WindowText'\n      }, _e)\n    }, suggested && (_f = {}, _f[\".\" + IsFocusVisibleClassName + \" &\"] = {\n      selectors: {\n        ':hover, :active': {\n          background: palette.neutralTertiary\n        }\n      }\n    }, _f.selectors = {\n      ':hover, :active': {\n        background: palette.neutralTertiary,\n        color: palette.neutralPrimary\n      }\n    }, _f)]\n  };\n}","map":{"version":3,"mappings":"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","names":["getGlobalClassNames","HighContrastSelector","getHighContrastNoAdjustStyle","IsFocusVisibleClassName","SuggestionsItemGlobalClassNames","root","itemButton","closeButton","isSuggested","getStyles","props","theme","suggested","semanticColors","classNames","display","alignItems","boxSizing","width","position","selectors","background","menuItemBackgroundHovered","_a","_b","menuItemBackgroundPressed","pointerEvents","content","left","top","bottom","right","border","focusBorder","className","padding","height","minWidth","overflow","_c","color","__assign","menuItemTextHovered","menuDivider","_d","palette","neutralSecondary","neutralTertiaryAlt","neutralDark","_e","_f","neutralTertiary","neutralPrimary"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\pickers\\src\\components\\pickers\\Suggestions\\SuggestionsItem.styles.ts"],"sourcesContent":["import { getGlobalClassNames, HighContrastSelector, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nimport type { ISuggestionsItemStyleProps, ISuggestionsItemStyles } from './SuggestionsItem.types';\n\nexport const SuggestionsItemGlobalClassNames = {\n  root: 'ms-Suggestions-item',\n  itemButton: 'ms-Suggestions-itemButton',\n  closeButton: 'ms-Suggestions-closeButton',\n  isSuggested: 'is-suggested',\n};\n\nexport function getStyles(props: ISuggestionsItemStyleProps): ISuggestionsItemStyles {\n  const { className, theme, suggested } = props;\n\n  const { palette, semanticColors } = theme;\n\n  const classNames = getGlobalClassNames(SuggestionsItemGlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      {\n        display: 'flex',\n        alignItems: 'stretch',\n        boxSizing: 'border-box',\n        width: '100%',\n        position: 'relative',\n        selectors: {\n          '&:hover': {\n            background: semanticColors.menuItemBackgroundHovered,\n          },\n          '&:hover .ms-Suggestions-closeButton': {\n            display: 'block',\n          },\n        },\n      },\n      suggested && {\n        selectors: {\n          [`.${IsFocusVisibleClassName} &`]: {\n            selectors: {\n              [`.${classNames.closeButton}`]: {\n                display: 'block',\n                background: semanticColors.menuItemBackgroundPressed,\n              },\n            },\n          },\n          ':after': {\n            pointerEvents: 'none',\n            content: '\"\"',\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            bottom: 0,\n            right: 0,\n            border: `1px solid ${theme.semanticColors.focusBorder}`,\n          },\n        },\n      },\n      className,\n    ],\n    itemButton: [\n      classNames.itemButton,\n      {\n        width: '100%',\n        padding: 0,\n        border: 'none',\n        height: '100%',\n        // Force the item button to be collapsible so it can always shrink\n        // to accommodate the close button as a peer in its flex container.\n        minWidth: 0,\n        // Require for IE11 to truncate the component.\n        overflow: 'hidden',\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'WindowText',\n            selectors: {\n              ':hover': {\n                background: 'Highlight',\n                color: 'HighlightText',\n                ...getHighContrastNoAdjustStyle(),\n              },\n            },\n          },\n          ':hover': {\n            color: semanticColors.menuItemTextHovered,\n          },\n        },\n      },\n      suggested && [\n        classNames.isSuggested,\n        {\n          background: semanticColors.menuItemBackgroundPressed,\n          selectors: {\n            ':hover': {\n              background: semanticColors.menuDivider,\n            },\n            [HighContrastSelector]: {\n              background: 'Highlight',\n              color: 'HighlightText',\n              ...getHighContrastNoAdjustStyle(),\n            },\n          },\n        },\n      ],\n    ],\n    closeButton: [\n      classNames.closeButton,\n      {\n        display: 'none',\n        color: palette.neutralSecondary,\n        padding: '0 4px',\n        height: 'auto',\n        width: 32,\n        selectors: {\n          ':hover, :active': {\n            background: palette.neutralTertiaryAlt,\n            color: palette.neutralDark,\n          },\n          [HighContrastSelector]: {\n            color: 'WindowText',\n          },\n        },\n      },\n      suggested && {\n        [`.${IsFocusVisibleClassName} &`]: {\n          selectors: {\n            ':hover, :active': {\n              background: palette.neutralTertiary,\n            },\n          },\n        },\n        selectors: {\n          ':hover, :active': {\n            background: palette.neutralTertiary,\n            color: palette.neutralPrimary,\n          },\n        },\n      },\n    ],\n  };\n}\n"]},"metadata":{},"sourceType":"module"}