{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport { classNamesFunction, getNativeProps, inputProperties, css, composeRenderFunction, getPropsWithDefaults } from '../../../Utilities';\nvar getClassNames = classNamesFunction();\nvar LARGE_IMAGE_SIZE = 71;\nvar DEFAULT_PROPS = {\n  // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n  imageSize: {\n    width: 32,\n    height: 32\n  }\n};\nexport var ChoiceGroupOptionBase = function (propsWithoutDefaults) {\n  // Mix the `key` prop back in since custom render functions may be expecting it\n  // (React uses `key` internally rather than passing it through to the component)\n  var props = getPropsWithDefaults(__assign(__assign({}, DEFAULT_PROPS), {\n    key: propsWithoutDefaults.itemKey\n  }), propsWithoutDefaults);\n\n  var ariaLabel = props.ariaLabel,\n      focused = props.focused,\n      required = props.required,\n      theme = props.theme,\n      iconProps = props.iconProps,\n      imageSrc = props.imageSrc,\n      imageSize = props.imageSize,\n      disabled = props.disabled,\n      checked = props.checked,\n      id = props.id,\n      styles = props.styles,\n      name = props.name,\n      rest = __rest(props, [\"ariaLabel\", \"focused\", \"required\", \"theme\", \"iconProps\", \"imageSrc\", \"imageSize\", \"disabled\", \"checked\", \"id\", \"styles\", \"name\"]);\n\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    hasIcon: !!iconProps,\n    hasImage: !!imageSrc,\n    checked: checked,\n    disabled: disabled,\n    imageIsLarge: !!imageSrc && (imageSize.width > LARGE_IMAGE_SIZE || imageSize.height > LARGE_IMAGE_SIZE),\n    imageSize: imageSize,\n    focused: focused\n  });\n\n  var _a = getNativeProps(rest, inputProperties),\n      className = _a.className,\n      nativeProps = __rest(_a, [\"className\"]);\n\n  var defaultOnRenderLabel = function () {\n    return React.createElement(\"span\", {\n      id: props.labelId,\n      className: \"ms-ChoiceFieldLabel\"\n    }, props.text);\n  };\n\n  var defaultOnRenderField = function () {\n    var _a = props.imageAlt,\n        imageAlt = _a === void 0 ? '' : _a,\n        selectedImageSrc = props.selectedImageSrc;\n    var onRenderLabel = props.onRenderLabel ? composeRenderFunction(props.onRenderLabel, defaultOnRenderLabel) : defaultOnRenderLabel;\n    var label = onRenderLabel(props);\n    return React.createElement(\"label\", {\n      htmlFor: id,\n      className: classNames.field\n    }, imageSrc && React.createElement(\"div\", {\n      className: classNames.innerField\n    }, React.createElement(\"div\", {\n      className: classNames.imageWrapper\n    }, React.createElement(Image, __assign({\n      src: imageSrc,\n      alt: imageAlt\n    }, imageSize))), React.createElement(\"div\", {\n      className: classNames.selectedImageWrapper\n    }, React.createElement(Image, __assign({\n      src: selectedImageSrc,\n      alt: imageAlt\n    }, imageSize)))), iconProps && React.createElement(\"div\", {\n      className: classNames.innerField\n    }, React.createElement(\"div\", {\n      className: classNames.iconWrapper\n    }, React.createElement(Icon, __assign({}, iconProps)))), imageSrc || iconProps ? React.createElement(\"div\", {\n      className: classNames.labelWrapper\n    }, label) : label);\n  };\n\n  var _b = props.onRenderField,\n      onRenderField = _b === void 0 ? defaultOnRenderField : _b;\n\n  var onChange = function (evt) {\n    var _a;\n\n    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, evt, props);\n  };\n\n  var onBlur = function (evt) {\n    var _a;\n\n    (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, evt);\n  };\n\n  var onFocus = function (evt) {\n    var _a;\n\n    (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, evt, props);\n  };\n\n  return React.createElement(\"div\", {\n    className: classNames.root\n  }, React.createElement(\"div\", {\n    className: classNames.choiceFieldWrapper\n  }, React.createElement(\"input\", __assign({\n    \"aria-label\": ariaLabel,\n    id: id,\n    className: css(classNames.input, className),\n    type: \"radio\",\n    name: name,\n    disabled: disabled,\n    checked: checked,\n    required: required\n  }, nativeProps, {\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur\n  })), onRenderField(props, defaultOnRenderField)));\n};\nChoiceGroupOptionBase.displayName = 'ChoiceGroupOption';","map":{"version":3,"mappings":"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","names":["React","Image","Icon","classNamesFunction","getNativeProps","inputProperties","css","composeRenderFunction","getPropsWithDefaults","getClassNames","LARGE_IMAGE_SIZE","DEFAULT_PROPS","imageSize","width","height","ChoiceGroupOptionBase","props","key","propsWithoutDefaults","itemKey","focused","required","theme","iconProps","imageSrc","disabled","checked","id","styles","name","rest","classNames","hasIcon","hasImage","imageIsLarge","_a","className","nativeProps","defaultOnRenderLabel","labelId","text","defaultOnRenderField","selectedImageSrc","onRenderLabel","label","htmlFor","field","innerField","imageWrapper","__assign","src","alt","imageAlt","selectedImageWrapper","iconWrapper","labelWrapper","_b","onChange","evt","onBlur","onFocus","root","choiceFieldWrapper","ariaLabel","input","type","onRenderField","displayName"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\ChoiceGroup\\src\\components\\ChoiceGroup\\ChoiceGroupOption\\ChoiceGroupOption.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport {\n  classNamesFunction,\n  getNativeProps,\n  inputProperties,\n  css,\n  composeRenderFunction,\n  getPropsWithDefaults,\n} from '../../../Utilities';\nimport type {\n  IChoiceGroupOptionProps,\n  IChoiceGroupOptionStyleProps,\n  IChoiceGroupOptionStyles,\n} from './ChoiceGroupOption.types';\n\nconst getClassNames = classNamesFunction<IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles>();\n\nconst LARGE_IMAGE_SIZE = 71;\n\nconst DEFAULT_PROPS: Partial<IChoiceGroupOptionProps> = {\n  // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n  imageSize: { width: 32, height: 32 },\n};\n\nexport const ChoiceGroupOptionBase: React.FunctionComponent<IChoiceGroupOptionProps> = propsWithoutDefaults => {\n  // Mix the `key` prop back in since custom render functions may be expecting it\n  // (React uses `key` internally rather than passing it through to the component)\n  const props = getPropsWithDefaults({ ...DEFAULT_PROPS, key: propsWithoutDefaults.itemKey }, propsWithoutDefaults);\n\n  const {\n    ariaLabel,\n    focused,\n    required,\n    theme,\n    iconProps,\n    imageSrc,\n    imageSize,\n    disabled,\n    checked,\n    id,\n    styles,\n    name,\n    ...rest\n  } = props;\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    hasIcon: !!iconProps,\n    hasImage: !!imageSrc,\n    checked,\n    disabled,\n    imageIsLarge: !!imageSrc && (imageSize!.width > LARGE_IMAGE_SIZE || imageSize!.height > LARGE_IMAGE_SIZE),\n    imageSize,\n    focused,\n  });\n\n  const { className, ...nativeProps } = getNativeProps<{ className: string }>(rest, inputProperties);\n\n  const defaultOnRenderLabel = (): JSX.Element => {\n    return (\n      <span id={props.labelId} className=\"ms-ChoiceFieldLabel\">\n        {props.text}\n      </span>\n    );\n  };\n\n  const defaultOnRenderField = (): JSX.Element => {\n    const { imageAlt = '', selectedImageSrc } = props;\n\n    const onRenderLabel = props.onRenderLabel\n      ? composeRenderFunction(props.onRenderLabel, defaultOnRenderLabel)\n      : defaultOnRenderLabel;\n\n    const label = onRenderLabel(props);\n\n    return (\n      <label htmlFor={id} className={classNames.field}>\n        {imageSrc && (\n          <div className={classNames.innerField}>\n            <div className={classNames.imageWrapper}>\n              <Image src={imageSrc} alt={imageAlt} {...imageSize} />\n            </div>\n            <div className={classNames.selectedImageWrapper}>\n              <Image src={selectedImageSrc} alt={imageAlt} {...imageSize} />\n            </div>\n          </div>\n        )}\n        {iconProps && (\n          <div className={classNames.innerField}>\n            <div className={classNames.iconWrapper}>\n              <Icon {...iconProps} />\n            </div>\n          </div>\n        )}\n        {imageSrc || iconProps ? <div className={classNames.labelWrapper}>{label}</div> : label}\n      </label>\n    );\n  };\n\n  const { onRenderField = defaultOnRenderField } = props;\n\n  const onChange = (evt: React.FormEvent<HTMLInputElement>): void => {\n    props.onChange?.(evt, props);\n  };\n\n  const onBlur = (evt: React.FocusEvent<HTMLElement>) => {\n    props.onBlur?.(evt);\n  };\n\n  const onFocus = (evt: React.FocusEvent<HTMLElement>) => {\n    props.onFocus?.(evt, props);\n  };\n\n  return (\n    <div className={classNames.root}>\n      <div className={classNames.choiceFieldWrapper}>\n        <input\n          aria-label={ariaLabel}\n          id={id}\n          className={css(classNames.input, className)}\n          type=\"radio\"\n          name={name}\n          disabled={disabled}\n          checked={checked}\n          required={required}\n          {...nativeProps}\n          onChange={onChange}\n          onFocus={onFocus}\n          onBlur={onBlur}\n        />\n        {onRenderField(props, defaultOnRenderField)}\n      </div>\n    </div>\n  );\n};\nChoiceGroupOptionBase.displayName = 'ChoiceGroupOption';\n"]},"metadata":{},"sourceType":"module"}