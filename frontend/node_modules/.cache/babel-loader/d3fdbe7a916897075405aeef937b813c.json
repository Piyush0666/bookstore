{"ast":null,"code":"import { __assign, __extends, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, css, nullRender, getNativeProps, divProperties, composeComponentAs, initializeComponentRef } from '../../Utilities';\nimport { OverflowSet } from '../../OverflowSet';\nimport { ResizeGroup } from '../../ResizeGroup';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { CommandBarButton } from '../../Button';\nimport { TooltipHost } from '../../Tooltip';\nimport { getCommandButtonStyles } from './CommandBar.styles';\nvar getClassNames = classNamesFunction();\n\nvar CommandBarBase =\n/** @class */\nfunction (_super) {\n  __extends(CommandBarBase, _super);\n\n  function CommandBarBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._overflowSet = React.createRef();\n    _this._resizeGroup = React.createRef();\n\n    _this._onRenderData = function (data) {\n      var _a = _this.props,\n          ariaLabel = _a.ariaLabel,\n          primaryGroupAriaLabel = _a.primaryGroupAriaLabel,\n          farItemsGroupAriaLabel = _a.farItemsGroupAriaLabel;\n      var hasSecondSet = data.farItems && data.farItems.length > 0;\n      return React.createElement(FocusZone, {\n        className: css(_this._classNames.root),\n        direction: FocusZoneDirection.horizontal,\n        role: 'menubar',\n        \"aria-label\": ariaLabel\n      }, React.createElement(OverflowSet, {\n        role: hasSecondSet ? 'group' : 'none',\n        \"aria-label\": hasSecondSet ? primaryGroupAriaLabel : undefined,\n        componentRef: _this._overflowSet,\n        className: css(_this._classNames.primarySet),\n        items: data.primaryItems,\n        overflowItems: data.overflowItems.length ? data.overflowItems : undefined,\n        onRenderItem: _this._onRenderItem,\n        onRenderOverflowButton: _this._onRenderOverflowButton\n      }), hasSecondSet && React.createElement(OverflowSet, {\n        role: \"group\",\n        \"aria-label\": farItemsGroupAriaLabel,\n        className: css(_this._classNames.secondarySet),\n        items: data.farItems,\n        onRenderItem: _this._onRenderItem,\n        onRenderOverflowButton: nullRender\n      }));\n    };\n\n    _this._onRenderItem = function (item) {\n      if (item.onRender) {\n        // These are the top level items, there is no relevant menu dismissing function to\n        // provide for the IContextualMenuItem onRender function. Pass in a no op function instead.\n        return item.onRender(item, function () {\n          return undefined;\n        });\n      } // eslint-disable-next-line deprecation/deprecation\n\n\n      var itemText = item.text || item.name;\n\n      var commandButtonProps = __assign(__assign({\n        allowDisabledFocus: true,\n        role: 'menuitem'\n      }, item), {\n        styles: getCommandButtonStyles(item.buttonStyles),\n        className: css('ms-CommandBarItem-link', item.className),\n        text: !item.iconOnly ? itemText : undefined,\n        menuProps: item.subMenuProps,\n        onClick: _this._onButtonClick(item)\n      });\n\n      if (item.iconOnly && (itemText !== undefined || item.tooltipHostProps)) {\n        return React.createElement(TooltipHost, __assign({\n          role: \"none\",\n          content: itemText,\n          setAriaDescribedBy: false\n        }, item.tooltipHostProps), _this._commandButton(item, commandButtonProps));\n      }\n\n      return _this._commandButton(item, commandButtonProps);\n    };\n\n    _this._commandButton = function (item, props) {\n      var ButtonAs = _this.props.buttonAs;\n      var CommandBarButtonAs = item.commandBarButtonAs;\n      var DefaultButtonAs = CommandBarButton; // The prop types between these three possible implementations overlap enough that a force-cast is safe.\n\n      var Type = DefaultButtonAs;\n\n      if (CommandBarButtonAs) {\n        Type = composeComponentAs(CommandBarButtonAs, Type);\n      }\n\n      if (ButtonAs) {\n        Type = composeComponentAs(ButtonAs, Type);\n      } // Always pass the default implementation to the override so it may be composed.\n\n\n      return React.createElement(Type, __assign({}, props));\n    };\n\n    _this._onRenderOverflowButton = function (overflowItems) {\n      var _a = _this.props.overflowButtonProps,\n          overflowButtonProps = _a === void 0 ? {} : _a;\n\n      var combinedOverflowItems = __spreadArray(__spreadArray([], overflowButtonProps.menuProps ? overflowButtonProps.menuProps.items : []), overflowItems);\n\n      var overflowProps = __assign(__assign({\n        role: 'menuitem'\n      }, overflowButtonProps), {\n        styles: __assign({\n          menuIcon: {\n            fontSize: '17px'\n          }\n        }, overflowButtonProps.styles),\n        className: css('ms-CommandBar-overflowButton', overflowButtonProps.className),\n        menuProps: __assign(__assign({}, overflowButtonProps.menuProps), {\n          items: combinedOverflowItems\n        }),\n        menuIconProps: __assign({\n          iconName: 'More'\n        }, overflowButtonProps.menuIconProps)\n      });\n\n      var OverflowButtonType = _this.props.overflowButtonAs ? composeComponentAs(_this.props.overflowButtonAs, CommandBarButton) : CommandBarButton;\n      return React.createElement(OverflowButtonType, __assign({}, overflowProps));\n    };\n\n    _this._onReduceData = function (data) {\n      var _a = _this.props,\n          shiftOnReduce = _a.shiftOnReduce,\n          onDataReduced = _a.onDataReduced;\n      var primaryItems = data.primaryItems,\n          overflowItems = data.overflowItems,\n          cacheKey = data.cacheKey; // Use first item if shiftOnReduce, otherwise use last item\n\n      var movedItem = primaryItems[shiftOnReduce ? 0 : primaryItems.length - 1];\n\n      if (movedItem !== undefined) {\n        movedItem.renderedInOverflow = true;\n        overflowItems = __spreadArray([movedItem], overflowItems);\n        primaryItems = shiftOnReduce ? primaryItems.slice(1) : primaryItems.slice(0, -1);\n\n        var newData = __assign(__assign({}, data), {\n          primaryItems: primaryItems,\n          overflowItems: overflowItems\n        });\n\n        cacheKey = _this._computeCacheKey({\n          primaryItems: primaryItems,\n          overflow: overflowItems.length > 0\n        });\n\n        if (onDataReduced) {\n          onDataReduced(movedItem);\n        }\n\n        newData.cacheKey = cacheKey;\n        return newData;\n      }\n\n      return undefined;\n    };\n\n    _this._onGrowData = function (data) {\n      var _a = _this.props,\n          shiftOnReduce = _a.shiftOnReduce,\n          onDataGrown = _a.onDataGrown;\n      var minimumOverflowItems = data.minimumOverflowItems;\n      var primaryItems = data.primaryItems,\n          overflowItems = data.overflowItems,\n          cacheKey = data.cacheKey;\n      var movedItem = overflowItems[0]; // Make sure that moved item exists and is not one of the original overflow items\n\n      if (movedItem !== undefined && overflowItems.length > minimumOverflowItems) {\n        movedItem.renderedInOverflow = false;\n        overflowItems = overflowItems.slice(1); // if shiftOnReduce, movedItem goes first, otherwise, last.\n\n        primaryItems = shiftOnReduce ? __spreadArray([movedItem], primaryItems) : __spreadArray(__spreadArray([], primaryItems), [movedItem]);\n\n        var newData = __assign(__assign({}, data), {\n          primaryItems: primaryItems,\n          overflowItems: overflowItems\n        });\n\n        cacheKey = _this._computeCacheKey({\n          primaryItems: primaryItems,\n          overflow: overflowItems.length > 0\n        });\n\n        if (onDataGrown) {\n          onDataGrown(movedItem);\n        }\n\n        newData.cacheKey = cacheKey;\n        return newData;\n      }\n\n      return undefined;\n    };\n\n    initializeComponentRef(_this);\n    return _this;\n  }\n\n  CommandBarBase.prototype.render = function () {\n    var _a = this.props,\n        items = _a.items,\n        overflowItems = _a.overflowItems,\n        farItems = _a.farItems,\n        styles = _a.styles,\n        theme = _a.theme,\n        dataDidRender = _a.dataDidRender,\n        _b = _a.onReduceData,\n        onReduceData = _b === void 0 ? this._onReduceData : _b,\n        _c = _a.onGrowData,\n        onGrowData = _c === void 0 ? this._onGrowData : _c,\n        _d = _a.resizeGroupAs,\n        ResizeGroupAs = _d === void 0 ? ResizeGroup : _d;\n    var commandBarData = {\n      primaryItems: __spreadArray([], items),\n      overflowItems: __spreadArray([], overflowItems),\n      minimumOverflowItems: __spreadArray([], overflowItems).length,\n      farItems: farItems,\n      cacheKey: this._computeCacheKey({\n        primaryItems: __spreadArray([], items),\n        overflow: overflowItems && overflowItems.length > 0\n      })\n    };\n    this._classNames = getClassNames(styles, {\n      theme: theme\n    }); // ResizeGroup will render these attributes to the root <div>.\n    // TODO We may need to elevate classNames from <FocusZone> into <ResizeGroup> ?\n\n    var nativeProps = getNativeProps(this.props, divProperties);\n    return React.createElement(ResizeGroupAs, __assign({}, nativeProps, {\n      componentRef: this._resizeGroup,\n      data: commandBarData,\n      onReduceData: onReduceData,\n      onGrowData: onGrowData,\n      onRenderData: this._onRenderData,\n      dataDidRender: dataDidRender\n    }));\n  };\n\n  CommandBarBase.prototype.focus = function () {\n    var overflowSet = this._overflowSet.current;\n    overflowSet && overflowSet.focus();\n  };\n\n  CommandBarBase.prototype.remeasure = function () {\n    this._resizeGroup.current && this._resizeGroup.current.remeasure();\n  };\n\n  CommandBarBase.prototype._onButtonClick = function (item) {\n    return function (ev) {\n      // inactive is deprecated. remove check in 7.0\n      // eslint-disable-next-line deprecation/deprecation\n      if (item.inactive) {\n        return;\n      }\n\n      if (item.onClick) {\n        item.onClick(ev, item);\n      }\n    };\n  };\n\n  CommandBarBase.prototype._computeCacheKey = function (data) {\n    var primaryItems = data.primaryItems,\n        overflow = data.overflow;\n\n    var returnKey = function (acc, current) {\n      var _a = current.cacheKey,\n          cacheKey = _a === void 0 ? current.key : _a;\n      return acc + cacheKey;\n    };\n\n    var primaryKey = primaryItems && primaryItems.reduce(returnKey, '');\n    var overflowKey = overflow ? 'overflow' : '';\n    return [primaryKey, overflowKey].join('');\n  };\n\n  CommandBarBase.defaultProps = {\n    items: [],\n    overflowItems: []\n  };\n  return CommandBarBase;\n}(React.Component);\n\nexport { CommandBarBase };","map":{"version":3,"mappings":"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","names":["React","classNamesFunction","css","nullRender","getNativeProps","divProperties","composeComponentAs","initializeComponentRef","OverflowSet","ResizeGroup","FocusZone","FocusZoneDirection","CommandBarButton","TooltipHost","getCommandButtonStyles","getClassNames","__extends","props","_super","_this","createRef","data","ariaLabel","primaryGroupAriaLabel","farItemsGroupAriaLabel","hasSecondSet","farItems","length","className","_classNames","root","direction","horizontal","role","undefined","componentRef","_overflowSet","primarySet","items","primaryItems","overflowItems","onRenderItem","_onRenderItem","onRenderOverflowButton","_onRenderOverflowButton","secondarySet","item","onRender","itemText","text","name","commandButtonProps","allowDisabledFocus","styles","buttonStyles","iconOnly","menuProps","subMenuProps","onClick","_onButtonClick","tooltipHostProps","__assign","content","setAriaDescribedBy","_commandButton","ButtonAs","buttonAs","CommandBarButtonAs","commandBarButtonAs","DefaultButtonAs","Type","overflowButtonProps","_a","combinedOverflowItems","overflowProps","menuIcon","fontSize","menuIconProps","iconName","OverflowButtonType","overflowButtonAs","shiftOnReduce","onDataReduced","cacheKey","movedItem","renderedInOverflow","slice","newData","_computeCacheKey","overflow","onDataGrown","minimumOverflowItems","__spreadArray","CommandBarBase","theme","dataDidRender","_b","onReduceData","_onReduceData","_c","onGrowData","_onGrowData","_d","ResizeGroupAs","commandBarData","nativeProps","_resizeGroup","onRenderData","_onRenderData","overflowSet","current","focus","remeasure","inactive","ev","returnKey","acc","key","primaryKey","reduce","overflowKey","join","Component"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\CommandBar\\CommandBar.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  classNamesFunction,\n  css,\n  nullRender,\n  getNativeProps,\n  divProperties,\n  composeComponentAs,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { OverflowSet } from '../../OverflowSet';\nimport { ResizeGroup } from '../../ResizeGroup';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { CommandBarButton } from '../../Button';\nimport { TooltipHost } from '../../Tooltip';\nimport { getCommandButtonStyles } from './CommandBar.styles';\nimport type { IComponentAs } from '../../Utilities';\nimport type {\n  ICommandBar,\n  ICommandBarItemProps,\n  ICommandBarProps,\n  ICommandBarStyleProps,\n  ICommandBarStyles,\n} from './CommandBar.types';\nimport type { IOverflowSet } from '../../OverflowSet';\nimport type { IResizeGroup } from '../../ResizeGroup';\nimport type { IButtonProps } from '../../Button';\n\nconst getClassNames = classNamesFunction<ICommandBarStyleProps, ICommandBarStyles>();\n\nexport interface ICommandBarData {\n  /**\n   * Items being rendered in the primary region\n   */\n  primaryItems: ICommandBarItemProps[];\n  /**\n   * Items being rendered in the overflow\n   */\n  overflowItems: ICommandBarItemProps[];\n  /**\n   * Items being rendered on the far side\n   */\n  farItems: ICommandBarItemProps[] | undefined;\n  /**\n   * Length of original overflowItems to ensure that they are not moved into primary region on resize\n   */\n  minimumOverflowItems: number;\n  /**\n   * Unique string used to cache the width of the command bar\n   */\n  cacheKey: string;\n}\n\nexport class CommandBarBase extends React.Component<ICommandBarProps, {}> implements ICommandBar {\n  public static defaultProps: ICommandBarProps = {\n    items: [],\n    overflowItems: [],\n  };\n\n  private _overflowSet = React.createRef<IOverflowSet>();\n  private _resizeGroup = React.createRef<IResizeGroup>();\n  private _classNames: { [key in keyof ICommandBarStyles]: string };\n\n  constructor(props: ICommandBarProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const {\n      items,\n      overflowItems,\n      farItems,\n      styles,\n      theme,\n      dataDidRender,\n      onReduceData = this._onReduceData,\n      onGrowData = this._onGrowData,\n      resizeGroupAs: ResizeGroupAs = ResizeGroup,\n    } = this.props;\n\n    const commandBarData: ICommandBarData = {\n      primaryItems: [...items],\n      overflowItems: [...overflowItems!],\n      minimumOverflowItems: [...overflowItems!].length, // for tracking\n      farItems,\n      cacheKey: this._computeCacheKey({\n        primaryItems: [...items],\n        overflow: overflowItems && overflowItems.length > 0,\n      }),\n    };\n\n    this._classNames = getClassNames(styles!, { theme: theme! });\n\n    // ResizeGroup will render these attributes to the root <div>.\n    // TODO We may need to elevate classNames from <FocusZone> into <ResizeGroup> ?\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    return (\n      <ResizeGroupAs\n        {...nativeProps}\n        componentRef={this._resizeGroup}\n        data={commandBarData}\n        onReduceData={onReduceData}\n        onGrowData={onGrowData}\n        onRenderData={this._onRenderData}\n        dataDidRender={dataDidRender}\n      />\n    );\n  }\n\n  public focus(): void {\n    const { current: overflowSet } = this._overflowSet;\n\n    overflowSet && overflowSet.focus();\n  }\n\n  public remeasure(): void {\n    this._resizeGroup.current && this._resizeGroup.current.remeasure();\n  }\n\n  private _onRenderData = (data: ICommandBarData): JSX.Element => {\n    const { ariaLabel, primaryGroupAriaLabel, farItemsGroupAriaLabel } = this.props;\n    const hasSecondSet = data.farItems && data.farItems.length > 0;\n\n    return (\n      <FocusZone\n        className={css(this._classNames.root)}\n        direction={FocusZoneDirection.horizontal}\n        role={'menubar'}\n        aria-label={ariaLabel}\n      >\n        {/*Primary Items*/}\n        <OverflowSet\n          role={hasSecondSet ? 'group' : 'none'}\n          aria-label={hasSecondSet ? primaryGroupAriaLabel : undefined}\n          componentRef={this._overflowSet}\n          className={css(this._classNames.primarySet)}\n          items={data.primaryItems}\n          overflowItems={data.overflowItems.length ? data.overflowItems : undefined}\n          onRenderItem={this._onRenderItem}\n          onRenderOverflowButton={this._onRenderOverflowButton}\n        />\n\n        {/*Secondary Items*/}\n        {hasSecondSet && (\n          <OverflowSet\n            role=\"group\"\n            aria-label={farItemsGroupAriaLabel}\n            className={css(this._classNames.secondarySet)}\n            items={data.farItems}\n            onRenderItem={this._onRenderItem}\n            onRenderOverflowButton={nullRender}\n          />\n        )}\n      </FocusZone>\n    );\n  };\n\n  private _onRenderItem = (item: ICommandBarItemProps): JSX.Element | React.ReactNode => {\n    if (item.onRender) {\n      // These are the top level items, there is no relevant menu dismissing function to\n      // provide for the IContextualMenuItem onRender function. Pass in a no op function instead.\n      return item.onRender(item, () => undefined);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const itemText = item.text || item.name;\n    const commandButtonProps: ICommandBarItemProps = {\n      allowDisabledFocus: true,\n      role: 'menuitem',\n      ...item,\n      styles: getCommandButtonStyles(item.buttonStyles),\n      className: css('ms-CommandBarItem-link', item.className),\n      text: !item.iconOnly ? itemText : undefined,\n      menuProps: item.subMenuProps,\n      onClick: this._onButtonClick(item),\n    };\n\n    if (item.iconOnly && (itemText !== undefined || item.tooltipHostProps)) {\n      return (\n        <TooltipHost role=\"none\" content={itemText} setAriaDescribedBy={false} {...item.tooltipHostProps}>\n          {this._commandButton(item, commandButtonProps)}\n        </TooltipHost>\n      );\n    }\n\n    return this._commandButton(item, commandButtonProps);\n  };\n\n  private _commandButton = (item: ICommandBarItemProps, props: ICommandBarItemProps): JSX.Element => {\n    const ButtonAs = this.props.buttonAs as IComponentAs<ICommandBarItemProps> | undefined;\n    const CommandBarButtonAs = item.commandBarButtonAs as IComponentAs<ICommandBarItemProps> | undefined;\n    const DefaultButtonAs = (CommandBarButton as {}) as IComponentAs<ICommandBarItemProps>;\n\n    // The prop types between these three possible implementations overlap enough that a force-cast is safe.\n    let Type = DefaultButtonAs;\n\n    if (CommandBarButtonAs) {\n      Type = composeComponentAs(CommandBarButtonAs, Type);\n    }\n\n    if (ButtonAs) {\n      Type = composeComponentAs(ButtonAs, Type);\n    }\n\n    // Always pass the default implementation to the override so it may be composed.\n    return <Type {...(props as ICommandBarItemProps)} />;\n  };\n\n  private _onButtonClick(item: ICommandBarItemProps): (ev: React.MouseEvent<HTMLButtonElement>) => void {\n    return ev => {\n      // inactive is deprecated. remove check in 7.0\n      // eslint-disable-next-line deprecation/deprecation\n      if (item.inactive) {\n        return;\n      }\n      if (item.onClick) {\n        item.onClick(ev, item);\n      }\n    };\n  }\n\n  private _onRenderOverflowButton = (overflowItems: ICommandBarItemProps[]): JSX.Element => {\n    const {\n      overflowButtonProps = {}, // assure that props is not empty\n    } = this.props;\n\n    const combinedOverflowItems: ICommandBarItemProps[] = [\n      ...(overflowButtonProps.menuProps ? overflowButtonProps.menuProps.items : []),\n      ...overflowItems,\n    ];\n\n    const overflowProps: IButtonProps = {\n      role: 'menuitem',\n      ...overflowButtonProps,\n      styles: { menuIcon: { fontSize: '17px' }, ...overflowButtonProps.styles },\n      className: css('ms-CommandBar-overflowButton', overflowButtonProps.className),\n      menuProps: { ...overflowButtonProps.menuProps, items: combinedOverflowItems },\n      menuIconProps: { iconName: 'More', ...overflowButtonProps.menuIconProps },\n    };\n\n    const OverflowButtonType = this.props.overflowButtonAs\n      ? composeComponentAs(this.props.overflowButtonAs, CommandBarButton)\n      : CommandBarButton;\n\n    return <OverflowButtonType {...(overflowProps as IButtonProps)} />;\n  };\n\n  private _computeCacheKey(data: { primaryItems?: ICommandBarItemProps[]; overflow?: boolean }): string {\n    const { primaryItems, overflow } = data;\n    const returnKey = (acc: string, current: ICommandBarItemProps): string => {\n      const { cacheKey = current.key } = current;\n      return acc + cacheKey;\n    };\n\n    const primaryKey = primaryItems && primaryItems.reduce(returnKey, '');\n    const overflowKey = overflow ? 'overflow' : '';\n\n    return [primaryKey, overflowKey].join('');\n  }\n\n  private _onReduceData = (data: ICommandBarData): ICommandBarData | undefined => {\n    const { shiftOnReduce, onDataReduced } = this.props;\n    let { primaryItems, overflowItems, cacheKey } = data;\n\n    // Use first item if shiftOnReduce, otherwise use last item\n    const movedItem = primaryItems[shiftOnReduce ? 0 : primaryItems.length - 1];\n\n    if (movedItem !== undefined) {\n      movedItem.renderedInOverflow = true;\n\n      overflowItems = [movedItem, ...overflowItems];\n      primaryItems = shiftOnReduce ? primaryItems.slice(1) : primaryItems.slice(0, -1);\n\n      const newData = { ...data, primaryItems, overflowItems };\n      cacheKey = this._computeCacheKey({ primaryItems, overflow: overflowItems.length > 0 });\n\n      if (onDataReduced) {\n        onDataReduced(movedItem);\n      }\n\n      newData.cacheKey = cacheKey;\n      return newData;\n    }\n\n    return undefined;\n  };\n\n  private _onGrowData = (data: ICommandBarData): ICommandBarData | undefined => {\n    const { shiftOnReduce, onDataGrown } = this.props;\n    const { minimumOverflowItems } = data;\n    let { primaryItems, overflowItems, cacheKey } = data;\n    const movedItem = overflowItems[0];\n\n    // Make sure that moved item exists and is not one of the original overflow items\n    if (movedItem !== undefined && overflowItems.length > minimumOverflowItems) {\n      movedItem.renderedInOverflow = false;\n\n      overflowItems = overflowItems.slice(1);\n      // if shiftOnReduce, movedItem goes first, otherwise, last.\n      primaryItems = shiftOnReduce ? [movedItem, ...primaryItems] : [...primaryItems, movedItem];\n\n      const newData = { ...data, primaryItems, overflowItems };\n      cacheKey = this._computeCacheKey({ primaryItems, overflow: overflowItems.length > 0 });\n\n      if (onDataGrown) {\n        onDataGrown(movedItem);\n      }\n\n      newData.cacheKey = cacheKey;\n      return newData;\n    }\n\n    return undefined;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}