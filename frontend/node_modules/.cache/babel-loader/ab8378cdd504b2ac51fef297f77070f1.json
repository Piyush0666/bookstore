{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Icon, FontIcon } from '../../Icon';\nimport { initializeComponentRef, EventGroup, Async, classNamesFunction, composeRenderFunction } from '../../Utilities';\nimport { ColumnActionsMode } from './DetailsList.types';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nvar MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\n\nvar getClassNames = classNamesFunction();\nvar TRANSITION_DURATION_DRAG = 200; // ms\n\nvar TRANSITION_DURATION_DROP = 1500; // ms\n\nvar CLASSNAME_ADD_INTERVAL = 20; // ms\n\nvar defaultOnRenderHeader = function (classNames) {\n  return function (props) {\n    if (!props) {\n      return null;\n    }\n\n    if (props.column.isIconOnly) {\n      return React.createElement(\"span\", {\n        className: classNames.accessibleLabel\n      }, props.column.name);\n    }\n\n    return React.createElement(React.Fragment, null, props.column.name);\n  };\n};\n/**\n * Component for rendering columns in a `DetailsList`.\n *\n * {@docCategory DetailsList}\n */\n\n\nvar DetailsColumnBase =\n/** @class */\nfunction (_super) {\n  __extends(DetailsColumnBase, _super);\n\n  function DetailsColumnBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._root = React.createRef();\n\n    _this._onRenderFilterIcon = function (classNames) {\n      return function (props) {\n        var columnProps = props.columnProps,\n            iconProps = __rest(props, [\"columnProps\"]);\n\n        var IconComponent = (columnProps === null || columnProps === void 0 ? void 0 : columnProps.useFastIcons) ? FontIcon : Icon;\n        return React.createElement(IconComponent, __assign({}, iconProps));\n      };\n    };\n\n    _this._onRenderColumnHeaderTooltip = function (tooltipHostProps) {\n      return React.createElement(\"span\", {\n        className: tooltipHostProps.hostClassName\n      }, tooltipHostProps.children);\n    };\n\n    _this._onColumnClick = function (ev) {\n      var _a = _this.props,\n          onColumnClick = _a.onColumnClick,\n          column = _a.column;\n\n      if (column.columnActionsMode === ColumnActionsMode.disabled) {\n        return;\n      }\n\n      if (column.onColumnClick) {\n        column.onColumnClick(ev, column);\n      }\n\n      if (onColumnClick) {\n        onColumnClick(ev, column);\n      }\n    };\n\n    _this._onDragStart = function (item, itemIndex, selectedItems, event) {\n      var classNames = _this._classNames;\n\n      if (itemIndex) {\n        _this._updateHeaderDragInfo(itemIndex);\n\n        _this._root.current.classList.add(classNames.borderWhileDragging);\n\n        _this._async.setTimeout(function () {\n          if (_this._root.current) {\n            _this._root.current.classList.add(classNames.noBorderWhileDragging);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n    };\n\n    _this._onDragEnd = function (item, event) {\n      var classNames = _this._classNames;\n\n      if (event) {\n        _this._updateHeaderDragInfo(-1, event);\n      }\n\n      _this._root.current.classList.remove(classNames.borderWhileDragging);\n\n      _this._root.current.classList.remove(classNames.noBorderWhileDragging);\n    };\n\n    _this._updateHeaderDragInfo = function (itemIndex, event) {\n      /* eslint-disable deprecation/deprecation */\n      if (_this.props.setDraggedItemIndex) {\n        _this.props.setDraggedItemIndex(itemIndex);\n      }\n      /* eslint-enable deprecation/deprecation */\n\n\n      if (_this.props.updateDragInfo) {\n        _this.props.updateDragInfo({\n          itemIndex: itemIndex\n        }, event);\n      }\n    };\n\n    _this._onColumnContextMenu = function (ev) {\n      var _a = _this.props,\n          onColumnContextMenu = _a.onColumnContextMenu,\n          column = _a.column;\n\n      if (column.onColumnContextMenu) {\n        column.onColumnContextMenu(column, ev);\n        ev.preventDefault();\n      }\n\n      if (onColumnContextMenu) {\n        onColumnContextMenu(column, ev);\n        ev.preventDefault();\n      }\n    };\n\n    _this._onRootMouseDown = function (ev) {\n      var isDraggable = _this.props.isDraggable; // Ignore anything except the primary button.\n\n      if (isDraggable && ev.button === MOUSEDOWN_PRIMARY_BUTTON) {\n        ev.stopPropagation();\n      }\n    };\n\n    initializeComponentRef(_this);\n    _this._async = new Async(_this);\n    _this._events = new EventGroup(_this);\n    return _this;\n  }\n\n  DetailsColumnBase.prototype.render = function () {\n    var _a = this.props,\n        column = _a.column,\n        parentId = _a.parentId,\n        isDraggable = _a.isDraggable,\n        styles = _a.styles,\n        theme = _a.theme,\n        _b = _a.cellStyleProps,\n        cellStyleProps = _b === void 0 ? DEFAULT_CELL_STYLE_PROPS : _b,\n        _c = _a.useFastIcons,\n        useFastIcons = _c === void 0 ? true : _c;\n    var _d = this.props.onRenderColumnHeaderTooltip,\n        onRenderColumnHeaderTooltip = _d === void 0 ? this._onRenderColumnHeaderTooltip : _d;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      headerClassName: column.headerClassName,\n      iconClassName: column.iconClassName,\n      isActionable: column.columnActionsMode !== ColumnActionsMode.disabled,\n      isEmpty: !column.name,\n      isIconVisible: column.isSorted || column.isGrouped || column.isFiltered,\n      isPadded: column.isPadded,\n      isIconOnly: column.isIconOnly,\n      cellStyleProps: cellStyleProps,\n      transitionDurationDrag: TRANSITION_DURATION_DRAG,\n      transitionDurationDrop: TRANSITION_DURATION_DROP\n    });\n    var classNames = this._classNames;\n    var IconComponent = useFastIcons ? FontIcon : Icon;\n    var onRenderFilterIcon = column.onRenderFilterIcon ? composeRenderFunction(column.onRenderFilterIcon, this._onRenderFilterIcon(this._classNames)) : this._onRenderFilterIcon(this._classNames);\n    var onRenderHeader = column.onRenderHeader ? composeRenderFunction(column.onRenderHeader, defaultOnRenderHeader(this._classNames)) : defaultOnRenderHeader(this._classNames);\n    var hasInnerButton = column.columnActionsMode !== ColumnActionsMode.disabled && (column.onColumnClick !== undefined || this.props.onColumnClick !== undefined);\n    var accNameDescription = {\n      'aria-label': column.ariaLabel ? column.ariaLabel : column.isIconOnly ? column.name : undefined,\n      'aria-labelledby': column.ariaLabel || column.isIconOnly ? undefined : parentId + \"-\" + column.key + \"-name\",\n      'aria-describedby': !this.props.onRenderColumnHeaderTooltip && this._hasAccessibleDescription() ? parentId + \"-\" + column.key + \"-tooltip\" : undefined\n    };\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", __assign({\n      key: column.key,\n      ref: this._root,\n      role: 'columnheader'\n    }, !hasInnerButton && accNameDescription, {\n      \"aria-sort\": column.isSorted ? column.isSortedDescending ? 'descending' : 'ascending' : 'none',\n      \"data-is-focusable\": !hasInnerButton && column.columnActionsMode !== ColumnActionsMode.disabled ? 'true' : undefined,\n      className: classNames.root,\n      \"data-is-draggable\": isDraggable,\n      draggable: isDraggable,\n      style: {\n        width: column.calculatedWidth + cellStyleProps.cellLeftPadding + cellStyleProps.cellRightPadding + (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0)\n      },\n      \"data-automationid\": 'ColumnsHeaderColumn',\n      \"data-item-key\": column.key\n    }), isDraggable && React.createElement(IconComponent, {\n      iconName: \"GripperBarVertical\",\n      className: classNames.gripperBarVerticalStyle\n    }), onRenderColumnHeaderTooltip({\n      hostClassName: classNames.cellTooltip,\n      id: parentId + \"-\" + column.key + \"-tooltip\",\n      setAriaDescribedBy: false,\n      column: column,\n      content: column.columnActionsMode !== ColumnActionsMode.disabled ? column.ariaLabel : '',\n      children: React.createElement(\"span\", __assign({\n        id: parentId + \"-\" + column.key,\n        className: classNames.cellTitle,\n        \"data-is-focusable\": hasInnerButton && column.columnActionsMode !== ColumnActionsMode.disabled ? 'true' : undefined,\n        role: hasInnerButton ? 'button' : undefined\n      }, hasInnerButton && accNameDescription, {\n        onContextMenu: this._onColumnContextMenu,\n        onClick: this._onColumnClick,\n        \"aria-haspopup\": column.columnActionsMode === ColumnActionsMode.hasDropdown ? 'menu' : undefined,\n        \"aria-expanded\": column.columnActionsMode === ColumnActionsMode.hasDropdown ? !!column.isMenuOpen : undefined\n      }), React.createElement(\"span\", {\n        id: parentId + \"-\" + column.key + \"-name\",\n        className: classNames.cellName\n      }, (column.iconName || column.iconClassName) && React.createElement(IconComponent, {\n        className: classNames.iconClassName,\n        iconName: column.iconName\n      }), onRenderHeader(this.props)), column.isFiltered && React.createElement(IconComponent, {\n        className: classNames.nearIcon,\n        iconName: \"Filter\"\n      }), (column.isSorted || column.showSortIconWhenUnsorted) && React.createElement(IconComponent, {\n        className: classNames.sortIcon,\n        iconName: column.isSorted ? column.isSortedDescending ? 'SortDown' : 'SortUp' : 'Sort'\n      }), column.isGrouped && React.createElement(IconComponent, {\n        className: classNames.nearIcon,\n        iconName: \"GroupedDescending\"\n      }), column.columnActionsMode === ColumnActionsMode.hasDropdown && !column.isIconOnly && onRenderFilterIcon({\n        'aria-hidden': true,\n        columnProps: this.props,\n        className: classNames.filterChevron,\n        iconName: 'ChevronDown'\n      }))\n    }, this._onRenderColumnHeaderTooltip)), !this.props.onRenderColumnHeaderTooltip ? this._renderAccessibleDescription() : null);\n  };\n\n  DetailsColumnBase.prototype.componentDidMount = function () {\n    var _this = this;\n\n    if (this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    var classNames = this._classNames;\n\n    if (this.props.isDropped) {\n      if (this._root.current) {\n        this._root.current.classList.add(classNames.borderAfterDropping);\n\n        this._async.setTimeout(function () {\n          if (_this._root.current) {\n            _this._root.current.classList.add(classNames.noBorderAfterDropping);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n\n      this._async.setTimeout(function () {\n        if (_this._root.current) {\n          _this._root.current.classList.remove(classNames.borderAfterDropping);\n\n          _this._root.current.classList.remove(classNames.noBorderAfterDropping);\n        }\n      }, TRANSITION_DURATION_DROP + CLASSNAME_ADD_INTERVAL);\n    }\n  };\n\n  DetailsColumnBase.prototype.componentWillUnmount = function () {\n    if (this._dragDropSubscription) {\n      this._dragDropSubscription.dispose();\n\n      delete this._dragDropSubscription;\n    }\n\n    this._async.dispose();\n\n    this._events.dispose();\n  };\n\n  DetailsColumnBase.prototype.componentDidUpdate = function () {\n    if (!this._dragDropSubscription && this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    if (this._dragDropSubscription && !this.props.isDraggable) {\n      this._dragDropSubscription.dispose();\n\n      this._events.off(this._root.current, 'mousedown');\n\n      delete this._dragDropSubscription;\n    }\n  };\n\n  DetailsColumnBase.prototype._getColumnDragDropOptions = function () {\n    var _this = this;\n\n    var columnIndex = this.props.columnIndex;\n    var options = {\n      selectionIndex: columnIndex,\n      context: {\n        data: columnIndex,\n        index: columnIndex\n      },\n      canDrag: function () {\n        return _this.props.isDraggable;\n      },\n      canDrop: function () {\n        return false;\n      },\n      onDragStart: this._onDragStart,\n      updateDropState: function () {\n        return undefined;\n      },\n      onDrop: function () {\n        return undefined;\n      },\n      onDragEnd: this._onDragEnd\n    };\n    return options;\n  };\n\n  DetailsColumnBase.prototype._hasAccessibleDescription = function () {\n    var column = this.props.column;\n    return !!(column.filterAriaLabel || column.sortAscendingAriaLabel || column.sortDescendingAriaLabel || column.groupAriaLabel || column.sortableAriaLabel);\n  };\n\n  DetailsColumnBase.prototype._renderAccessibleDescription = function () {\n    var _a = this.props,\n        column = _a.column,\n        parentId = _a.parentId;\n    var classNames = this._classNames;\n    return this._hasAccessibleDescription() && !this.props.onRenderColumnHeaderTooltip ? React.createElement(\"label\", {\n      key: column.key + \"_label\",\n      id: parentId + \"-\" + column.key + \"-tooltip\",\n      className: classNames.accessibleLabel,\n      hidden: true\n    }, column.isFiltered && column.filterAriaLabel || null, (column.isSorted || column.showSortIconWhenUnsorted) && (column.isSorted ? column.isSortedDescending ? column.sortDescendingAriaLabel : column.sortAscendingAriaLabel : column.sortableAriaLabel) || null, column.isGrouped && column.groupAriaLabel || null) : null;\n  };\n\n  DetailsColumnBase.prototype._addDragDropHandling = function () {\n    this._dragDropSubscription = this.props.dragDropHelper.subscribe(this._root.current, this._events, this._getColumnDragDropOptions()); // We need to use native on this to prevent MarqueeSelection from handling the event before us.\n\n    this._events.on(this._root.current, 'mousedown', this._onRootMouseDown);\n  };\n\n  return DetailsColumnBase;\n}(React.Component);\n\nexport { DetailsColumnBase };","map":{"version":3,"mappings":"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","names":["React","Icon","FontIcon","initializeComponentRef","EventGroup","Async","classNamesFunction","composeRenderFunction","ColumnActionsMode","DEFAULT_CELL_STYLE_PROPS","MOUSEDOWN_PRIMARY_BUTTON","getClassNames","TRANSITION_DURATION_DRAG","TRANSITION_DURATION_DROP","CLASSNAME_ADD_INTERVAL","defaultOnRenderHeader","classNames","props","column","isIconOnly","className","accessibleLabel","name","__extends","_super","_this","createRef","iconProps","IconComponent","useFastIcons","__assign","tooltipHostProps","hostClassName","children","ev","onColumnClick","columnActionsMode","disabled","item","itemIndex","selectedItems","event","_classNames","_updateHeaderDragInfo","_root","current","classList","add","borderWhileDragging","_async","setTimeout","noBorderWhileDragging","remove","setDraggedItemIndex","updateDragInfo","onColumnContextMenu","preventDefault","isDraggable","button","stopPropagation","_events","DetailsColumnBase","parentId","styles","theme","_b","cellStyleProps","_c","onRenderColumnHeaderTooltip","_onRenderColumnHeaderTooltip","_d","headerClassName","iconClassName","isActionable","isEmpty","isIconVisible","isSorted","isGrouped","isFiltered","isPadded","transitionDurationDrag","transitionDurationDrop","onRenderFilterIcon","_onRenderFilterIcon","onRenderHeader","hasInnerButton","undefined","accNameDescription","ariaLabel","key","_hasAccessibleDescription","ref","role","isSortedDescending","root","draggable","style","width","calculatedWidth","cellLeftPadding","cellRightPadding","cellExtraRightPadding","iconName","gripperBarVerticalStyle","cellTooltip","id","setAriaDescribedBy","content","cellTitle","onContextMenu","_onColumnContextMenu","onClick","_onColumnClick","hasDropdown","isMenuOpen","cellName","nearIcon","showSortIconWhenUnsorted","sortIcon","columnProps","filterChevron","_renderAccessibleDescription","dragDropHelper","_addDragDropHandling","isDropped","borderAfterDropping","noBorderAfterDropping","_dragDropSubscription","dispose","off","columnIndex","options","selectionIndex","context","data","index","canDrag","canDrop","onDragStart","_onDragStart","updateDropState","onDrop","onDragEnd","_onDragEnd","filterAriaLabel","sortAscendingAriaLabel","sortDescendingAriaLabel","groupAriaLabel","sortableAriaLabel","hidden","subscribe","_getColumnDragDropOptions","on","_onRootMouseDown","Component"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\DetailsList\\DetailsColumn.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon, FontIcon } from '../../Icon';\nimport { initializeComponentRef, EventGroup, Async, classNamesFunction, composeRenderFunction } from '../../Utilities';\nimport { ColumnActionsMode } from './DetailsList.types';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { IDisposable } from '../../Utilities';\nimport type { IDragDropOptions } from '../../DragDrop';\nimport type {\n  IDetailsColumnStyleProps,\n  IDetailsColumnProps,\n  IDetailsColumnStyles,\n  IDetailsColumnRenderTooltipProps,\n  IDetailsColumnFilterIconProps,\n} from './DetailsColumn.types';\n\nconst MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\n\nconst getClassNames = classNamesFunction<IDetailsColumnStyleProps, IDetailsColumnStyles>();\nconst TRANSITION_DURATION_DRAG = 200; // ms\nconst TRANSITION_DURATION_DROP = 1500; // ms\nconst CLASSNAME_ADD_INTERVAL = 20; // ms\n\nconst defaultOnRenderHeader = (classNames: IProcessedStyleSet<IDetailsColumnStyles>) => (\n  props?: IDetailsColumnProps,\n): JSX.Element | null => {\n  if (!props) {\n    return null;\n  }\n\n  if (props.column.isIconOnly) {\n    return <span className={classNames.accessibleLabel}>{props.column.name}</span>;\n  }\n\n  return <>{props.column.name}</>;\n};\n\n/**\n * Component for rendering columns in a `DetailsList`.\n *\n * {@docCategory DetailsList}\n */\nexport class DetailsColumnBase extends React.Component<IDetailsColumnProps> {\n  private _async: Async;\n  private _events: EventGroup;\n  private _root = React.createRef<HTMLDivElement>();\n  private _dragDropSubscription?: IDisposable;\n  private _classNames: IProcessedStyleSet<IDetailsColumnStyles>;\n\n  constructor(props: IDetailsColumnProps) {\n    super(props);\n    initializeComponentRef(this);\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n  }\n\n  public render(): JSX.Element {\n    const {\n      column,\n      parentId,\n      isDraggable,\n      styles,\n      theme,\n      cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n      useFastIcons = true,\n    } = this.props;\n    const { onRenderColumnHeaderTooltip = this._onRenderColumnHeaderTooltip } = this.props;\n\n    this._classNames = getClassNames(styles, {\n      theme: theme!,\n      headerClassName: column.headerClassName,\n      iconClassName: column.iconClassName,\n      isActionable: column.columnActionsMode !== ColumnActionsMode.disabled,\n      isEmpty: !column.name,\n      isIconVisible: column.isSorted || column.isGrouped || column.isFiltered,\n      isPadded: column.isPadded,\n      isIconOnly: column.isIconOnly,\n      cellStyleProps,\n      transitionDurationDrag: TRANSITION_DURATION_DRAG,\n      transitionDurationDrop: TRANSITION_DURATION_DROP,\n    });\n\n    const classNames = this._classNames;\n    const IconComponent = useFastIcons ? FontIcon : Icon;\n\n    const onRenderFilterIcon = column.onRenderFilterIcon\n      ? composeRenderFunction(column.onRenderFilterIcon, this._onRenderFilterIcon(this._classNames))\n      : this._onRenderFilterIcon(this._classNames);\n\n    const onRenderHeader = column.onRenderHeader\n      ? composeRenderFunction(column.onRenderHeader, defaultOnRenderHeader(this._classNames))\n      : defaultOnRenderHeader(this._classNames);\n\n    const hasInnerButton =\n      column.columnActionsMode !== ColumnActionsMode.disabled &&\n      (column.onColumnClick !== undefined || this.props.onColumnClick !== undefined);\n    const accNameDescription = {\n      'aria-label': column.ariaLabel ? column.ariaLabel : column.isIconOnly ? column.name : undefined,\n      'aria-labelledby': column.ariaLabel || column.isIconOnly ? undefined : `${parentId}-${column.key}-name`,\n      'aria-describedby':\n        !this.props.onRenderColumnHeaderTooltip && this._hasAccessibleDescription()\n          ? `${parentId}-${column.key}-tooltip`\n          : undefined,\n    };\n\n    return (\n      <>\n        <div\n          key={column.key}\n          ref={this._root}\n          role={'columnheader'}\n          {...(!hasInnerButton && accNameDescription)}\n          aria-sort={column.isSorted ? (column.isSortedDescending ? 'descending' : 'ascending') : 'none'}\n          // when the column is not disabled and has no inner button, this node should be in the focus order\n          data-is-focusable={\n            !hasInnerButton && column.columnActionsMode !== ColumnActionsMode.disabled ? 'true' : undefined\n          }\n          className={classNames.root}\n          data-is-draggable={isDraggable}\n          draggable={isDraggable}\n          style={{\n            width:\n              column.calculatedWidth! +\n              cellStyleProps.cellLeftPadding +\n              cellStyleProps.cellRightPadding +\n              (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0),\n          }}\n          data-automationid={'ColumnsHeaderColumn'}\n          data-item-key={column.key}\n        >\n          {isDraggable && (\n            <IconComponent iconName=\"GripperBarVertical\" className={classNames.gripperBarVerticalStyle} />\n          )}\n          {onRenderColumnHeaderTooltip(\n            {\n              hostClassName: classNames.cellTooltip,\n              id: `${parentId}-${column.key}-tooltip`,\n              setAriaDescribedBy: false,\n              column,\n              content: column.columnActionsMode !== ColumnActionsMode.disabled ? column.ariaLabel : '',\n              children: (\n                <span\n                  id={`${parentId}-${column.key}`}\n                  className={classNames.cellTitle}\n                  // this node should only be focusable when it is a button\n                  data-is-focusable={\n                    hasInnerButton && column.columnActionsMode !== ColumnActionsMode.disabled ? 'true' : undefined\n                  }\n                  role={hasInnerButton ? 'button' : undefined}\n                  {...(hasInnerButton && accNameDescription)}\n                  onContextMenu={this._onColumnContextMenu}\n                  onClick={this._onColumnClick}\n                  aria-haspopup={column.columnActionsMode === ColumnActionsMode.hasDropdown ? 'menu' : undefined}\n                  aria-expanded={\n                    column.columnActionsMode === ColumnActionsMode.hasDropdown ? !!column.isMenuOpen : undefined\n                  }\n                >\n                  <span id={`${parentId}-${column.key}-name`} className={classNames.cellName}>\n                    {(column.iconName || column.iconClassName) && (\n                      <IconComponent className={classNames.iconClassName} iconName={column.iconName} />\n                    )}\n\n                    {onRenderHeader(this.props)}\n                  </span>\n\n                  {column.isFiltered && <IconComponent className={classNames.nearIcon} iconName=\"Filter\" />}\n\n                  {(column.isSorted || column.showSortIconWhenUnsorted) && (\n                    <IconComponent\n                      className={classNames.sortIcon}\n                      iconName={column.isSorted ? (column.isSortedDescending ? 'SortDown' : 'SortUp') : 'Sort'}\n                    />\n                  )}\n\n                  {column.isGrouped && <IconComponent className={classNames.nearIcon} iconName=\"GroupedDescending\" />}\n\n                  {column.columnActionsMode === ColumnActionsMode.hasDropdown &&\n                    !column.isIconOnly &&\n                    onRenderFilterIcon({\n                      'aria-hidden': true,\n                      columnProps: this.props,\n                      className: classNames.filterChevron,\n                      iconName: 'ChevronDown',\n                    })}\n                </span>\n              ),\n            },\n            this._onRenderColumnHeaderTooltip,\n          )}\n        </div>\n        {!this.props.onRenderColumnHeaderTooltip ? this._renderAccessibleDescription() : null}\n      </>\n    );\n  }\n\n  public componentDidMount(): void {\n    if (this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    const classNames = this._classNames;\n\n    if (this.props.isDropped) {\n      if (this._root.current) {\n        this._root.current.classList.add(classNames.borderAfterDropping);\n\n        this._async.setTimeout(() => {\n          if (this._root.current) {\n            this._root.current.classList.add(classNames.noBorderAfterDropping);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n\n      this._async.setTimeout(() => {\n        if (this._root.current) {\n          this._root.current.classList.remove(classNames.borderAfterDropping);\n          this._root.current.classList.remove(classNames.noBorderAfterDropping);\n        }\n      }, TRANSITION_DURATION_DROP + CLASSNAME_ADD_INTERVAL);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    if (this._dragDropSubscription) {\n      this._dragDropSubscription.dispose();\n      delete this._dragDropSubscription;\n    }\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public componentDidUpdate(): void {\n    if (!this._dragDropSubscription && this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    if (this._dragDropSubscription && !this.props.isDraggable) {\n      this._dragDropSubscription.dispose();\n      this._events.off(this._root.current, 'mousedown');\n      delete this._dragDropSubscription;\n    }\n  }\n\n  private _onRenderFilterIcon = (classNames: IProcessedStyleSet<IDetailsColumnStyles>) => (\n    props: IDetailsColumnFilterIconProps,\n  ): JSX.Element => {\n    const { columnProps, ...iconProps } = props;\n    const IconComponent = columnProps?.useFastIcons ? FontIcon : Icon;\n\n    return <IconComponent {...iconProps} />;\n  };\n\n  private _onRenderColumnHeaderTooltip = (tooltipHostProps: IDetailsColumnRenderTooltipProps): JSX.Element => {\n    return <span className={tooltipHostProps.hostClassName}>{tooltipHostProps.children}</span>;\n  };\n\n  private _onColumnClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { onColumnClick, column } = this.props;\n\n    if (column.columnActionsMode === ColumnActionsMode.disabled) {\n      return;\n    }\n\n    if (column.onColumnClick) {\n      column.onColumnClick(ev, column);\n    }\n\n    if (onColumnClick) {\n      onColumnClick(ev, column);\n    }\n  };\n\n  private _getColumnDragDropOptions(): IDragDropOptions {\n    const { columnIndex } = this.props;\n    const options = {\n      selectionIndex: columnIndex,\n      context: { data: columnIndex, index: columnIndex },\n      canDrag: () => this.props.isDraggable!,\n      canDrop: () => false,\n      onDragStart: this._onDragStart,\n      updateDropState: () => undefined,\n      onDrop: () => undefined,\n      onDragEnd: this._onDragEnd,\n    };\n    return options;\n  }\n\n  private _hasAccessibleDescription(): boolean {\n    const { column } = this.props;\n\n    return !!(\n      column.filterAriaLabel ||\n      column.sortAscendingAriaLabel ||\n      column.sortDescendingAriaLabel ||\n      column.groupAriaLabel ||\n      column.sortableAriaLabel\n    );\n  }\n\n  private _renderAccessibleDescription(): JSX.Element | null {\n    const { column, parentId } = this.props;\n    const classNames = this._classNames;\n\n    return this._hasAccessibleDescription() && !this.props.onRenderColumnHeaderTooltip ? (\n      <label\n        key={`${column.key}_label`}\n        id={`${parentId}-${column.key}-tooltip`}\n        className={classNames.accessibleLabel}\n        hidden\n      >\n        {(column.isFiltered && column.filterAriaLabel) || null}\n        {((column.isSorted || column.showSortIconWhenUnsorted) &&\n          (column.isSorted\n            ? column.isSortedDescending\n              ? column.sortDescendingAriaLabel\n              : column.sortAscendingAriaLabel\n            : column.sortableAriaLabel)) ||\n          null}\n        {(column.isGrouped && column.groupAriaLabel) || null}\n      </label>\n    ) : null;\n  }\n\n  private _onDragStart = (item?: any, itemIndex?: number, selectedItems?: any[], event?: MouseEvent): void => {\n    const classNames = this._classNames;\n    if (itemIndex) {\n      this._updateHeaderDragInfo(itemIndex);\n      this._root.current!.classList.add(classNames.borderWhileDragging);\n      this._async.setTimeout(() => {\n        if (this._root.current) {\n          this._root.current.classList.add(classNames.noBorderWhileDragging);\n        }\n      }, CLASSNAME_ADD_INTERVAL);\n    }\n  };\n\n  private _onDragEnd = (item?: any, event?: MouseEvent): void => {\n    const classNames = this._classNames;\n    if (event) {\n      this._updateHeaderDragInfo(-1, event);\n    }\n    this._root.current!.classList.remove(classNames.borderWhileDragging);\n    this._root.current!.classList.remove(classNames.noBorderWhileDragging);\n  };\n\n  private _updateHeaderDragInfo = (itemIndex: number, event?: MouseEvent) => {\n    /* eslint-disable deprecation/deprecation */\n    if (this.props.setDraggedItemIndex) {\n      this.props.setDraggedItemIndex(itemIndex);\n    }\n    /* eslint-enable deprecation/deprecation */\n    if (this.props.updateDragInfo) {\n      this.props.updateDragInfo({ itemIndex }, event);\n    }\n  };\n\n  private _onColumnContextMenu = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { onColumnContextMenu, column } = this.props;\n    if (column.onColumnContextMenu) {\n      column.onColumnContextMenu(column, ev);\n      ev.preventDefault();\n    }\n    if (onColumnContextMenu) {\n      onColumnContextMenu(column, ev);\n      ev.preventDefault();\n    }\n  };\n\n  private _onRootMouseDown = (ev: MouseEvent): void => {\n    const { isDraggable } = this.props;\n    // Ignore anything except the primary button.\n    if (isDraggable && ev.button === MOUSEDOWN_PRIMARY_BUTTON) {\n      ev.stopPropagation();\n    }\n  };\n\n  private _addDragDropHandling() {\n    this._dragDropSubscription = this.props.dragDropHelper!.subscribe(\n      this._root.current!,\n      this._events,\n      this._getColumnDragDropOptions(),\n    );\n\n    // We need to use native on this to prevent MarqueeSelection from handling the event before us.\n    this._events.on(this._root.current, 'mousedown', this._onRootMouseDown);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}