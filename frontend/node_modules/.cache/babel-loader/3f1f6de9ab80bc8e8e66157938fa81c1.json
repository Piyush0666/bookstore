{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getGlobalClassNames, getHighContrastNoAdjustStyle, HighContrastSelector, hiddenContentStyle } from '../../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Suggestions',\n  suggestionsContainer: 'ms-Suggestions-container',\n  title: 'ms-Suggestions-title',\n  forceResolveButton: 'ms-forceResolve-button',\n  searchForMoreButton: 'ms-SearchMore-button',\n  spinner: 'ms-Suggestions-spinner',\n  noSuggestions: 'ms-Suggestions-none',\n  suggestionsAvailable: 'ms-Suggestions-suggestionsAvailable',\n  isSelected: 'is-selected'\n};\nexport function getStyles(props) {\n  var _a;\n\n  var className = props.className,\n      suggestionsClassName = props.suggestionsClassName,\n      theme = props.theme,\n      forceResolveButtonSelected = props.forceResolveButtonSelected,\n      searchForMoreButtonSelected = props.searchForMoreButtonSelected;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var actionButtonStyles = {\n    backgroundColor: 'transparent',\n    border: 0,\n    cursor: 'pointer',\n    margin: 0,\n    paddingLeft: 8,\n    position: 'relative',\n    borderTop: \"1px solid \" + palette.neutralLight,\n    height: 40,\n    textAlign: 'left',\n    width: '100%',\n    fontSize: fonts.small.fontSize,\n    selectors: {\n      ':hover': {\n        backgroundColor: semanticColors.menuItemBackgroundPressed,\n        cursor: 'pointer'\n      },\n      ':focus, :active': {\n        backgroundColor: palette.themeLight\n      },\n      '.ms-Button-icon': {\n        fontSize: fonts.mediumPlus.fontSize,\n        width: 25\n      },\n      '.ms-Button-label': {\n        margin: '0 4px 0 9px'\n      }\n    }\n  };\n  var actionButtonSelectedStyles = {\n    backgroundColor: palette.themeLight,\n    selectors: (_a = {}, _a[HighContrastSelector] = __assign({\n      backgroundColor: 'Highlight',\n      borderColor: 'Highlight',\n      color: 'HighlightText'\n    }, getHighContrastNoAdjustStyle()), _a)\n  };\n  return {\n    root: [classNames.root, {\n      minWidth: 260\n    }, className],\n    suggestionsContainer: [classNames.suggestionsContainer, {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      maxHeight: 300,\n      transform: 'translate3d(0,0,0)'\n    }, suggestionsClassName],\n    title: [classNames.title, {\n      padding: '0 12px',\n      fontSize: fonts.small.fontSize,\n      color: palette.themePrimary,\n      lineHeight: 40,\n      borderBottom: \"1px solid \" + semanticColors.menuItemBackgroundPressed\n    }],\n    forceResolveButton: [classNames.forceResolveButton, actionButtonStyles, forceResolveButtonSelected && [classNames.isSelected, actionButtonSelectedStyles]],\n    searchForMoreButton: [classNames.searchForMoreButton, actionButtonStyles, searchForMoreButtonSelected && [classNames.isSelected, actionButtonSelectedStyles]],\n    noSuggestions: [classNames.noSuggestions, {\n      textAlign: 'center',\n      color: palette.neutralSecondary,\n      fontSize: fonts.small.fontSize,\n      lineHeight: 30\n    }],\n    suggestionsAvailable: [classNames.suggestionsAvailable, hiddenContentStyle],\n    subComponentStyles: {\n      spinner: {\n        root: [classNames.spinner, {\n          margin: '5px 0',\n          paddingLeft: 14,\n          textAlign: 'left',\n          whiteSpace: 'nowrap',\n          lineHeight: 20,\n          fontSize: fonts.small.fontSize\n        }],\n        circle: {\n          display: 'inline-block',\n          verticalAlign: 'middle'\n        },\n        label: {\n          display: 'inline-block',\n          verticalAlign: 'middle',\n          margin: '0 10px 0 16px'\n        }\n      }\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["getGlobalClassNames","getHighContrastNoAdjustStyle","HighContrastSelector","hiddenContentStyle","GlobalClassNames","root","suggestionsContainer","title","forceResolveButton","searchForMoreButton","spinner","noSuggestions","suggestionsAvailable","isSelected","getStyles","props","suggestionsClassName","theme","forceResolveButtonSelected","searchForMoreButtonSelected","semanticColors","fonts","classNames","actionButtonStyles","backgroundColor","border","cursor","margin","paddingLeft","position","borderTop","palette","neutralLight","height","textAlign","width","fontSize","small","selectors","menuItemBackgroundPressed","themeLight","mediumPlus","actionButtonSelectedStyles","_a","__assign","borderColor","color","minWidth","className","overflowY","overflowX","maxHeight","transform","padding","themePrimary","lineHeight","borderBottom","neutralSecondary","subComponentStyles","whiteSpace","circle","display","verticalAlign","label"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\pickers\\src\\components\\pickers\\Suggestions\\Suggestions.styles.ts"],"sourcesContent":["import {\n  getGlobalClassNames,\n  getHighContrastNoAdjustStyle,\n  HighContrastSelector,\n  hiddenContentStyle,\n} from '../../../Styling';\nimport type { IStyle } from '../../../Styling';\nimport type { ISuggestionsStyleProps, ISuggestionsStyles } from './Suggestions.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Suggestions',\n  suggestionsContainer: 'ms-Suggestions-container',\n  title: 'ms-Suggestions-title',\n  forceResolveButton: 'ms-forceResolve-button',\n  searchForMoreButton: 'ms-SearchMore-button',\n  spinner: 'ms-Suggestions-spinner',\n  noSuggestions: 'ms-Suggestions-none',\n  suggestionsAvailable: 'ms-Suggestions-suggestionsAvailable',\n  isSelected: 'is-selected',\n};\n\nexport function getStyles(props: ISuggestionsStyleProps): ISuggestionsStyles {\n  const { className, suggestionsClassName, theme, forceResolveButtonSelected, searchForMoreButtonSelected } = props;\n\n  const { palette, semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const actionButtonStyles: IStyle = {\n    backgroundColor: 'transparent',\n    border: 0,\n    cursor: 'pointer',\n    margin: 0,\n    paddingLeft: 8,\n    position: 'relative',\n    borderTop: `1px solid ${palette.neutralLight}`,\n    height: 40,\n    textAlign: 'left',\n    width: '100%',\n    fontSize: fonts.small.fontSize,\n    selectors: {\n      ':hover': {\n        backgroundColor: semanticColors.menuItemBackgroundPressed,\n        cursor: 'pointer',\n      },\n      ':focus, :active': {\n        backgroundColor: palette.themeLight,\n      },\n      '.ms-Button-icon': {\n        fontSize: fonts.mediumPlus.fontSize,\n        width: 25,\n      },\n      '.ms-Button-label': {\n        margin: '0 4px 0 9px',\n      },\n    },\n  };\n\n  const actionButtonSelectedStyles: IStyle = {\n    backgroundColor: palette.themeLight,\n    selectors: {\n      [HighContrastSelector]: {\n        backgroundColor: 'Highlight',\n        borderColor: 'Highlight',\n        color: 'HighlightText',\n        ...getHighContrastNoAdjustStyle(),\n      },\n    },\n  };\n\n  return {\n    root: [\n      classNames.root,\n      {\n        minWidth: 260,\n      },\n      className,\n    ],\n    suggestionsContainer: [\n      classNames.suggestionsContainer,\n      {\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        maxHeight: 300,\n        transform: 'translate3d(0,0,0)',\n      },\n      suggestionsClassName,\n    ],\n    title: [\n      classNames.title,\n      {\n        padding: '0 12px',\n        fontSize: fonts.small.fontSize,\n        color: palette.themePrimary,\n        lineHeight: 40,\n        borderBottom: `1px solid ${semanticColors.menuItemBackgroundPressed}`,\n      },\n    ],\n    forceResolveButton: [\n      classNames.forceResolveButton,\n      actionButtonStyles,\n      forceResolveButtonSelected && [classNames.isSelected, actionButtonSelectedStyles],\n    ],\n    searchForMoreButton: [\n      classNames.searchForMoreButton,\n      actionButtonStyles,\n      searchForMoreButtonSelected && [classNames.isSelected, actionButtonSelectedStyles],\n    ],\n    noSuggestions: [\n      classNames.noSuggestions,\n      {\n        textAlign: 'center',\n        color: palette.neutralSecondary,\n        fontSize: fonts.small.fontSize,\n        lineHeight: 30,\n      },\n    ],\n    suggestionsAvailable: [classNames.suggestionsAvailable, hiddenContentStyle],\n    subComponentStyles: {\n      spinner: {\n        root: [\n          classNames.spinner,\n          {\n            margin: '5px 0',\n            paddingLeft: 14,\n            textAlign: 'left',\n            whiteSpace: 'nowrap',\n            lineHeight: 20,\n            fontSize: fonts.small.fontSize,\n          },\n        ],\n        circle: {\n          display: 'inline-block',\n          verticalAlign: 'middle',\n        },\n        label: {\n          display: 'inline-block',\n          verticalAlign: 'middle',\n          margin: '0 10px 0 16px',\n        },\n      },\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}