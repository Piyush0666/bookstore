{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useId, useControllableValue, useConst, useSetTimeout } from '@fluentui/react-hooks';\nimport { KeyCodes, css, getRTL, getRTLSafeKeyCode, on, classNamesFunction, getNativeProps, divProperties } from '@fluentui/utilities';\nexport var ONKEYDOWN_TIMEOUT_DURATION = 1000;\nvar getClassNames = classNamesFunction();\n\nvar getSlotStyleFn = function (sty) {\n  return function (value) {\n    var _a;\n\n    return _a = {}, _a[sty] = value + \"%\", _a;\n  };\n};\n\nvar getPercent = function (value, sliderMin, sliderMax) {\n  return sliderMax === sliderMin ? 0 : (value - sliderMin) / (sliderMax - sliderMin) * 100;\n};\n\nvar useComponentRef = function (props, thumb, value, range) {\n  React.useImperativeHandle(props.componentRef, function () {\n    return {\n      get value() {\n        return value;\n      },\n\n      get range() {\n        return range;\n      },\n\n      focus: function () {\n        if (thumb.current) {\n          thumb.current.focus();\n        }\n      }\n    };\n  }, [thumb, value, range]);\n};\n\nexport var useSlider = function (props, ref) {\n  var _a = props.step,\n      step = _a === void 0 ? 1 : _a,\n      className = props.className,\n      _b = props.disabled,\n      disabled = _b === void 0 ? false : _b,\n      label = props.label,\n      _c = props.max,\n      max = _c === void 0 ? 10 : _c,\n      _d = props.min,\n      min = _d === void 0 ? 0 : _d,\n      _e = props.showValue,\n      showValue = _e === void 0 ? true : _e,\n      _f = props.buttonProps,\n      buttonProps = _f === void 0 ? {} : _f,\n      _g = props.vertical,\n      vertical = _g === void 0 ? false : _g,\n      snapToStep = props.snapToStep,\n      valueFormat = props.valueFormat,\n      styles = props.styles,\n      theme = props.theme,\n      originFromZero = props.originFromZero,\n      ariaLabelledBy = props[\"aria-labelledby\"],\n      _h = props.ariaLabel,\n      ariaLabel = _h === void 0 ? props['aria-label'] : _h,\n      ranged = props.ranged,\n      onChange = props.onChange,\n      onChanged = props.onChanged;\n  var disposables = React.useRef([]);\n\n  var _j = useSetTimeout(),\n      setTimeout = _j.setTimeout,\n      clearTimeout = _j.clearTimeout;\n\n  var sliderLine = React.useRef(null); // Casting here is necessary because useControllableValue expects the event for the change callback\n  // to extend React.SyntheticEvent, when in fact for Slider, the event could be either a React event\n  // or a native browser event depending on the context.\n\n  var _k = useControllableValue(props.value, props.defaultValue, function (ev, v) {\n    return onChange === null || onChange === void 0 ? void 0 : onChange(v, ranged ? [internalState.latestLowerValue, v] : undefined, ev);\n  }),\n      unclampedValue = _k[0],\n      setValue = _k[1];\n\n  var _l = useControllableValue(props.lowerValue, props.defaultLowerValue, function (ev, lv) {\n    return onChange === null || onChange === void 0 ? void 0 : onChange(internalState.latestValue, [lv, internalState.latestValue], ev);\n  }),\n      unclampedLowerValue = _l[0],\n      setLowerValue = _l[1]; // Ensure that value is always a number and is clamped by min/max.\n\n\n  var value = Math.max(min, Math.min(max, unclampedValue || 0));\n  var lowerValue = Math.max(min, Math.min(value, unclampedLowerValue || 0));\n  var internalState = useConst({\n    onKeyDownTimer: -1,\n    isAdjustingLowerValue: false,\n    latestValue: value,\n    latestLowerValue: lowerValue\n  }); // On each render, update this saved value used by callbacks. (This should be safe even if render\n  // is called multiple times, because an event handler or timeout callback will only run once.)\n\n  internalState.latestValue = value;\n  internalState.latestLowerValue = lowerValue;\n  var id = useId('Slider', props.id || (buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.id));\n  var classNames = getClassNames(styles, {\n    className: className,\n    disabled: disabled,\n    vertical: vertical,\n    showTransitions: !snapToStep && !internalState.isBetweenSteps,\n    showValue: showValue,\n    ranged: ranged,\n    theme: theme\n  });\n  var steps = (max - min) / step;\n\n  var clearOnKeyDownTimer = function () {\n    clearTimeout(internalState.onKeyDownTimer);\n    internalState.onKeyDownTimer = -1;\n  };\n\n  var setOnKeyDownTimer = function (event) {\n    clearOnKeyDownTimer();\n\n    if (onChanged) {\n      internalState.onKeyDownTimer = setTimeout(function () {\n        onChanged(event, internalState.latestValue, ranged ? [internalState.latestLowerValue, internalState.latestValue] : undefined);\n      }, ONKEYDOWN_TIMEOUT_DURATION);\n    }\n  };\n\n  var getAriaValueText = function (valueProps) {\n    var ariaValueText = props.ariaValueText;\n\n    if (valueProps !== undefined) {\n      return ariaValueText ? ariaValueText(valueProps) : valueProps.toString();\n    }\n\n    return undefined;\n  };\n  /**\n   * Update `value` or `lowerValue`, including clamping between min/max and rounding to\n   * appropriate precision.\n   * @param newValue - New current value of the slider, possibly rounded to a whole step.\n   * @param newUnroundedValue - Like `newValue` but without the rounding to a step. If this is\n   * provided and not equal to `newValue`, `internalState.isBetweenSteps` will be set, which\n   * may cause thumb movement animations to be disabled.\n   */\n\n\n  var updateValue = function (ev, newValue, newUnroundedValue) {\n    newValue = Math.min(max, Math.max(min, newValue));\n    newUnroundedValue = newUnroundedValue !== undefined ? Math.min(max, Math.max(min, newUnroundedValue)) : undefined;\n    var numDec = 0;\n\n    if (isFinite(step)) {\n      while (Math.round(step * Math.pow(10, numDec)) / Math.pow(10, numDec) !== step) {\n        numDec++;\n      }\n    } // Make sure value has correct number of decimal places based on number of decimals in step\n\n\n    var roundedValue = parseFloat(newValue.toFixed(numDec));\n    internalState.isBetweenSteps = newUnroundedValue !== undefined && newUnroundedValue !== roundedValue;\n\n    if (ranged) {\n      // decided which thumb value to change\n      if (internalState.isAdjustingLowerValue && (originFromZero ? roundedValue <= 0 : roundedValue <= internalState.latestValue)) {\n        setLowerValue(roundedValue, ev);\n      } else if (!internalState.isAdjustingLowerValue && (originFromZero ? roundedValue >= 0 : roundedValue >= internalState.latestLowerValue)) {\n        setValue(roundedValue, ev);\n      }\n    } else {\n      setValue(roundedValue, ev);\n    }\n  };\n\n  var onKeyDown = function (event) {\n    var newCurrentValue = internalState.isAdjustingLowerValue ? internalState.latestLowerValue : internalState.latestValue;\n    var diff = 0; // eslint-disable-next-line deprecation/deprecation\n\n    switch (event.which) {\n      case getRTLSafeKeyCode(KeyCodes.left, props.theme):\n      case KeyCodes.down:\n        diff = -step;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n\n      case getRTLSafeKeyCode(KeyCodes.right, props.theme):\n      case KeyCodes.up:\n        diff = step;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n\n      case KeyCodes.home:\n        newCurrentValue = min;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n\n      case KeyCodes.end:\n        newCurrentValue = max;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n\n      default:\n        return;\n    }\n\n    updateValue(event, newCurrentValue + diff);\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  var getPosition = function (event, verticalProp) {\n    var currentPosition = 0;\n\n    switch (event.type) {\n      case 'mousedown':\n      case 'mousemove':\n        currentPosition = !verticalProp ? event.clientX : event.clientY;\n        break;\n\n      case 'touchstart':\n      case 'touchmove':\n        currentPosition = !verticalProp ? event.touches[0].clientX : event.touches[0].clientY;\n        break;\n    }\n\n    return currentPosition;\n  };\n\n  var calculateCurrentSteps = function (event) {\n    var sliderPositionRect = sliderLine.current.getBoundingClientRect();\n    var sliderLength = !props.vertical ? sliderPositionRect.width : sliderPositionRect.height;\n    var stepLength = sliderLength / steps;\n    var currentSteps;\n    var distance;\n\n    if (!props.vertical) {\n      var left = getPosition(event, props.vertical);\n      distance = getRTL(props.theme) ? sliderPositionRect.right - left : left - sliderPositionRect.left;\n      currentSteps = distance / stepLength;\n    } else {\n      var bottom = getPosition(event, props.vertical);\n      distance = sliderPositionRect.bottom - bottom;\n      currentSteps = distance / stepLength;\n    }\n\n    return currentSteps;\n  };\n\n  var onMouseMoveOrTouchMove = function (event, suppressEventCancelation) {\n    var currentSteps = calculateCurrentSteps(event);\n    var newUnroundedValue = min + step * currentSteps;\n    var newCurrentValue = min + step * Math.round(currentSteps);\n    updateValue(event, newCurrentValue, newUnroundedValue);\n\n    if (!suppressEventCancelation) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  var onMouseDownOrTouchStart = function (event) {\n    if (ranged) {\n      var currentSteps = calculateCurrentSteps(event);\n      var newValue = min + step * currentSteps;\n      internalState.isAdjustingLowerValue = newValue <= internalState.latestLowerValue || newValue - internalState.latestLowerValue <= internalState.latestValue - newValue;\n    }\n\n    if (event.type === 'mousedown') {\n      disposables.current.push(on(window, 'mousemove', onMouseMoveOrTouchMove, true), on(window, 'mouseup', onMouseUpOrTouchEnd, true));\n    } else if (event.type === 'touchstart') {\n      disposables.current.push(on(window, 'touchmove', onMouseMoveOrTouchMove, true), on(window, 'touchend', onMouseUpOrTouchEnd, true));\n    }\n\n    onMouseMoveOrTouchMove(event, true);\n  };\n\n  var onMouseUpOrTouchEnd = function (event) {\n    // Done adjusting, so clear this value\n    internalState.isBetweenSteps = undefined;\n    onChanged === null || onChanged === void 0 ? void 0 : onChanged(event, internalState.latestValue, ranged ? [internalState.latestLowerValue, internalState.latestValue] : undefined);\n    disposeListeners();\n  };\n\n  var onThumbFocus = function (event) {\n    internalState.isAdjustingLowerValue = event.target === lowerValueThumbRef.current;\n  };\n\n  var disposeListeners = function () {\n    disposables.current.forEach(function (dispose) {\n      return dispose();\n    });\n    disposables.current = [];\n  };\n\n  var lowerValueThumbRef = React.useRef(null);\n  var thumbRef = React.useRef(null);\n  useComponentRef(props, ranged && !vertical ? lowerValueThumbRef : thumbRef, value, ranged ? [lowerValue, value] : undefined);\n  var getPositionStyles = getSlotStyleFn(vertical ? 'bottom' : getRTL(props.theme) ? 'right' : 'left');\n  var getTrackStyles = getSlotStyleFn(vertical ? 'height' : 'width');\n  var originValue = originFromZero ? 0 : min;\n  var valuePercent = getPercent(value, min, max);\n  var lowerValuePercent = getPercent(lowerValue, min, max);\n  var originPercentOfLine = getPercent(originValue, min, max);\n  var activeSectionWidth = ranged ? valuePercent - lowerValuePercent : Math.abs(originPercentOfLine - valuePercent);\n  var topSectionWidth = Math.min(100 - valuePercent, 100 - originPercentOfLine);\n  var bottomSectionWidth = ranged ? lowerValuePercent : Math.min(valuePercent, originPercentOfLine);\n  var rootProps = {\n    className: classNames.root,\n    ref: ref\n  };\n  var labelProps = {\n    className: classNames.titleLabel,\n    children: label,\n    disabled: disabled,\n    htmlFor: ariaLabel ? undefined : id\n  };\n  var valueLabelProps = showValue ? {\n    className: classNames.valueLabel,\n    children: valueFormat ? valueFormat(value) : value,\n    disabled: disabled,\n    htmlFor: disabled ? id : undefined\n  } : undefined;\n  var lowerValueLabelProps = ranged && showValue ? {\n    className: classNames.valueLabel,\n    children: valueFormat ? valueFormat(lowerValue) : lowerValue,\n    disabled: disabled\n  } : undefined;\n  var zeroTickProps = originFromZero ? {\n    className: classNames.zeroTick,\n    style: getPositionStyles(originPercentOfLine)\n  } : undefined;\n  var trackActiveProps = {\n    className: css(classNames.lineContainer, classNames.activeSection),\n    style: getTrackStyles(activeSectionWidth)\n  };\n  var trackTopInactiveProps = {\n    className: css(classNames.lineContainer, classNames.inactiveSection),\n    style: getTrackStyles(topSectionWidth)\n  };\n  var trackBottomInactiveProps = {\n    className: css(classNames.lineContainer, classNames.inactiveSection),\n    style: getTrackStyles(bottomSectionWidth)\n  };\n\n  var sliderProps = __assign({\n    'aria-disabled': disabled,\n    role: 'slider',\n    tabIndex: disabled ? undefined : 0\n  }, {\n    'data-is-focusable': !disabled\n  });\n\n  var sliderBoxProps = __assign(__assign(__assign({\n    id: id,\n    className: css(classNames.slideBox, buttonProps.className)\n  }, !disabled && {\n    onMouseDown: onMouseDownOrTouchStart,\n    onTouchStart: onMouseDownOrTouchStart,\n    onKeyDown: onKeyDown\n  }), buttonProps && getNativeProps(buttonProps, divProperties, ['id', 'className'])), !ranged && __assign(__assign({}, sliderProps), {\n    'aria-valuemin': min,\n    'aria-valuemax': max,\n    'aria-valuenow': value,\n    'aria-valuetext': getAriaValueText(value),\n    'aria-label': ariaLabel || label,\n    'aria-labelledby': ariaLabelledBy\n  }));\n\n  var onFocusProp = disabled ? {} : {\n    onFocus: onThumbFocus\n  };\n\n  var thumbProps = __assign({\n    ref: thumbRef,\n    className: classNames.thumb,\n    style: getPositionStyles(valuePercent)\n  }, ranged && __assign(__assign(__assign({}, sliderProps), onFocusProp), {\n    id: \"max-\" + id,\n    'aria-valuemin': lowerValue,\n    'aria-valuemax': max,\n    'aria-valuenow': value,\n    'aria-valuetext': getAriaValueText(value),\n    'aria-label': \"max \" + (ariaLabel || label)\n  }));\n\n  var lowerValueThumbProps = ranged ? __assign(__assign(__assign({\n    ref: lowerValueThumbRef,\n    className: classNames.thumb,\n    style: getPositionStyles(lowerValuePercent)\n  }, sliderProps), onFocusProp), {\n    id: \"min-\" + id,\n    'aria-valuemin': min,\n    'aria-valuemax': value,\n    'aria-valuenow': lowerValue,\n    'aria-valuetext': getAriaValueText(lowerValue),\n    'aria-label': \"min \" + (ariaLabel || label)\n  }) : undefined;\n  var containerProps = {\n    className: classNames.container\n  };\n  var sliderLineProps = {\n    ref: sliderLine,\n    className: classNames.line\n  };\n  return {\n    root: rootProps,\n    label: labelProps,\n    sliderBox: sliderBoxProps,\n    container: containerProps,\n    valueLabel: valueLabelProps,\n    lowerValueLabel: lowerValueLabelProps,\n    thumb: thumbProps,\n    lowerValueThumb: lowerValueThumbProps,\n    zeroTick: zeroTickProps,\n    activeTrack: trackActiveProps,\n    topInactiveTrack: trackTopInactiveProps,\n    bottomInactiveTrack: trackBottomInactiveProps,\n    sliderLine: sliderLineProps\n  };\n};","map":{"version":3,"mappings":"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","names":["React","useId","useControllableValue","useConst","useSetTimeout","KeyCodes","css","getRTL","getRTLSafeKeyCode","on","classNamesFunction","getNativeProps","divProperties","ONKEYDOWN_TIMEOUT_DURATION","getClassNames","getSlotStyleFn","sty","value","_a","getPercent","sliderMin","sliderMax","useComponentRef","props","thumb","range","useImperativeHandle","componentRef","focus","current","useSlider","ref","className","_b","disabled","label","_c","max","_d","min","_e","showValue","_f","buttonProps","_g","vertical","snapToStep","valueFormat","styles","theme","originFromZero","ariaLabelledBy","_h","ariaLabel","ranged","onChange","onChanged","disposables","useRef","setTimeout","clearTimeout","sliderLine","defaultValue","ev","v","internalState","latestLowerValue","undefined","unclampedValue","setValue","lowerValue","defaultLowerValue","lv","latestValue","unclampedLowerValue","setLowerValue","Math","onKeyDownTimer","isAdjustingLowerValue","id","classNames","showTransitions","isBetweenSteps","steps","step","clearOnKeyDownTimer","setOnKeyDownTimer","event","getAriaValueText","valueProps","ariaValueText","toString","updateValue","newValue","newUnroundedValue","numDec","isFinite","round","pow","roundedValue","parseFloat","toFixed","onKeyDown","newCurrentValue","diff","which","left","down","right","up","home","end","preventDefault","stopPropagation","getPosition","verticalProp","currentPosition","type","clientX","clientY","touches","calculateCurrentSteps","sliderPositionRect","getBoundingClientRect","sliderLength","width","height","stepLength","currentSteps","distance","bottom","onMouseMoveOrTouchMove","suppressEventCancelation","onMouseDownOrTouchStart","push","window","onMouseUpOrTouchEnd","disposeListeners","onThumbFocus","target","lowerValueThumbRef","forEach","thumbRef","getPositionStyles","getTrackStyles","originValue","valuePercent","lowerValuePercent","originPercentOfLine","activeSectionWidth","abs","topSectionWidth","bottomSectionWidth","rootProps","root","labelProps","titleLabel","children","htmlFor","valueLabelProps","valueLabel","lowerValueLabelProps","zeroTickProps","zeroTick","style","trackActiveProps","lineContainer","activeSection","trackTopInactiveProps","inactiveSection","trackBottomInactiveProps","sliderProps","role","tabIndex","sliderBoxProps","slideBox","onMouseDown","onTouchStart","__assign","onFocusProp","onFocus","thumbProps","lowerValueThumbProps","containerProps","container","sliderLineProps","line","sliderBox","lowerValueLabel","lowerValueThumb","activeTrack","topInactiveTrack","bottomInactiveTrack"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\Slider\\useSlider.ts"],"sourcesContent":["import * as React from 'react';\nimport { useId, useControllableValue, useConst, useSetTimeout } from '@fluentui/react-hooks';\nimport {\n  KeyCodes,\n  css,\n  getRTL,\n  getRTLSafeKeyCode,\n  on,\n  classNamesFunction,\n  getNativeProps,\n  divProperties,\n} from '@fluentui/utilities';\nimport type { ISliderProps, ISliderStyleProps, ISliderStyles } from './Slider.types';\nimport type { ILabelProps } from '../Label/index';\n\nexport const ONKEYDOWN_TIMEOUT_DURATION = 1000;\n\ninterface ISliderInternalState {\n  onKeyDownTimer: number;\n  /** For a ranged slider, whether the thumb currently being dragged is the lower value one. */\n  isAdjustingLowerValue: boolean;\n  /** Allows access to the latest `value` inside reused callbacks (to avoid stale capture issues) */\n  latestValue: number;\n  /** Allows access to the latest `lowerValue` inside reused callbacks (to avoid stale capture issues) */\n  latestLowerValue: number;\n  /**\n   * Whether the user is currently dragging the thumb and it's between step intervals.\n   * (If true, and `props.snapToStep` is falsy, transition animations will be disabled.)\n   */\n  isBetweenSteps?: boolean;\n}\n\nconst getClassNames = classNamesFunction<ISliderStyleProps, ISliderStyles>();\n\ntype Dimension = 'height' | 'width';\ntype Position = 'bottom' | 'left' | 'right';\ntype PositionOrDimension = Dimension | Position;\n/** All the possible event types for a change event */\ntype ChangeEvent = Parameters<Required<ISliderProps>['onChange']>[2];\n/** All the possible event types for a change event that's dragging the slider (mouse or touch) */\ntype DragChangeEvent = React.MouseEvent | React.TouchEvent | MouseEvent | TouchEvent;\n\nconst getSlotStyleFn = (sty: PositionOrDimension) => {\n  return (value: number) => {\n    return {\n      [sty]: `${value}%`,\n    };\n  };\n};\n\nconst getPercent = (value: number, sliderMin: number, sliderMax: number) => {\n  return sliderMax === sliderMin ? 0 : ((value - sliderMin) / (sliderMax - sliderMin)) * 100;\n};\n\nconst useComponentRef = (\n  props: ISliderProps,\n  thumb: React.RefObject<HTMLSpanElement>,\n  value: number | undefined,\n  range: [number, number] | undefined,\n) => {\n  React.useImperativeHandle(\n    props.componentRef,\n    () => ({\n      get value() {\n        return value;\n      },\n      get range() {\n        return range;\n      },\n      focus() {\n        if (thumb.current) {\n          thumb.current.focus();\n        }\n      },\n    }),\n    [thumb, value, range],\n  );\n};\n\nexport const useSlider = (props: ISliderProps, ref: React.Ref<HTMLDivElement>) => {\n  const {\n    step = 1,\n    className,\n    disabled = false,\n    label,\n    max = 10,\n    min = 0,\n    showValue = true,\n    buttonProps = {},\n    vertical = false,\n    snapToStep,\n    valueFormat,\n    styles,\n    theme,\n    originFromZero,\n    'aria-labelledby': ariaLabelledBy,\n    ariaLabel = props['aria-label'],\n    ranged,\n    onChange,\n    onChanged,\n  } = props;\n\n  const disposables = React.useRef<(() => void)[]>([]);\n  const { setTimeout, clearTimeout } = useSetTimeout();\n  const sliderLine = React.useRef<HTMLDivElement>(null);\n\n  // Casting here is necessary because useControllableValue expects the event for the change callback\n  // to extend React.SyntheticEvent, when in fact for Slider, the event could be either a React event\n  // or a native browser event depending on the context.\n  const [unclampedValue, setValue] = useControllableValue(props.value, props.defaultValue, (ev: any, v) =>\n    onChange?.(v!, ranged ? [internalState.latestLowerValue, v!] : undefined, ev),\n  ) as [number | undefined, (v: number | undefined, ev: ChangeEvent) => void];\n  const [unclampedLowerValue, setLowerValue] = useControllableValue(\n    props.lowerValue,\n    props.defaultLowerValue,\n    (ev: any, lv) => onChange?.(internalState.latestValue, [lv!, internalState.latestValue], ev),\n  ) as [number | undefined, (v: number | undefined, ev: ChangeEvent) => void];\n\n  // Ensure that value is always a number and is clamped by min/max.\n  const value = Math.max(min, Math.min(max, unclampedValue || 0));\n  const lowerValue = Math.max(min, Math.min(value, unclampedLowerValue || 0));\n\n  const internalState = useConst<ISliderInternalState>({\n    onKeyDownTimer: -1,\n    isAdjustingLowerValue: false,\n    latestValue: value,\n    latestLowerValue: lowerValue,\n  });\n  // On each render, update this saved value used by callbacks. (This should be safe even if render\n  // is called multiple times, because an event handler or timeout callback will only run once.)\n  internalState.latestValue = value;\n  internalState.latestLowerValue = lowerValue;\n\n  const id = useId('Slider', props.id || buttonProps?.id);\n  const classNames = getClassNames(styles, {\n    className,\n    disabled,\n    vertical,\n    showTransitions: !snapToStep && !internalState.isBetweenSteps,\n    showValue,\n    ranged,\n    theme: theme!,\n  });\n\n  const steps = (max - min) / step;\n\n  const clearOnKeyDownTimer = (): void => {\n    clearTimeout(internalState.onKeyDownTimer);\n    internalState.onKeyDownTimer = -1;\n  };\n\n  const setOnKeyDownTimer = (event: React.KeyboardEvent) => {\n    clearOnKeyDownTimer();\n    if (onChanged) {\n      internalState.onKeyDownTimer = setTimeout(() => {\n        onChanged(\n          event,\n          internalState.latestValue,\n          ranged ? [internalState.latestLowerValue, internalState.latestValue] : undefined,\n        );\n      }, ONKEYDOWN_TIMEOUT_DURATION);\n    }\n  };\n\n  const getAriaValueText = (valueProps: number | undefined): string | undefined => {\n    const { ariaValueText } = props;\n    if (valueProps !== undefined) {\n      return ariaValueText ? ariaValueText(valueProps) : valueProps.toString();\n    }\n    return undefined;\n  };\n\n  /**\n   * Update `value` or `lowerValue`, including clamping between min/max and rounding to\n   * appropriate precision.\n   * @param newValue - New current value of the slider, possibly rounded to a whole step.\n   * @param newUnroundedValue - Like `newValue` but without the rounding to a step. If this is\n   * provided and not equal to `newValue`, `internalState.isBetweenSteps` will be set, which\n   * may cause thumb movement animations to be disabled.\n   */\n  const updateValue = (ev: any, newValue: number, newUnroundedValue?: number): void => {\n    newValue = Math.min(max, Math.max(min, newValue));\n    newUnroundedValue = newUnroundedValue !== undefined ? Math.min(max, Math.max(min, newUnroundedValue)) : undefined;\n\n    let numDec = 0;\n    if (isFinite(step)) {\n      while (Math.round(step * Math.pow(10, numDec)) / Math.pow(10, numDec) !== step) {\n        numDec++;\n      }\n    }\n    // Make sure value has correct number of decimal places based on number of decimals in step\n    const roundedValue = parseFloat(newValue.toFixed(numDec));\n\n    internalState.isBetweenSteps = newUnroundedValue !== undefined && newUnroundedValue !== roundedValue;\n\n    if (ranged) {\n      // decided which thumb value to change\n      if (\n        internalState.isAdjustingLowerValue &&\n        (originFromZero ? roundedValue <= 0 : roundedValue <= internalState.latestValue)\n      ) {\n        setLowerValue(roundedValue, ev);\n      } else if (\n        !internalState.isAdjustingLowerValue &&\n        (originFromZero ? roundedValue >= 0 : roundedValue >= internalState.latestLowerValue)\n      ) {\n        setValue(roundedValue, ev);\n      }\n    } else {\n      setValue(roundedValue, ev);\n    }\n  };\n\n  const onKeyDown = (event: React.KeyboardEvent): void => {\n    let newCurrentValue = internalState.isAdjustingLowerValue\n      ? internalState.latestLowerValue\n      : internalState.latestValue;\n    let diff = 0;\n    // eslint-disable-next-line deprecation/deprecation\n    switch (event.which) {\n      case getRTLSafeKeyCode(KeyCodes.left, props.theme):\n      case KeyCodes.down:\n        diff = -step;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      case getRTLSafeKeyCode(KeyCodes.right, props.theme):\n      case KeyCodes.up:\n        diff = step;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      case KeyCodes.home:\n        newCurrentValue = min;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      case KeyCodes.end:\n        newCurrentValue = max;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      default:\n        return;\n    }\n    updateValue(event, newCurrentValue + diff);\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const getPosition = (event: DragChangeEvent, verticalProp: boolean | undefined): number => {\n    let currentPosition = 0;\n    switch (event.type) {\n      case 'mousedown':\n      case 'mousemove':\n        currentPosition = !verticalProp ? (event as MouseEvent).clientX : (event as MouseEvent).clientY;\n        break;\n      case 'touchstart':\n      case 'touchmove':\n        currentPosition = !verticalProp\n          ? (event as TouchEvent).touches[0].clientX\n          : (event as TouchEvent).touches[0].clientY;\n        break;\n    }\n    return currentPosition;\n  };\n\n  const calculateCurrentSteps = (event: DragChangeEvent) => {\n    const sliderPositionRect: ClientRect = sliderLine.current!.getBoundingClientRect();\n    const sliderLength: number = !props.vertical ? sliderPositionRect.width : sliderPositionRect.height;\n    const stepLength: number = sliderLength / steps;\n    let currentSteps: number;\n    let distance: number;\n    if (!props.vertical) {\n      const left = getPosition(event, props.vertical);\n      distance = getRTL(props.theme) ? sliderPositionRect.right - left : left - sliderPositionRect.left;\n      currentSteps = distance / stepLength;\n    } else {\n      const bottom = getPosition(event, props.vertical);\n      distance = sliderPositionRect.bottom - bottom;\n      currentSteps = distance / stepLength;\n    }\n    return currentSteps;\n  };\n\n  const onMouseMoveOrTouchMove = (event: DragChangeEvent, suppressEventCancelation?: boolean): void => {\n    const currentSteps = calculateCurrentSteps(event);\n    const newUnroundedValue = min + step * currentSteps;\n    const newCurrentValue = min + step * Math.round(currentSteps);\n    updateValue(event, newCurrentValue, newUnroundedValue);\n    if (!suppressEventCancelation) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  const onMouseDownOrTouchStart = (event: React.MouseEvent | React.TouchEvent): void => {\n    if (ranged) {\n      const currentSteps = calculateCurrentSteps(event);\n      const newValue = min + step * currentSteps;\n\n      internalState.isAdjustingLowerValue =\n        newValue <= internalState.latestLowerValue ||\n        newValue - internalState.latestLowerValue <= internalState.latestValue - newValue;\n    }\n\n    if (event.type === 'mousedown') {\n      disposables.current.push(\n        on(window, 'mousemove', onMouseMoveOrTouchMove as (ev: Event) => void, true),\n        on(window, 'mouseup', onMouseUpOrTouchEnd, true),\n      );\n    } else if (event.type === 'touchstart') {\n      disposables.current.push(\n        on(window, 'touchmove', onMouseMoveOrTouchMove as (ev: Event) => void, true),\n        on(window, 'touchend', onMouseUpOrTouchEnd, true),\n      );\n    }\n    onMouseMoveOrTouchMove(event, true);\n  };\n\n  const onMouseUpOrTouchEnd = (event: MouseEvent | TouchEvent): void => {\n    // Done adjusting, so clear this value\n    internalState.isBetweenSteps = undefined;\n\n    onChanged?.(\n      event,\n      internalState.latestValue,\n      ranged ? [internalState.latestLowerValue, internalState.latestValue] : undefined,\n    );\n    disposeListeners();\n  };\n\n  const onThumbFocus = (event: React.FocusEvent): void => {\n    internalState.isAdjustingLowerValue = event.target === lowerValueThumbRef.current;\n  };\n\n  const disposeListeners = (): void => {\n    disposables.current.forEach(dispose => dispose());\n    disposables.current = [];\n  };\n\n  const lowerValueThumbRef = React.useRef<HTMLElement>(null);\n  const thumbRef = React.useRef<HTMLElement>(null);\n  useComponentRef(\n    props,\n    ranged && !vertical ? lowerValueThumbRef : thumbRef,\n    value,\n    ranged ? [lowerValue, value] : undefined,\n  );\n  const getPositionStyles = getSlotStyleFn(vertical ? 'bottom' : getRTL(props.theme) ? 'right' : 'left');\n  const getTrackStyles = getSlotStyleFn(vertical ? 'height' : 'width');\n  const originValue = originFromZero ? 0 : min;\n  const valuePercent = getPercent(value, min, max);\n  const lowerValuePercent = getPercent(lowerValue, min, max);\n  const originPercentOfLine = getPercent(originValue, min, max);\n  const activeSectionWidth = ranged ? valuePercent - lowerValuePercent : Math.abs(originPercentOfLine - valuePercent);\n  const topSectionWidth = Math.min(100 - valuePercent, 100 - originPercentOfLine);\n  const bottomSectionWidth = ranged ? lowerValuePercent : Math.min(valuePercent, originPercentOfLine);\n\n  const rootProps: React.HTMLAttributes<HTMLDivElement> & React.RefAttributes<HTMLDivElement> = {\n    className: classNames.root,\n    ref: ref,\n  };\n\n  const labelProps: ILabelProps = {\n    className: classNames.titleLabel,\n    children: label,\n    disabled,\n    htmlFor: ariaLabel ? undefined : id,\n  };\n\n  const valueLabelProps: ILabelProps | undefined = showValue\n    ? {\n        className: classNames.valueLabel,\n        children: valueFormat ? valueFormat(value) : value,\n        disabled,\n        htmlFor: disabled ? id : undefined,\n      }\n    : undefined;\n\n  const lowerValueLabelProps: ILabelProps | undefined =\n    ranged && showValue\n      ? {\n          className: classNames.valueLabel,\n          children: valueFormat ? valueFormat(lowerValue) : lowerValue,\n          disabled,\n        }\n      : undefined;\n\n  const zeroTickProps: React.HTMLAttributes<HTMLElement> | undefined = originFromZero\n    ? {\n        className: classNames.zeroTick,\n        style: getPositionStyles(originPercentOfLine),\n      }\n    : undefined;\n\n  const trackActiveProps: React.HTMLAttributes<HTMLElement> = {\n    className: css(classNames.lineContainer, classNames.activeSection),\n    style: getTrackStyles(activeSectionWidth),\n  };\n\n  const trackTopInactiveProps: React.HTMLAttributes<HTMLElement> = {\n    className: css(classNames.lineContainer, classNames.inactiveSection),\n    style: getTrackStyles(topSectionWidth),\n  };\n\n  const trackBottomInactiveProps: React.HTMLAttributes<HTMLElement> = {\n    className: css(classNames.lineContainer, classNames.inactiveSection),\n    style: getTrackStyles(bottomSectionWidth),\n  };\n\n  const sliderProps: React.HTMLAttributes<HTMLElement> = {\n    'aria-disabled': disabled,\n    role: 'slider',\n    tabIndex: disabled ? undefined : 0,\n    ...({ 'data-is-focusable': !disabled } as any),\n  };\n\n  const sliderBoxProps: React.HTMLAttributes<HTMLElement> = {\n    id,\n    className: css(classNames.slideBox, buttonProps.className),\n    ...(!disabled && {\n      onMouseDown: onMouseDownOrTouchStart,\n      onTouchStart: onMouseDownOrTouchStart,\n      onKeyDown: onKeyDown,\n    }),\n    ...(buttonProps &&\n      getNativeProps<React.HTMLAttributes<HTMLDivElement>>(buttonProps, divProperties, ['id', 'className'])),\n    ...(!ranged && {\n      ...sliderProps,\n      'aria-valuemin': min,\n      'aria-valuemax': max,\n      'aria-valuenow': value,\n      'aria-valuetext': getAriaValueText(value),\n      'aria-label': ariaLabel || label,\n      'aria-labelledby': ariaLabelledBy,\n    }),\n  };\n\n  const onFocusProp = disabled ? {} : { onFocus: onThumbFocus };\n\n  const thumbProps: React.HTMLAttributes<HTMLElement> & React.RefAttributes<HTMLElement> = {\n    ref: thumbRef,\n    className: classNames.thumb,\n    style: getPositionStyles(valuePercent),\n    ...(ranged && {\n      ...sliderProps,\n      ...onFocusProp,\n      id: `max-${id}`,\n      'aria-valuemin': lowerValue,\n      'aria-valuemax': max,\n      'aria-valuenow': value,\n      'aria-valuetext': getAriaValueText(value),\n      'aria-label': `max ${ariaLabel || label}`,\n    }),\n  };\n\n  const lowerValueThumbProps:\n    | (React.HTMLAttributes<HTMLElement> & React.RefAttributes<HTMLElement>)\n    | undefined = ranged\n    ? {\n        ref: lowerValueThumbRef,\n        className: classNames.thumb,\n        style: getPositionStyles(lowerValuePercent),\n        ...sliderProps,\n        ...onFocusProp,\n        id: `min-${id}`,\n        'aria-valuemin': min,\n        'aria-valuemax': value,\n        'aria-valuenow': lowerValue,\n        'aria-valuetext': getAriaValueText(lowerValue),\n        'aria-label': `min ${ariaLabel || label}`,\n      }\n    : undefined;\n\n  const containerProps: React.HTMLAttributes<HTMLElement> = {\n    className: classNames.container,\n  };\n\n  const sliderLineProps: React.HTMLAttributes<HTMLDivElement> & React.RefAttributes<HTMLDivElement> = {\n    ref: sliderLine,\n    className: classNames.line,\n  };\n\n  return {\n    root: rootProps,\n    label: labelProps,\n    sliderBox: sliderBoxProps,\n    container: containerProps,\n    valueLabel: valueLabelProps,\n    lowerValueLabel: lowerValueLabelProps,\n    thumb: thumbProps,\n    lowerValueThumb: lowerValueThumbProps,\n    zeroTick: zeroTickProps,\n    activeTrack: trackActiveProps,\n    topInactiveTrack: trackTopInactiveProps,\n    bottomInactiveTrack: trackBottomInactiveProps,\n    sliderLine: sliderLineProps,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}