{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { Image } from '../Image/Image';\nimport { css, getNativeProps, htmlElementProperties } from '../../Utilities';\nimport { classNames, MS_ICON } from './Icon.styles';\n/**\n * Fast icon component which only supports images (not font glyphs) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\n\nexport var ImageIcon = function (props) {\n  var className = props.className,\n      imageProps = props.imageProps;\n  var nativeProps = getNativeProps(props, htmlElementProperties, ['aria-label', 'aria-labelledby', 'title', 'aria-describedby']);\n  var altText = imageProps.alt || props['aria-label'];\n  var hasName = altText || props['aria-labelledby'] || props.title || imageProps['aria-label'] || imageProps['aria-labelledby'] || imageProps.title; // move naming or describing attributes from the container (where they are invalid) to the image\n\n  var imageNameProps = {\n    'aria-labelledby': props['aria-labelledby'],\n    'aria-describedby': props['aria-describedby'],\n    title: props.title\n  };\n  var containerProps = hasName ? {} : {\n    'aria-hidden': true\n  };\n  return React.createElement(\"div\", __assign({}, containerProps, nativeProps, {\n    className: css(MS_ICON, classNames.root, classNames.image, className)\n  }), React.createElement(Image, __assign({}, imageNameProps, imageProps, {\n    alt: hasName ? altText : ''\n  })));\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,GAAT,EAAcC,cAAd,EAA8BC,qBAA9B,QAA2D,iBAA3D;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,eAApC;AAGA;;;;;;AAKA,OAAO,IAAMC,SAAS,GAA6C,iBAAK;EAC9D,aAAS,GAAiBC,KAAK,UAA/B;EAAA,IAAWC,UAAU,GAAKD,KAAK,WAA/B;EAER,IAAME,WAAW,GAAGP,cAAc,CAAuCK,KAAvC,EAA8CJ,qBAA9C,EAAqE,CACrG,YADqG,EAErG,iBAFqG,EAGrG,OAHqG,EAIrG,kBAJqG,CAArE,CAAlC;EAMA,IAAMO,OAAO,GAAGF,UAAU,CAACG,GAAX,IAAkBJ,KAAK,CAAC,YAAD,CAAvC;EACA,IAAMK,OAAO,GACXF,OAAO,IACPH,KAAK,CAAC,iBAAD,CADL,IAEAA,KAAK,CAACM,KAFN,IAGAL,UAAU,CAAC,YAAD,CAHV,IAIAA,UAAU,CAAC,iBAAD,CAJV,IAKAA,UAAU,CAACK,KANb,CAVsE,CAkBtE;;EACA,IAAMC,cAAc,GAAG;IACrB,mBAAmBP,KAAK,CAAC,iBAAD,CADH;IAErB,oBAAoBA,KAAK,CAAC,kBAAD,CAFJ;IAGrBM,KAAK,EAAEN,KAAK,CAACM;EAHQ,CAAvB;EAMA,IAAME,cAAc,GAAGH,OAAO,GAC1B,EAD0B,GAE1B;IACE,eAAe;EADjB,CAFJ;EAMA,OACEb,wCAASgB,cAAT,EAA6BN,WAA7B,EAAwC;IAAEO,SAAS,EAAEf,GAAG,CAACI,OAAD,EAAUD,UAAU,CAACa,IAArB,EAA2Bb,UAAU,CAACc,KAAtC,EAA6CF,SAA7C;EAAhB,CAAxC,GACEjB,oBAACC,KAAD,EAAMmB,aAAKL,cAAL,EAAyBN,UAAzB,EAAmC;IAAEG,GAAG,EAAEC,OAAO,GAAGF,OAAH,GAAa;EAA3B,CAAnC,CAAN,CADF,CADF;AAKD,CApCM","names":["React","Image","css","getNativeProps","htmlElementProperties","classNames","MS_ICON","ImageIcon","props","imageProps","nativeProps","altText","alt","hasName","title","imageNameProps","containerProps","className","root","image","__assign"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\Icon\\ImageIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Image } from '../Image/Image';\nimport { css, getNativeProps, htmlElementProperties } from '../../Utilities';\nimport { classNames, MS_ICON } from './Icon.styles';\nimport type { IImageIconProps } from './Icon.types';\n\n/**\n * Fast icon component which only supports images (not font glyphs) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\nexport const ImageIcon: React.FunctionComponent<IImageIconProps> = props => {\n  const { className, imageProps } = props;\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, htmlElementProperties, [\n    'aria-label',\n    'aria-labelledby',\n    'title',\n    'aria-describedby',\n  ]);\n  const altText = imageProps.alt || props['aria-label'];\n  const hasName =\n    altText ||\n    props['aria-labelledby'] ||\n    props.title ||\n    imageProps['aria-label'] ||\n    imageProps['aria-labelledby'] ||\n    imageProps.title;\n\n  // move naming or describing attributes from the container (where they are invalid) to the image\n  const imageNameProps = {\n    'aria-labelledby': props['aria-labelledby'],\n    'aria-describedby': props['aria-describedby'],\n    title: props.title,\n  };\n\n  const containerProps = hasName\n    ? {}\n    : {\n        'aria-hidden': true,\n      };\n\n  return (\n    <div {...containerProps} {...nativeProps} className={css(MS_ICON, classNames.root, classNames.image, className)}>\n      <Image {...imageNameProps} {...imageProps} alt={hasName ? altText : ''} />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}