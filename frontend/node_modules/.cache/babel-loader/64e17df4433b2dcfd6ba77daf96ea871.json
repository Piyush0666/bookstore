{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { AnimationClassNames, AnimationStyles, HighContrastSelector, getFocusStyle, getGlobalClassNames, FontWeights, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport { GlobalClassNames as LinkGlobalClassNames } from '../../components/Link/Link.styles';\nexport var DetailsRowGlobalClassNames = {\n  root: 'ms-DetailsRow',\n  // TODO: in Fabric 7.0 lowercase the 'Compact' for consistency across other components.\n  compact: 'ms-DetailsList--Compact',\n  cell: 'ms-DetailsRow-cell',\n  cellAnimation: 'ms-DetailsRow-cellAnimation',\n  cellCheck: 'ms-DetailsRow-cellCheck',\n  check: 'ms-DetailsRow-check',\n  cellMeasurer: 'ms-DetailsRow-cellMeasurer',\n  listCellFirstChild: 'ms-List-cell:first-child',\n  isContentUnselectable: 'is-contentUnselectable',\n  isSelected: 'is-selected',\n  isCheckVisible: 'is-check-visible',\n  isRowHeader: 'is-row-header',\n  fields: 'ms-DetailsRow-fields'\n};\nvar IsFocusableSelector = \"[data-is-focusable='true']\";\nexport var DEFAULT_CELL_STYLE_PROPS = {\n  cellLeftPadding: 12,\n  cellRightPadding: 8,\n  cellExtraRightPadding: 24\n}; // Source of default row heights to share.\n\nexport var DEFAULT_ROW_HEIGHTS = {\n  rowHeight: 42,\n  compactRowHeight: 32\n}; // Constant values\n\nvar values = __assign(__assign({}, DEFAULT_ROW_HEIGHTS), {\n  rowVerticalPadding: 11,\n  compactRowVerticalPadding: 6\n});\n\nexport var getDetailsRowStyles = function (props) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n\n  var theme = props.theme,\n      isSelected = props.isSelected,\n      canSelect = props.canSelect,\n      droppingClassName = props.droppingClassName,\n      anySelected = props.anySelected,\n      isCheckVisible = props.isCheckVisible,\n      checkboxCellClassName = props.checkboxCellClassName,\n      compact = props.compact,\n      className = props.className,\n      _q = props.cellStyleProps,\n      cellStyleProps = _q === void 0 ? DEFAULT_CELL_STYLE_PROPS : _q,\n      enableUpdateAnimations = props.enableUpdateAnimations,\n      disabled = props.disabled;\n  var palette = theme.palette,\n      fonts = theme.fonts;\n  var neutralPrimary = palette.neutralPrimary,\n      white = palette.white,\n      neutralSecondary = palette.neutralSecondary,\n      neutralLighter = palette.neutralLighter,\n      neutralLight = palette.neutralLight,\n      neutralDark = palette.neutralDark,\n      neutralQuaternaryAlt = palette.neutralQuaternaryAlt;\n  var _r = theme.semanticColors,\n      focusBorder = _r.focusBorder,\n      focusedLinkColor = _r.linkHovered;\n  var classNames = getGlobalClassNames(DetailsRowGlobalClassNames, theme);\n  var colors = {\n    // Default\n    defaultHeaderText: neutralPrimary,\n    defaultMetaText: neutralSecondary,\n    defaultBackground: white,\n    // Default Hover\n    defaultHoverHeaderText: neutralDark,\n    defaultHoverMetaText: neutralPrimary,\n    defaultHoverBackground: neutralLighter,\n    // Selected\n    selectedHeaderText: neutralDark,\n    selectedMetaText: neutralPrimary,\n    selectedBackground: neutralLight,\n    // Selected Hover\n    selectedHoverHeaderText: neutralDark,\n    selectedHoverMetaText: neutralPrimary,\n    selectedHoverBackground: neutralQuaternaryAlt,\n    // Focus\n    focusHeaderText: neutralDark,\n    focusMetaText: neutralPrimary,\n    focusBackground: neutralLight,\n    focusHoverBackground: neutralQuaternaryAlt\n  };\n  var rowHighContrastFocus = {\n    top: 2,\n    right: 2,\n    bottom: 2,\n    left: 2\n  }; // Selected row styles\n\n  var selectedStyles = [getFocusStyle(theme, {\n    inset: -1,\n    borderColor: focusBorder,\n    outlineColor: white,\n    highContrastStyle: rowHighContrastFocus\n  }), classNames.isSelected, {\n    color: colors.selectedMetaText,\n    background: colors.selectedBackground,\n    borderBottom: \"1px solid \" + white,\n    selectors: (_a = {\n      '&:before': {\n        position: 'absolute',\n        display: 'block',\n        top: -1,\n        height: 1,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        content: '',\n        borderTop: \"1px solid \" + white\n      }\n    }, _a[\".\" + classNames.cell + \" > .\" + LinkGlobalClassNames.root] = {\n      color: focusedLinkColor,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'HighlightText'\n      }, _b)\n    }, // Selected State hover\n    _a['&:hover'] = {\n      background: colors.selectedHoverBackground,\n      color: colors.selectedHoverMetaText,\n      selectors: (_c = {}, // Selected State hover meta cell\n      _c[HighContrastSelector] = {\n        background: 'Highlight',\n        selectors: (_d = {}, _d[\".\" + classNames.cell] = {\n          color: 'HighlightText'\n        }, _d[\".\" + classNames.cell + \" > .\" + LinkGlobalClassNames.root] = {\n          forcedColorAdjust: 'none',\n          color: 'HighlightText'\n        }, _d)\n      }, // Selected State hover Header cell\n      _c[\".\" + classNames.isRowHeader] = {\n        color: colors.selectedHoverHeaderText,\n        selectors: (_e = {}, _e[HighContrastSelector] = {\n          color: 'HighlightText'\n        }, _e)\n      }, _c)\n    }, // Focus state\n    _a['&:focus'] = {\n      background: colors.focusBackground,\n      selectors: (_f = {}, // Selected State hover meta cell\n      _f[\".\" + classNames.cell] = {\n        color: colors.focusMetaText,\n        selectors: (_g = {}, _g[HighContrastSelector] = {\n          color: 'HighlightText',\n          selectors: {\n            '> a': {\n              color: 'HighlightText'\n            }\n          }\n        }, _g)\n      }, // Row header cell\n      _f[\".\" + classNames.isRowHeader] = {\n        color: colors.focusHeaderText,\n        selectors: (_h = {}, _h[HighContrastSelector] = {\n          color: 'HighlightText'\n        }, _h)\n      }, // Ensure high-contrast mode overrides default focus background\n      _f[HighContrastSelector] = {\n        background: 'Highlight'\n      }, _f)\n    }, _a[HighContrastSelector] = __assign(__assign({\n      background: 'Highlight',\n      color: 'HighlightText'\n    }, getHighContrastNoAdjustStyle()), {\n      selectors: {\n        a: {\n          color: 'HighlightText'\n        }\n      }\n    }), // Focus and hover state\n    _a['&:focus:hover'] = {\n      background: colors.focusHoverBackground\n    }, _a)\n  }];\n  var cannotSelectStyles = [classNames.isContentUnselectable, {\n    userSelect: 'none',\n    cursor: 'default'\n  }];\n  var rootCompactStyles = {\n    minHeight: values.compactRowHeight,\n    border: 0\n  };\n  var cellCompactStyles = {\n    minHeight: values.compactRowHeight,\n    paddingTop: values.compactRowVerticalPadding,\n    paddingBottom: values.compactRowVerticalPadding,\n    paddingLeft: cellStyleProps.cellLeftPadding + \"px\"\n  };\n  var defaultCellStyles = [getFocusStyle(theme, {\n    inset: -1\n  }), classNames.cell, {\n    display: 'inline-block',\n    position: 'relative',\n    boxSizing: 'border-box',\n    minHeight: values.rowHeight,\n    verticalAlign: 'top',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    paddingTop: values.rowVerticalPadding,\n    paddingBottom: values.rowVerticalPadding,\n    paddingLeft: cellStyleProps.cellLeftPadding + \"px\",\n    selectors: (_j = {\n      '& > button': {\n        maxWidth: '100%'\n      }\n    }, _j[IsFocusableSelector] = getFocusStyle(theme, {\n      inset: -1,\n      borderColor: neutralSecondary,\n      outlineColor: white\n    }), _j)\n  }, isSelected && {\n    selectors: (_k = {}, _k[HighContrastSelector] = __assign({\n      background: 'Highlight',\n      color: 'HighlightText'\n    }, getHighContrastNoAdjustStyle()), _k)\n  }, compact && cellCompactStyles, disabled && {\n    opacity: 0.5\n  }];\n  return {\n    root: [classNames.root, AnimationClassNames.fadeIn400, droppingClassName, theme.fonts.small, isCheckVisible && classNames.isCheckVisible, getFocusStyle(theme, {\n      borderColor: focusBorder,\n      outlineColor: white\n    }), {\n      borderBottom: \"1px solid \" + neutralLighter,\n      background: colors.defaultBackground,\n      color: colors.defaultMetaText,\n      // This ensures that the row always tries to consume is minimum width and does not compress.\n      display: 'inline-flex',\n      minWidth: '100%',\n      minHeight: values.rowHeight,\n      whiteSpace: 'nowrap',\n      padding: 0,\n      boxSizing: 'border-box',\n      verticalAlign: 'top',\n      textAlign: 'left',\n      selectors: (_l = {}, _l[\".\" + classNames.listCellFirstChild + \" &:before\"] = {\n        display: 'none'\n      }, _l['&:hover'] = {\n        background: colors.defaultHoverBackground,\n        color: colors.defaultHoverMetaText,\n        selectors: (_m = {}, _m[\".\" + classNames.isRowHeader] = {\n          color: colors.defaultHoverHeaderText\n        }, _m[\".\" + classNames.cell + \" > .\" + LinkGlobalClassNames.root] = {\n          color: focusedLinkColor\n        }, _m)\n      }, _l[\"&:hover .\" + classNames.check] = {\n        opacity: 1\n      }, _l[\".\" + IsFocusVisibleClassName + \" &:focus .\" + classNames.check] = {\n        opacity: 1\n      }, _l['.ms-GroupSpacer'] = {\n        flexShrink: 0,\n        flexGrow: 0\n      }, _l)\n    }, isSelected && selectedStyles, !canSelect && cannotSelectStyles, compact && rootCompactStyles, className],\n    cellUnpadded: {\n      paddingRight: cellStyleProps.cellRightPadding + \"px\"\n    },\n    cellPadded: {\n      paddingRight: cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding + \"px\",\n      selectors: (_o = {}, _o[\"&.\" + classNames.cellCheck] = {\n        paddingRight: 0\n      }, _o)\n    },\n    cell: defaultCellStyles,\n    cellAnimation: enableUpdateAnimations && AnimationStyles.slideLeftIn40,\n    cellMeasurer: [classNames.cellMeasurer, {\n      overflow: 'visible',\n      whiteSpace: 'nowrap'\n    }],\n    checkCell: [defaultCellStyles, classNames.cellCheck, checkboxCellClassName, {\n      padding: 0,\n      // Ensure that the check cell covers the top border of the cell.\n      // This ensures the click target does not leave a spot which would\n      // cause other items to be deselected.\n      paddingTop: 1,\n      marginTop: -1,\n      flexShrink: 0\n    }],\n    checkCover: {\n      position: 'absolute',\n      top: -1,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      display: anySelected ? 'block' : 'none'\n    },\n    fields: [classNames.fields, {\n      display: 'flex',\n      alignItems: 'stretch'\n    }],\n    isRowHeader: [classNames.isRowHeader, {\n      color: colors.defaultHeaderText,\n      fontSize: fonts.medium.fontSize\n    }, isSelected && {\n      color: colors.selectedHeaderText,\n      fontWeight: FontWeights.semibold,\n      selectors: (_p = {}, _p[HighContrastSelector] = {\n        color: 'HighlightText'\n      }, _p)\n    }],\n    isMultiline: [defaultCellStyles, {\n      whiteSpace: 'normal',\n      wordBreak: 'break-word',\n      textOverflow: 'clip'\n    }],\n    check: [classNames.check]\n  };\n};","map":{"version":3,"mappings":"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","names":["AnimationClassNames","AnimationStyles","HighContrastSelector","getFocusStyle","getGlobalClassNames","FontWeights","getHighContrastNoAdjustStyle","IsFocusVisibleClassName","GlobalClassNames","LinkGlobalClassNames","DetailsRowGlobalClassNames","root","compact","cell","cellAnimation","cellCheck","check","cellMeasurer","listCellFirstChild","isContentUnselectable","isSelected","isCheckVisible","isRowHeader","fields","IsFocusableSelector","DEFAULT_CELL_STYLE_PROPS","cellLeftPadding","cellRightPadding","cellExtraRightPadding","DEFAULT_ROW_HEIGHTS","rowHeight","compactRowHeight","values","rowVerticalPadding","compactRowVerticalPadding","getDetailsRowStyles","props","canSelect","droppingClassName","anySelected","checkboxCellClassName","className","_q","cellStyleProps","enableUpdateAnimations","disabled","theme","fonts","palette","white","neutralSecondary","neutralLighter","neutralLight","neutralDark","neutralQuaternaryAlt","semanticColors","focusBorder","focusedLinkColor","classNames","colors","defaultHeaderText","neutralPrimary","defaultMetaText","defaultBackground","defaultHoverHeaderText","defaultHoverMetaText","defaultHoverBackground","selectedHeaderText","selectedMetaText","selectedBackground","selectedHoverHeaderText","selectedHoverMetaText","selectedHoverBackground","focusHeaderText","focusMetaText","focusBackground","focusHoverBackground","rowHighContrastFocus","top","right","bottom","left","selectedStyles","inset","borderColor","outlineColor","highContrastStyle","color","background","borderBottom","selectors","position","display","height","content","borderTop","_a","_b","_c","_d","forcedColorAdjust","_e","_f","_g","_h","__assign","a","cannotSelectStyles","userSelect","cursor","rootCompactStyles","minHeight","border","cellCompactStyles","paddingTop","paddingBottom","paddingLeft","defaultCellStyles","boxSizing","verticalAlign","whiteSpace","overflow","textOverflow","maxWidth","_j","_k","opacity","fadeIn400","small","minWidth","padding","textAlign","_l","_m","flexShrink","flexGrow","cellUnpadded","paddingRight","cellPadded","_o","slideLeftIn40","checkCell","marginTop","checkCover","alignItems","fontSize","medium","fontWeight","semibold","_p","isMultiline","wordBreak"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\DetailsList\\DetailsRow.styles.ts"],"sourcesContent":["import {\n  AnimationClassNames,\n  AnimationStyles,\n  HighContrastSelector,\n  getFocusStyle,\n  getGlobalClassNames,\n  FontWeights,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport { GlobalClassNames as LinkGlobalClassNames } from '../../components/Link/Link.styles';\nimport type { IDetailsRowStyleProps, IDetailsRowStyles, ICellStyleProps } from './DetailsRow.types';\nimport type { IStyle } from '../../Styling';\n\nexport const DetailsRowGlobalClassNames = {\n  root: 'ms-DetailsRow',\n  // TODO: in Fabric 7.0 lowercase the 'Compact' for consistency across other components.\n  compact: 'ms-DetailsList--Compact',\n  cell: 'ms-DetailsRow-cell',\n  cellAnimation: 'ms-DetailsRow-cellAnimation',\n  cellCheck: 'ms-DetailsRow-cellCheck',\n  check: 'ms-DetailsRow-check',\n  cellMeasurer: 'ms-DetailsRow-cellMeasurer',\n  listCellFirstChild: 'ms-List-cell:first-child',\n  isContentUnselectable: 'is-contentUnselectable',\n  isSelected: 'is-selected',\n  isCheckVisible: 'is-check-visible',\n  isRowHeader: 'is-row-header',\n  fields: 'ms-DetailsRow-fields',\n};\nconst IsFocusableSelector = \"[data-is-focusable='true']\";\n\nexport const DEFAULT_CELL_STYLE_PROPS: ICellStyleProps = {\n  cellLeftPadding: 12,\n  cellRightPadding: 8,\n  cellExtraRightPadding: 24,\n};\n\n// Source of default row heights to share.\nexport const DEFAULT_ROW_HEIGHTS = {\n  rowHeight: 42,\n  compactRowHeight: 32,\n};\n\n// Constant values\nconst values = {\n  ...DEFAULT_ROW_HEIGHTS,\n  rowVerticalPadding: 11,\n  compactRowVerticalPadding: 6,\n};\n\nexport const getDetailsRowStyles = (props: IDetailsRowStyleProps): IDetailsRowStyles => {\n  const {\n    theme,\n    isSelected,\n    canSelect,\n    droppingClassName,\n    anySelected,\n    isCheckVisible,\n    checkboxCellClassName,\n    compact,\n    className,\n    cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n    enableUpdateAnimations,\n    disabled,\n  } = props;\n\n  const { palette, fonts } = theme;\n  const {\n    neutralPrimary,\n    white,\n    neutralSecondary,\n    neutralLighter,\n    neutralLight,\n    neutralDark,\n    neutralQuaternaryAlt,\n  } = palette;\n  const { focusBorder, linkHovered: focusedLinkColor } = theme.semanticColors;\n\n  const classNames = getGlobalClassNames(DetailsRowGlobalClassNames, theme);\n\n  const colors = {\n    // Default\n    defaultHeaderText: neutralPrimary,\n    defaultMetaText: neutralSecondary,\n    defaultBackground: white,\n\n    // Default Hover\n    defaultHoverHeaderText: neutralDark,\n    defaultHoverMetaText: neutralPrimary,\n    defaultHoverBackground: neutralLighter,\n\n    // Selected\n    selectedHeaderText: neutralDark,\n    selectedMetaText: neutralPrimary,\n    selectedBackground: neutralLight,\n\n    // Selected Hover\n    selectedHoverHeaderText: neutralDark,\n    selectedHoverMetaText: neutralPrimary,\n    selectedHoverBackground: neutralQuaternaryAlt,\n\n    // Focus\n    focusHeaderText: neutralDark,\n    focusMetaText: neutralPrimary,\n    focusBackground: neutralLight,\n    focusHoverBackground: neutralQuaternaryAlt,\n  };\n\n  const rowHighContrastFocus = {\n    top: 2,\n    right: 2,\n    bottom: 2,\n    left: 2,\n  };\n\n  // Selected row styles\n  const selectedStyles: IStyle = [\n    getFocusStyle(theme, {\n      inset: -1,\n      borderColor: focusBorder,\n      outlineColor: white,\n      highContrastStyle: rowHighContrastFocus,\n    }),\n    classNames.isSelected,\n    {\n      color: colors.selectedMetaText,\n      background: colors.selectedBackground,\n      borderBottom: `1px solid ${white}`,\n      selectors: {\n        '&:before': {\n          position: 'absolute',\n          display: 'block',\n          top: -1,\n          height: 1,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          content: '',\n          borderTop: `1px solid ${white}`,\n        },\n\n        [`.${classNames.cell} > .${LinkGlobalClassNames.root}`]: {\n          color: focusedLinkColor,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'HighlightText',\n            },\n          },\n        },\n\n        // Selected State hover\n        '&:hover': {\n          background: colors.selectedHoverBackground,\n          color: colors.selectedHoverMetaText,\n          selectors: {\n            // Selected State hover meta cell\n            [HighContrastSelector]: {\n              background: 'Highlight',\n              selectors: {\n                [`.${classNames.cell}`]: {\n                  color: 'HighlightText',\n                },\n                [`.${classNames.cell} > .${LinkGlobalClassNames.root}`]: {\n                  forcedColorAdjust: 'none',\n                  color: 'HighlightText',\n                },\n              },\n            },\n\n            // Selected State hover Header cell\n            [`.${classNames.isRowHeader}`]: {\n              color: colors.selectedHoverHeaderText,\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'HighlightText',\n                },\n              },\n            },\n          },\n        },\n\n        // Focus state\n        '&:focus': {\n          background: colors.focusBackground,\n          selectors: {\n            // Selected State hover meta cell\n            [`.${classNames.cell}`]: {\n              color: colors.focusMetaText,\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'HighlightText',\n                  selectors: {\n                    '> a': {\n                      color: 'HighlightText',\n                    },\n                  },\n                },\n              },\n            },\n\n            // Row header cell\n            [`.${classNames.isRowHeader}`]: {\n              color: colors.focusHeaderText,\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'HighlightText',\n                },\n              },\n            },\n\n            // Ensure high-contrast mode overrides default focus background\n            [HighContrastSelector]: {\n              background: 'Highlight',\n            },\n          },\n        },\n\n        [HighContrastSelector]: {\n          background: 'Highlight',\n          color: 'HighlightText',\n          ...getHighContrastNoAdjustStyle(),\n          selectors: {\n            a: {\n              color: 'HighlightText',\n            },\n          },\n        },\n\n        // Focus and hover state\n        '&:focus:hover': {\n          background: colors.focusHoverBackground,\n        },\n      },\n    },\n  ];\n\n  const cannotSelectStyles: IStyle = [\n    classNames.isContentUnselectable,\n    {\n      userSelect: 'none',\n      cursor: 'default',\n    },\n  ];\n\n  const rootCompactStyles: IStyle = {\n    minHeight: values.compactRowHeight,\n    border: 0,\n  };\n\n  const cellCompactStyles: IStyle = {\n    minHeight: values.compactRowHeight,\n    paddingTop: values.compactRowVerticalPadding,\n    paddingBottom: values.compactRowVerticalPadding,\n    paddingLeft: `${cellStyleProps.cellLeftPadding}px`,\n  };\n\n  const defaultCellStyles: IStyle = [\n    getFocusStyle(theme, { inset: -1 }),\n    classNames.cell,\n    {\n      display: 'inline-block',\n      position: 'relative',\n      boxSizing: 'border-box',\n      minHeight: values.rowHeight,\n      verticalAlign: 'top',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingTop: values.rowVerticalPadding,\n      paddingBottom: values.rowVerticalPadding,\n      paddingLeft: `${cellStyleProps.cellLeftPadding}px`,\n      selectors: {\n        '& > button': {\n          maxWidth: '100%',\n        },\n\n        [IsFocusableSelector]: getFocusStyle(theme, { inset: -1, borderColor: neutralSecondary, outlineColor: white }),\n      },\n    },\n\n    isSelected && {\n      selectors: {\n        [HighContrastSelector]: {\n          background: 'Highlight',\n          color: 'HighlightText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n\n    compact && cellCompactStyles,\n    disabled && { opacity: 0.5 },\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      AnimationClassNames.fadeIn400,\n      droppingClassName,\n      theme.fonts.small,\n      isCheckVisible && classNames.isCheckVisible,\n      getFocusStyle(theme, { borderColor: focusBorder, outlineColor: white }),\n      {\n        borderBottom: `1px solid ${neutralLighter}`,\n        background: colors.defaultBackground,\n        color: colors.defaultMetaText,\n        // This ensures that the row always tries to consume is minimum width and does not compress.\n        display: 'inline-flex',\n        minWidth: '100%',\n        minHeight: values.rowHeight,\n        whiteSpace: 'nowrap',\n        padding: 0,\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        textAlign: 'left',\n        selectors: {\n          [`.${classNames.listCellFirstChild} &:before`]: {\n            display: 'none',\n          },\n\n          '&:hover': {\n            background: colors.defaultHoverBackground,\n            color: colors.defaultHoverMetaText,\n            selectors: {\n              [`.${classNames.isRowHeader}`]: {\n                color: colors.defaultHoverHeaderText,\n              },\n\n              [`.${classNames.cell} > .${LinkGlobalClassNames.root}`]: {\n                color: focusedLinkColor,\n              },\n            },\n          },\n\n          [`&:hover .${classNames.check}`]: {\n            opacity: 1,\n          },\n\n          [`.${IsFocusVisibleClassName} &:focus .${classNames.check}`]: {\n            opacity: 1,\n          },\n\n          '.ms-GroupSpacer': {\n            flexShrink: 0,\n            flexGrow: 0,\n          },\n        },\n      },\n      isSelected && selectedStyles,\n      !canSelect && cannotSelectStyles,\n      compact && rootCompactStyles,\n      className,\n    ],\n\n    cellUnpadded: {\n      paddingRight: `${cellStyleProps.cellRightPadding}px`,\n    },\n\n    cellPadded: {\n      paddingRight: `${cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding}px`,\n      selectors: {\n        [`&.${classNames.cellCheck}`]: {\n          paddingRight: 0,\n        },\n      },\n    },\n\n    cell: defaultCellStyles,\n    cellAnimation: enableUpdateAnimations && AnimationStyles.slideLeftIn40,\n    cellMeasurer: [\n      classNames.cellMeasurer,\n      {\n        overflow: 'visible',\n        whiteSpace: 'nowrap',\n      },\n    ],\n    checkCell: [\n      defaultCellStyles,\n      classNames.cellCheck,\n      checkboxCellClassName,\n      {\n        padding: 0,\n        // Ensure that the check cell covers the top border of the cell.\n        // This ensures the click target does not leave a spot which would\n        // cause other items to be deselected.\n        paddingTop: 1,\n        marginTop: -1,\n        flexShrink: 0,\n      },\n    ],\n    checkCover: {\n      position: 'absolute',\n      top: -1,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      display: anySelected ? 'block' : 'none',\n    },\n    fields: [\n      classNames.fields,\n      {\n        display: 'flex',\n        alignItems: 'stretch',\n      },\n    ],\n    isRowHeader: [\n      classNames.isRowHeader,\n      {\n        color: colors.defaultHeaderText,\n        fontSize: fonts.medium.fontSize,\n      },\n      isSelected && {\n        color: colors.selectedHeaderText,\n        fontWeight: FontWeights.semibold,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'HighlightText',\n          },\n        },\n      },\n    ],\n    isMultiline: [\n      defaultCellStyles,\n      {\n        whiteSpace: 'normal',\n        wordBreak: 'break-word',\n        textOverflow: 'clip',\n      },\n    ],\n    check: [classNames.check],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}