{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, getGlobalClassNames, IconFontSizes, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { getRTL } from '../../Utilities';\nexport var CheckGlobalClassNames = {\n  root: 'ms-Check',\n  circle: 'ms-Check-circle',\n  check: 'ms-Check-check',\n\n  /** Must be manually applied to the parent element of the check. */\n  checkHost: 'ms-Check-checkHost'\n};\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d, _e; // eslint-disable-next-line deprecation/deprecation\n\n\n  var _f = props.height,\n      height = _f === void 0 ? props.checkBoxHeight || '18px' : _f,\n      checked = props.checked,\n      className = props.className,\n      theme = props.theme;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var isRTL = getRTL(theme);\n  var classNames = getGlobalClassNames(CheckGlobalClassNames, theme);\n  var sharedCircleCheck = {\n    fontSize: height,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: height,\n    height: height,\n    textAlign: 'center',\n    // inline-flex prevents the check from shifting with custom line height styles\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    verticalAlign: 'middle'\n  };\n  return {\n    root: [classNames.root, fonts.medium, {\n      // lineHeight currently needs to be a string to output without 'px'\n      lineHeight: '1',\n      width: height,\n      height: height,\n      verticalAlign: 'top',\n      position: 'relative',\n      userSelect: 'none',\n      selectors: (_a = {\n        ':before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: '1px',\n          right: '1px',\n          bottom: '1px',\n          left: '1px',\n          borderRadius: '50%',\n          opacity: 1,\n          background: semanticColors.bodyBackground\n        }\n      }, _a[\".\" + classNames.checkHost + \":hover &, .\" + classNames.checkHost + \":focus &, &:hover, &:focus\"] = {\n        opacity: 1\n      }, _a)\n    }, checked && ['is-checked', {\n      selectors: {\n        ':before': {\n          background: palette.themePrimary,\n          opacity: 1,\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            background: 'Window'\n          }, _b)\n        }\n      }\n    }], className],\n    circle: [classNames.circle, sharedCircleCheck, {\n      color: palette.neutralSecondary,\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'WindowText'\n      }, _c)\n    }, checked && {\n      color: palette.white\n    }],\n    check: [classNames.check, sharedCircleCheck, {\n      opacity: 0,\n      color: palette.neutralSecondary,\n      fontSize: IconFontSizes.medium,\n      left: isRTL ? '-0.5px' : '.5px',\n      top: '-1px',\n      selectors: (_d = {\n        ':hover': {\n          opacity: 1\n        }\n      }, _d[HighContrastSelector] = __assign({}, getHighContrastNoAdjustStyle()), _d)\n    }, checked && {\n      opacity: 1,\n      color: palette.white,\n      fontWeight: 900,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        border: 'none',\n        color: 'WindowText'\n      }, _e)\n    }],\n    checkHost: classNames.checkHost\n  };\n};","map":{"version":3,"mappings":"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","names":["HighContrastSelector","getGlobalClassNames","IconFontSizes","getHighContrastNoAdjustStyle","getRTL","CheckGlobalClassNames","root","circle","check","checkHost","getStyles","props","checkBoxHeight","_f","checked","className","theme","semanticColors","fonts","isRTL","classNames","sharedCircleCheck","fontSize","height","position","left","top","width","textAlign","display","alignItems","justifyContent","verticalAlign","medium","lineHeight","userSelect","selectors","content","right","bottom","borderRadius","opacity","background","bodyBackground","_a","palette","themePrimary","_b","color","neutralSecondary","_c","white","_d","__assign","fontWeight","_e","border"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\Check\\Check.styles.ts"],"sourcesContent":["import { HighContrastSelector, getGlobalClassNames, IconFontSizes, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { getRTL } from '../../Utilities';\nimport type { ICheckStyleProps, ICheckStyles } from './Check.types';\nimport type { IStyle } from '../../Styling';\n\nexport const CheckGlobalClassNames = {\n  root: 'ms-Check',\n  circle: 'ms-Check-circle',\n  check: 'ms-Check-check',\n  /** Must be manually applied to the parent element of the check. */\n  checkHost: 'ms-Check-checkHost',\n};\n\nexport const getStyles = (props: ICheckStyleProps): ICheckStyles => {\n  // eslint-disable-next-line deprecation/deprecation\n  const { height = props.checkBoxHeight || '18px', checked, className, theme } = props;\n\n  const { palette, semanticColors, fonts } = theme;\n  const isRTL = getRTL(theme);\n\n  const classNames = getGlobalClassNames(CheckGlobalClassNames, theme);\n\n  const sharedCircleCheck: IStyle = {\n    fontSize: height,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: height,\n    height: height,\n    textAlign: 'center',\n    // inline-flex prevents the check from shifting with custom line height styles\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    verticalAlign: 'middle',\n  };\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      {\n        // lineHeight currently needs to be a string to output without 'px'\n        lineHeight: '1',\n        width: height,\n        height: height,\n        verticalAlign: 'top',\n        position: 'relative',\n        userSelect: 'none',\n\n        selectors: {\n          ':before': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '1px',\n            right: '1px',\n            bottom: '1px',\n            left: '1px',\n            borderRadius: '50%',\n            opacity: 1,\n            background: semanticColors.bodyBackground,\n          },\n\n          [`.${classNames.checkHost}:hover &, .${classNames.checkHost}:focus &, &:hover, &:focus`]: {\n            opacity: 1,\n          },\n        },\n      },\n\n      checked && [\n        'is-checked',\n        {\n          selectors: {\n            ':before': {\n              background: palette.themePrimary,\n              opacity: 1,\n              selectors: {\n                [HighContrastSelector]: {\n                  background: 'Window',\n                },\n              },\n            },\n          },\n        },\n      ],\n      className,\n    ],\n\n    circle: [\n      classNames.circle,\n      sharedCircleCheck,\n\n      {\n        color: palette.neutralSecondary,\n\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'WindowText',\n          },\n        },\n      },\n\n      checked && {\n        color: palette.white,\n      },\n    ],\n\n    check: [\n      classNames.check,\n      sharedCircleCheck,\n\n      {\n        opacity: 0,\n        color: palette.neutralSecondary,\n        fontSize: IconFontSizes.medium,\n        left: isRTL ? '-0.5px' : '.5px', // for centering the check icon inside the circle.\n        top: '-1px', // the check is slightly lower than center compared to the circle.\n\n        selectors: {\n          ':hover': {\n            opacity: 1,\n          },\n\n          [HighContrastSelector]: {\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      checked && {\n        opacity: 1,\n        color: palette.white,\n        fontWeight: 900,\n\n        selectors: {\n          [HighContrastSelector]: {\n            border: 'none',\n            color: 'WindowText',\n          },\n        },\n      },\n    ],\n\n    checkHost: classNames.checkHost,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}