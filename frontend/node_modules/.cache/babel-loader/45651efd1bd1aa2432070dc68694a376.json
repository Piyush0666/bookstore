{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\nimport { AnimationVariables, getGlobalClassNames, HighContrastSelector, normalize, FontWeights, getHighContrastNoAdjustStyle } from '@fluentui/style-utilities';\nimport { IsFocusVisibleClassName } from '@fluentui/utilities';\nvar globalClassNames = {\n  count: 'ms-Pivot-count',\n  icon: 'ms-Pivot-icon',\n  linkIsSelected: 'is-selected',\n  link: 'ms-Pivot-link',\n  linkContent: 'ms-Pivot-linkContent',\n  root: 'ms-Pivot',\n  rootIsLarge: 'ms-Pivot--large',\n  rootIsTabs: 'ms-Pivot--tabs',\n  text: 'ms-Pivot-text',\n  linkInMenu: 'ms-Pivot-linkInMenu',\n  overflowMenuButton: 'ms-Pivot-overflowMenuButton'\n};\n\nvar getLinkStyles = function (props, classNames, isLinkInOverflowMenu) {\n  var _a, _b, _c;\n\n  if (isLinkInOverflowMenu === void 0) {\n    isLinkInOverflowMenu = false;\n  }\n\n  var linkSize = props.linkSize,\n      linkFormat = props.linkFormat;\n  var _d = props.theme,\n      semanticColors = _d.semanticColors,\n      fonts = _d.fonts;\n  var rootIsLarge = linkSize === 'large';\n  var rootIsTabs = linkFormat === 'tabs';\n  return [fonts.medium, {\n    color: semanticColors.actionLink,\n    padding: '0 8px',\n    position: 'relative',\n    backgroundColor: 'transparent',\n    border: 0,\n    borderRadius: 0,\n    selectors: {\n      ':hover': {\n        backgroundColor: semanticColors.buttonBackgroundHovered,\n        color: semanticColors.buttonTextHovered,\n        cursor: 'pointer'\n      },\n      ':active': {\n        backgroundColor: semanticColors.buttonBackgroundPressed,\n        color: semanticColors.buttonTextHovered\n      },\n      ':focus': {\n        outline: 'none'\n      }\n    }\n  }, !isLinkInOverflowMenu && [{\n    display: 'inline-block',\n    lineHeight: 44,\n    height: 44,\n    marginRight: 8,\n    textAlign: 'center',\n    selectors: (_a = {}, _a[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n      outline: \"1px solid \" + semanticColors.focusBorder\n    }, _a[\".\" + IsFocusVisibleClassName + \" &:focus:after\"] = {\n      content: 'attr(data-content)',\n      position: 'relative',\n      border: 0\n    }, _a[':before'] = {\n      backgroundColor: 'transparent',\n      bottom: 0,\n      content: '\"\"',\n      height: 2,\n      left: 8,\n      position: 'absolute',\n      right: 8,\n      transition: \"left \" + AnimationVariables.durationValue2 + \" \" + AnimationVariables.easeFunction2 + \",\\n                        right \" + AnimationVariables.durationValue2 + \" \" + AnimationVariables.easeFunction2\n    }, _a[':after'] = {\n      color: 'transparent',\n      content: 'attr(data-content)',\n      display: 'block',\n      fontWeight: FontWeights.bold,\n      height: 1,\n      overflow: 'hidden',\n      visibility: 'hidden'\n    }, _a)\n  }, rootIsLarge && {\n    fontSize: fonts.large.fontSize\n  }, rootIsTabs && [{\n    marginRight: 0,\n    height: 44,\n    lineHeight: 44,\n    backgroundColor: semanticColors.buttonBackground,\n    padding: '0 10px',\n    verticalAlign: 'top',\n    selectors: (_b = {\n      ':focus': {\n        outlineOffset: '-1px'\n      }\n    }, _b[\".\" + IsFocusVisibleClassName + \" &:focus::before\"] = {\n      height: 'auto',\n      background: 'transparent',\n      transition: 'none'\n    }, _b['&:hover, &:focus'] = {\n      color: semanticColors.buttonTextCheckedHovered\n    }, _b['&:active, &:hover'] = {\n      color: semanticColors.primaryButtonText,\n      backgroundColor: semanticColors.primaryButtonBackground\n    }, _b[\"&.\" + classNames.linkIsSelected] = {\n      backgroundColor: semanticColors.primaryButtonBackground,\n      color: semanticColors.primaryButtonText,\n      fontWeight: FontWeights.regular,\n      selectors: (_c = {\n        ':before': {\n          backgroundColor: 'transparent',\n          transition: 'none',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          content: '\"\"',\n          height: 0\n        },\n        ':hover': {\n          backgroundColor: semanticColors.primaryButtonBackgroundHovered,\n          color: semanticColors.primaryButtonText\n        },\n        '&:active': {\n          backgroundColor: semanticColors.primaryButtonBackgroundPressed,\n          color: semanticColors.primaryButtonText\n        }\n      }, _c[HighContrastSelector] = __assign({\n        fontWeight: FontWeights.semibold,\n        color: 'HighlightText',\n        background: 'Highlight'\n      }, getHighContrastNoAdjustStyle()), _c)\n    }, _b)\n  }]]];\n};\n\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d;\n\n  var className = props.className,\n      linkSize = props.linkSize,\n      linkFormat = props.linkFormat,\n      theme = props.theme;\n  var semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(globalClassNames, theme);\n  var rootIsLarge = linkSize === 'large';\n  var rootIsTabs = linkFormat === 'tabs';\n  return {\n    root: [classNames.root, fonts.medium, normalize, {\n      position: 'relative',\n      color: semanticColors.link,\n      whiteSpace: 'nowrap'\n    }, rootIsLarge && classNames.rootIsLarge, rootIsTabs && classNames.rootIsTabs, className],\n    itemContainer: {\n      selectors: {\n        '&[hidden]': {\n          display: 'none'\n        }\n      }\n    },\n    link: __spreadArray(__spreadArray([classNames.link], getLinkStyles(props, classNames)), [(_a = {}, _a[\"&[data-is-overflowing='true']\"] = {\n      display: 'none'\n    }, _a)]),\n    overflowMenuButton: [classNames.overflowMenuButton, (_b = {\n      visibility: 'hidden',\n      position: 'absolute',\n      right: 0\n    }, _b[\".\" + classNames.link + \"[data-is-overflowing='true'] ~ &\"] = {\n      visibility: 'visible',\n      position: 'relative'\n    }, _b)],\n    linkInMenu: __spreadArray(__spreadArray([classNames.linkInMenu], getLinkStyles(props, classNames, true)), [{\n      textAlign: 'left',\n      width: '100%',\n      height: 36,\n      lineHeight: 36\n    }]),\n    linkIsSelected: [classNames.link, classNames.linkIsSelected, {\n      fontWeight: FontWeights.semibold,\n      selectors: (_c = {\n        ':before': {\n          backgroundColor: semanticColors.inputBackgroundChecked,\n          selectors: (_d = {}, _d[HighContrastSelector] = {\n            backgroundColor: 'Highlight'\n          }, _d)\n        },\n        ':hover::before': {\n          left: 0,\n          right: 0\n        }\n      }, _c[HighContrastSelector] = {\n        color: 'Highlight'\n      }, _c)\n    }],\n    linkContent: [classNames.linkContent, {\n      flex: '0 1 100%',\n      selectors: {\n        '& > * ': {\n          marginLeft: 4\n        },\n        '& > *:first-child': {\n          marginLeft: 0\n        }\n      }\n    }],\n    text: [classNames.text, {\n      display: 'inline-block',\n      verticalAlign: 'top'\n    }],\n    count: [classNames.count, {\n      display: 'inline-block',\n      verticalAlign: 'top'\n    }],\n    icon: classNames.icon\n  };\n};","map":{"version":3,"mappings":"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","names":["AnimationVariables","getGlobalClassNames","HighContrastSelector","normalize","FontWeights","getHighContrastNoAdjustStyle","IsFocusVisibleClassName","globalClassNames","count","icon","linkIsSelected","link","linkContent","root","rootIsLarge","rootIsTabs","text","linkInMenu","overflowMenuButton","getLinkStyles","props","classNames","isLinkInOverflowMenu","linkFormat","theme","semanticColors","fonts","linkSize","medium","color","actionLink","padding","position","backgroundColor","border","borderRadius","selectors","buttonBackgroundHovered","buttonTextHovered","cursor","buttonBackgroundPressed","outline","display","lineHeight","height","marginRight","textAlign","_a","focusBorder","content","bottom","left","right","transition","durationValue2","easeFunction2","fontWeight","bold","overflow","visibility","fontSize","large","buttonBackground","verticalAlign","outlineOffset","_b","background","buttonTextCheckedHovered","primaryButtonText","primaryButtonBackground","regular","top","primaryButtonBackgroundHovered","primaryButtonBackgroundPressed","_c","__assign","semibold","getStyles","whiteSpace","className","itemContainer","width","inputBackgroundChecked","_d","flex","marginLeft"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\Pivot\\Pivot.styles.ts"],"sourcesContent":["import {\n  AnimationVariables,\n  getGlobalClassNames,\n  HighContrastSelector,\n  normalize,\n  FontWeights,\n  getHighContrastNoAdjustStyle,\n} from '@fluentui/style-utilities';\nimport { IsFocusVisibleClassName } from '@fluentui/utilities';\nimport type { IPivotStyleProps, IPivotStyles } from './Pivot.types';\nimport type { IStyle } from '@fluentui/style-utilities';\n\nconst globalClassNames = {\n  count: 'ms-Pivot-count',\n  icon: 'ms-Pivot-icon',\n  linkIsSelected: 'is-selected',\n  link: 'ms-Pivot-link',\n  linkContent: 'ms-Pivot-linkContent',\n  root: 'ms-Pivot',\n  rootIsLarge: 'ms-Pivot--large',\n  rootIsTabs: 'ms-Pivot--tabs',\n  text: 'ms-Pivot-text',\n  linkInMenu: 'ms-Pivot-linkInMenu',\n  overflowMenuButton: 'ms-Pivot-overflowMenuButton',\n};\n\nconst getLinkStyles = (\n  props: IPivotStyleProps,\n  classNames: { [key: string]: string },\n  isLinkInOverflowMenu: boolean = false,\n): IStyle[] => {\n  const { linkSize, linkFormat } = props;\n  const { semanticColors, fonts } = props.theme;\n  const rootIsLarge = linkSize === 'large';\n  const rootIsTabs = linkFormat === 'tabs';\n\n  return [\n    fonts.medium,\n    {\n      color: semanticColors.actionLink,\n      padding: '0 8px',\n      position: 'relative',\n      backgroundColor: 'transparent',\n      border: 0,\n      borderRadius: 0,\n      selectors: {\n        ':hover': {\n          backgroundColor: semanticColors.buttonBackgroundHovered,\n          color: semanticColors.buttonTextHovered,\n          cursor: 'pointer',\n        },\n        ':active': {\n          backgroundColor: semanticColors.buttonBackgroundPressed,\n          color: semanticColors.buttonTextHovered,\n        },\n        ':focus': {\n          outline: 'none',\n        },\n      },\n    },\n    !isLinkInOverflowMenu && [\n      {\n        display: 'inline-block',\n        lineHeight: 44,\n        height: 44,\n        marginRight: 8,\n        textAlign: 'center',\n        selectors: {\n          [`.${IsFocusVisibleClassName} &:focus`]: {\n            outline: `1px solid ${semanticColors.focusBorder}`,\n          },\n\n          [`.${IsFocusVisibleClassName} &:focus:after`]: {\n            content: 'attr(data-content)',\n            position: 'relative',\n            border: 0,\n          },\n          ':before': {\n            backgroundColor: 'transparent',\n            bottom: 0,\n            content: '\"\"',\n            height: 2,\n            left: 8,\n            position: 'absolute',\n            right: 8,\n            transition: `left ${AnimationVariables.durationValue2} ${AnimationVariables.easeFunction2},\n                        right ${AnimationVariables.durationValue2} ${AnimationVariables.easeFunction2}`,\n          },\n          ':after': {\n            color: 'transparent',\n            content: 'attr(data-content)',\n            display: 'block',\n            fontWeight: FontWeights.bold,\n            height: 1,\n            overflow: 'hidden',\n            visibility: 'hidden',\n          },\n        },\n      },\n      rootIsLarge && {\n        fontSize: fonts.large.fontSize,\n      },\n      rootIsTabs && [\n        {\n          marginRight: 0,\n          height: 44,\n          lineHeight: 44,\n          backgroundColor: semanticColors.buttonBackground,\n          padding: '0 10px',\n          verticalAlign: 'top',\n\n          selectors: {\n            ':focus': {\n              outlineOffset: '-1px',\n            },\n            [`.${IsFocusVisibleClassName} &:focus::before`]: {\n              height: 'auto',\n              background: 'transparent',\n              transition: 'none',\n            },\n            '&:hover, &:focus': {\n              color: semanticColors.buttonTextCheckedHovered,\n            },\n            '&:active, &:hover': {\n              color: semanticColors.primaryButtonText,\n              backgroundColor: semanticColors.primaryButtonBackground,\n            },\n            [`&.${classNames.linkIsSelected}`]: {\n              backgroundColor: semanticColors.primaryButtonBackground,\n              color: semanticColors.primaryButtonText,\n              fontWeight: FontWeights.regular,\n              selectors: {\n                ':before': {\n                  backgroundColor: 'transparent',\n                  transition: 'none',\n                  position: 'absolute',\n                  top: 0,\n                  left: 0,\n                  right: 0,\n                  bottom: 0,\n                  content: '\"\"',\n                  height: 0,\n                },\n                ':hover': {\n                  backgroundColor: semanticColors.primaryButtonBackgroundHovered,\n                  color: semanticColors.primaryButtonText,\n                },\n                '&:active': {\n                  backgroundColor: semanticColors.primaryButtonBackgroundPressed,\n                  color: semanticColors.primaryButtonText,\n                },\n                [HighContrastSelector]: {\n                  fontWeight: FontWeights.semibold,\n                  color: 'HighlightText',\n                  background: 'Highlight',\n                  ...getHighContrastNoAdjustStyle(),\n                },\n              },\n            },\n          },\n        },\n      ],\n    ],\n  ];\n};\n\nexport const getStyles = (props: IPivotStyleProps): IPivotStyles => {\n  const { className, linkSize, linkFormat, theme } = props;\n  const { semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(globalClassNames, theme);\n\n  const rootIsLarge = linkSize === 'large';\n  const rootIsTabs = linkFormat === 'tabs';\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      normalize,\n      {\n        position: 'relative',\n        color: semanticColors.link,\n        whiteSpace: 'nowrap',\n      },\n      rootIsLarge && classNames.rootIsLarge,\n      rootIsTabs && classNames.rootIsTabs,\n      className,\n    ],\n    itemContainer: {\n      selectors: {\n        '&[hidden]': {\n          display: 'none',\n        },\n      },\n    },\n    link: [\n      classNames.link,\n      ...getLinkStyles(props, classNames),\n      {\n        [`&[data-is-overflowing='true']`]: {\n          display: 'none',\n        },\n      },\n    ],\n    overflowMenuButton: [\n      classNames.overflowMenuButton,\n      {\n        visibility: 'hidden',\n        position: 'absolute',\n        right: 0,\n        [`.${classNames.link}[data-is-overflowing='true'] ~ &`]: {\n          visibility: 'visible',\n          position: 'relative',\n        },\n      },\n    ],\n    linkInMenu: [\n      classNames.linkInMenu,\n      ...getLinkStyles(props, classNames, true),\n      {\n        textAlign: 'left',\n        width: '100%',\n        height: 36,\n        lineHeight: 36,\n      },\n    ],\n    linkIsSelected: [\n      classNames.link,\n      classNames.linkIsSelected,\n      {\n        fontWeight: FontWeights.semibold,\n        selectors: {\n          ':before': {\n            backgroundColor: semanticColors.inputBackgroundChecked,\n            selectors: {\n              [HighContrastSelector]: {\n                backgroundColor: 'Highlight',\n              },\n            },\n          },\n          ':hover::before': {\n            left: 0,\n            right: 0,\n          },\n          [HighContrastSelector]: {\n            color: 'Highlight',\n          },\n        },\n      },\n    ],\n    linkContent: [\n      classNames.linkContent,\n      {\n        flex: '0 1 100%',\n        selectors: {\n          '& > * ': {\n            marginLeft: 4,\n          },\n          '& > *:first-child': {\n            marginLeft: 0,\n          },\n        },\n      },\n    ],\n    text: [\n      classNames.text,\n      {\n        display: 'inline-block',\n        verticalAlign: 'top',\n      },\n    ],\n    count: [\n      classNames.count,\n      {\n        display: 'inline-block',\n        verticalAlign: 'top',\n      },\n    ],\n    icon: classNames.icon,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}