{"ast":null,"code":"import { getColorFromRGBA } from './getColorFromRGBA';\n/**\n * Gets a color with a single RGBA component updated to a new value.\n * Does not modify the original `color`. Alpha defaults to 100 if not set.\n */\n\nexport function updateRGB(color, component, value) {\n  var _a;\n\n  return getColorFromRGBA((_a = {\n    r: color.r,\n    g: color.g,\n    b: color.b,\n    a: color.a\n  }, _a[component] = value, _a));\n}","map":{"version":3,"mappings":"AAAA,SAASA,gBAAT,QAAiC,oBAAjC;AAGA;;;;;AAIA,OAAM,SAAUC,SAAV,CAAoBC,KAApB,EAAmCC,SAAnC,EAA0DC,KAA1D,EAAuE;;;EAC3E,OAAOJ,gBAAgB;IACrBK,CAAC,EAAEH,KAAK,CAACG,CADY;IAErBC,CAAC,EAAEJ,KAAK,CAACI,CAFY;IAGrBC,CAAC,EAAEL,KAAK,CAACK,CAHY;IAIrBC,CAAC,EAAEN,KAAK,CAACM;EAJY,GAKrBC,GAACN,SAAD,IAAaC,KALQ,MAAvB;AAOD","names":["getColorFromRGBA","updateRGB","color","component","value","r","g","b","a","_a"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\utilities\\src\\utilities\\color\\updateRGB.ts"],"sourcesContent":["import { getColorFromRGBA } from './getColorFromRGBA';\nimport type { IColor, IRGB } from './interfaces';\n\n/**\n * Gets a color with a single RGBA component updated to a new value.\n * Does not modify the original `color`. Alpha defaults to 100 if not set.\n */\nexport function updateRGB(color: IColor, component: keyof IRGB, value: number): IColor {\n  return getColorFromRGBA({\n    r: color.r,\n    g: color.g,\n    b: color.b,\n    a: color.a,\n    [component]: value,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}