{"ast":null,"code":"import * as React from 'react';\nimport { KeyCodes, css, getRTLSafeKeyCode } from '@fluentui/utilities';\nimport { addDays, addWeeks, compareDates, findAvailableDate, DateRangeType } from '@fluentui/date-time-utilities';\nexport var CalendarGridDayCell = function (props) {\n  var _a;\n\n  var navigatedDate = props.navigatedDate,\n      dateTimeFormatter = props.dateTimeFormatter,\n      allFocusable = props.allFocusable,\n      strings = props.strings,\n      activeDescendantId = props.activeDescendantId,\n      navigatedDayRef = props.navigatedDayRef,\n      calculateRoundedStyles = props.calculateRoundedStyles,\n      weeks = props.weeks,\n      classNames = props.classNames,\n      day = props.day,\n      dayIndex = props.dayIndex,\n      weekIndex = props.weekIndex,\n      weekCorners = props.weekCorners,\n      ariaHidden = props.ariaHidden,\n      customDayCellRef = props.customDayCellRef,\n      dateRangeType = props.dateRangeType,\n      daysToSelectInDayView = props.daysToSelectInDayView,\n      onSelectDate = props.onSelectDate,\n      restrictedDates = props.restrictedDates,\n      minDate = props.minDate,\n      maxDate = props.maxDate,\n      onNavigateDate = props.onNavigateDate,\n      getDayInfosInRangeOfDay = props.getDayInfosInRangeOfDay,\n      getRefsFromDayInfos = props.getRefsFromDayInfos;\n  var cornerStyle = (_a = weekCorners === null || weekCorners === void 0 ? void 0 : weekCorners[weekIndex + '_' + dayIndex]) !== null && _a !== void 0 ? _a : '';\n  var isNavigatedDate = compareDates(navigatedDate, day.originalDate);\n\n  var navigateMonthEdge = function (ev, date) {\n    var targetDate = undefined;\n    var direction = 1; // by default search forward\n    // eslint-disable-next-line deprecation/deprecation\n\n    if (ev.which === KeyCodes.up) {\n      targetDate = addWeeks(date, -1);\n      direction = -1; // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === KeyCodes.down) {\n      targetDate = addWeeks(date, 1); // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\n      targetDate = addDays(date, -1);\n      direction = -1; // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\n      targetDate = addDays(date, 1);\n    }\n\n    if (!targetDate) {\n      // if we couldn't find a target date at all, do nothing\n      return;\n    }\n\n    var findAvailableDateOptions = {\n      initialDate: date,\n      targetDate: targetDate,\n      direction: direction,\n      restrictedDates: restrictedDates,\n      minDate: minDate,\n      maxDate: maxDate\n    }; // target date is restricted, search in whatever direction until finding the next possible date,\n    // stopping at boundaries\n\n    var nextDate = findAvailableDate(findAvailableDateOptions);\n\n    if (!nextDate) {\n      // if no dates available in initial direction, try going backwards\n      findAvailableDateOptions.direction = -direction;\n      nextDate = findAvailableDate(findAvailableDateOptions);\n    } // if the nextDate is still inside the same focusZone area, let the focusZone handle setting the focus so we\n    // don't jump the view unnecessarily\n\n\n    var isInCurrentView = weeks && nextDate && weeks.slice(1, weeks.length - 1).some(function (week) {\n      return week.some(function (dayToCompare) {\n        return compareDates(dayToCompare.originalDate, nextDate);\n      });\n    });\n\n    if (isInCurrentView) {\n      return;\n    } // else, fire navigation on the date to change the view to show it\n\n\n    if (nextDate) {\n      onNavigateDate(nextDate, true);\n      ev.preventDefault();\n    }\n  };\n\n  var onMouseOverDay = function (ev) {\n    var dayInfos = getDayInfosInRangeOfDay(day);\n    var dayRefs = getRefsFromDayInfos(dayInfos);\n    dayRefs.forEach(function (dayRef, index) {\n      var _a;\n\n      if (dayRef) {\n        dayRef.classList.add('ms-CalendarDay-hoverStyle');\n\n        if (!dayInfos[index].isSelected && dateRangeType === DateRangeType.Day && daysToSelectInDayView && daysToSelectInDayView > 1) {\n          // remove the static classes first to overwrite them\n          dayRef.classList.remove(classNames.bottomLeftCornerDate, classNames.bottomRightCornerDate, classNames.topLeftCornerDate, classNames.topRightCornerDate);\n          var classNamesToAdd = calculateRoundedStyles(classNames, false, false, index > 0, index < dayRefs.length - 1).trim();\n\n          if (classNamesToAdd) {\n            (_a = dayRef.classList).add.apply(_a, classNamesToAdd.split(' '));\n          }\n        }\n      }\n    });\n  };\n\n  var onMouseDownDay = function (ev) {\n    var dayInfos = getDayInfosInRangeOfDay(day);\n    var dayRefs = getRefsFromDayInfos(dayInfos);\n    dayRefs.forEach(function (dayRef) {\n      if (dayRef) {\n        dayRef.classList.add('ms-CalendarDay-pressedStyle');\n      }\n    });\n  };\n\n  var onMouseUpDay = function (ev) {\n    var dayInfos = getDayInfosInRangeOfDay(day);\n    var dayRefs = getRefsFromDayInfos(dayInfos);\n    dayRefs.forEach(function (dayRef) {\n      if (dayRef) {\n        dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n      }\n    });\n  };\n\n  var onMouseOutDay = function (ev) {\n    var dayInfos = getDayInfosInRangeOfDay(day);\n    var dayRefs = getRefsFromDayInfos(dayInfos);\n    dayRefs.forEach(function (dayRef, index) {\n      var _a;\n\n      if (dayRef) {\n        dayRef.classList.remove('ms-CalendarDay-hoverStyle');\n        dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n\n        if (!dayInfos[index].isSelected && dateRangeType === DateRangeType.Day && daysToSelectInDayView && daysToSelectInDayView > 1) {\n          var classNamesToAdd = calculateRoundedStyles(classNames, false, false, index > 0, index < dayRefs.length - 1).trim();\n\n          if (classNamesToAdd) {\n            (_a = dayRef.classList).remove.apply(_a, classNamesToAdd.split(' '));\n          }\n        }\n      }\n    });\n  };\n\n  var onDayKeyDown = function (ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onSelectDate === null || onSelectDate === void 0 ? void 0 : onSelectDate(day.originalDate);\n    } else {\n      navigateMonthEdge(ev, day.originalDate);\n    }\n  };\n\n  var ariaLabel = day.originalDate.getDate() + ', ' + strings.months[day.originalDate.getMonth()] + ', ' + day.originalDate.getFullYear();\n\n  if (day.isMarked) {\n    ariaLabel = ariaLabel + ', ' + strings.dayMarkedAriaLabel;\n  }\n\n  return React.createElement(\"td\", {\n    className: css(classNames.dayCell, weekCorners && cornerStyle, day.isSelected && classNames.daySelected, day.isSelected && 'ms-CalendarDay-daySelected', !day.isInBounds && classNames.dayOutsideBounds, !day.isInMonth && classNames.dayOutsideNavigatedMonth),\n    ref: function (element) {\n      customDayCellRef === null || customDayCellRef === void 0 ? void 0 : customDayCellRef(element, day.originalDate, classNames);\n      day.setRef(element);\n      isNavigatedDate && (navigatedDayRef.current = element);\n    },\n    \"aria-hidden\": ariaHidden,\n    \"aria-disabled\": !ariaHidden && !day.isInBounds,\n    onClick: day.isInBounds && !ariaHidden ? day.onSelected : undefined,\n    onMouseOver: !ariaHidden ? onMouseOverDay : undefined,\n    onMouseDown: !ariaHidden ? onMouseDownDay : undefined,\n    onMouseUp: !ariaHidden ? onMouseUpDay : undefined,\n    onMouseOut: !ariaHidden ? onMouseOutDay : undefined,\n    onKeyDown: !ariaHidden ? onDayKeyDown : undefined,\n    role: \"gridcell\",\n    tabIndex: isNavigatedDate ? 0 : undefined,\n    \"aria-current\": day.isSelected ? 'date' : undefined,\n    \"aria-selected\": day.isInBounds ? day.isSelected : undefined,\n    \"data-is-focusable\": !ariaHidden && (allFocusable || (day.isInBounds ? true : undefined))\n  }, React.createElement(\"button\", {\n    key: day.key + 'button',\n    \"aria-hidden\": ariaHidden,\n    className: css(classNames.dayButton, day.isToday && classNames.dayIsToday, day.isToday && 'ms-CalendarDay-dayIsToday'),\n    \"aria-label\": ariaLabel,\n    id: isNavigatedDate ? activeDescendantId : undefined,\n    disabled: !ariaHidden && !day.isInBounds,\n    type: \"button\",\n    tabIndex: -1,\n    \"data-is-focusable\": \"false\"\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, dateTimeFormatter.formatDay(day.originalDate)), day.isMarked && React.createElement(\"div\", {\n    \"aria-hidden\": \"true\",\n    className: classNames.dayMarker\n  })));\n};","map":{"version":3,"mappings":"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","names":["React","KeyCodes","css","getRTLSafeKeyCode","addDays","addWeeks","compareDates","findAvailableDate","DateRangeType","CalendarGridDayCell","props","dateTimeFormatter","allFocusable","strings","activeDescendantId","navigatedDayRef","calculateRoundedStyles","weeks","classNames","day","dayIndex","weekIndex","weekCorners","ariaHidden","customDayCellRef","dateRangeType","daysToSelectInDayView","onSelectDate","restrictedDates","minDate","maxDate","onNavigateDate","getDayInfosInRangeOfDay","getRefsFromDayInfos","cornerStyle","_a","isNavigatedDate","navigatedDate","originalDate","navigateMonthEdge","ev","date","targetDate","undefined","direction","which","up","down","left","right","findAvailableDateOptions","initialDate","nextDate","isInCurrentView","slice","length","some","week","dayToCompare","preventDefault","onMouseOverDay","dayInfos","dayRefs","forEach","dayRef","index","classList","add","isSelected","Day","remove","bottomLeftCornerDate","bottomRightCornerDate","topLeftCornerDate","topRightCornerDate","classNamesToAdd","trim","apply","split","onMouseDownDay","onMouseUpDay","onMouseOutDay","onDayKeyDown","enter","ariaLabel","getDate","months","getMonth","getFullYear","isMarked","dayMarkedAriaLabel","className","dayCell","daySelected","isInBounds","dayOutsideBounds","isInMonth","dayOutsideNavigatedMonth","ref","element","setRef","current","onClick","onSelected","onMouseOver","onMouseDown","onMouseUp","onMouseOut","onKeyDown","role","tabIndex","key","dayButton","isToday","dayIsToday","id","disabled","type","formatDay","dayMarker"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\CalendarDayGrid\\CalendarGridDayCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { KeyCodes, css, getRTLSafeKeyCode } from '@fluentui/utilities';\nimport { addDays, addWeeks, compareDates, findAvailableDate, DateRangeType } from '@fluentui/date-time-utilities';\nimport type { IAvailableDateOptions } from '@fluentui/date-time-utilities';\nimport type { IDayInfo } from './CalendarDayGrid.base';\nimport type { ICalendarGridRowProps } from './CalendarGridRow';\n\nexport interface ICalendarGridDayCellProps extends ICalendarGridRowProps {\n  day: IDayInfo;\n  dayIndex: number;\n}\n\nexport const CalendarGridDayCell: React.FunctionComponent<ICalendarGridDayCellProps> = props => {\n  const {\n    navigatedDate,\n    dateTimeFormatter,\n    allFocusable,\n    strings,\n    activeDescendantId,\n    navigatedDayRef,\n    calculateRoundedStyles,\n    weeks,\n    classNames,\n    day,\n    dayIndex,\n    weekIndex,\n    weekCorners,\n    ariaHidden,\n    customDayCellRef,\n    dateRangeType,\n    daysToSelectInDayView,\n    onSelectDate,\n    restrictedDates,\n    minDate,\n    maxDate,\n    onNavigateDate,\n    getDayInfosInRangeOfDay,\n    getRefsFromDayInfos,\n  } = props;\n  const cornerStyle = weekCorners?.[weekIndex + '_' + dayIndex] ?? '';\n  const isNavigatedDate = compareDates(navigatedDate, day.originalDate);\n\n  const navigateMonthEdge = (ev: React.KeyboardEvent<HTMLElement>, date: Date): void => {\n    let targetDate: Date | undefined = undefined;\n    let direction = 1; // by default search forward\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.up) {\n      targetDate = addWeeks(date, -1);\n      direction = -1;\n      // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === KeyCodes.down) {\n      targetDate = addWeeks(date, 1);\n      // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\n      targetDate = addDays(date, -1);\n      direction = -1;\n      // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\n      targetDate = addDays(date, 1);\n    }\n\n    if (!targetDate) {\n      // if we couldn't find a target date at all, do nothing\n      return;\n    }\n\n    const findAvailableDateOptions: IAvailableDateOptions = {\n      initialDate: date,\n      targetDate,\n      direction,\n      restrictedDates,\n      minDate,\n      maxDate,\n    };\n\n    // target date is restricted, search in whatever direction until finding the next possible date,\n    // stopping at boundaries\n    let nextDate = findAvailableDate(findAvailableDateOptions);\n\n    if (!nextDate) {\n      // if no dates available in initial direction, try going backwards\n      findAvailableDateOptions.direction = -direction;\n      nextDate = findAvailableDate(findAvailableDateOptions);\n    }\n\n    // if the nextDate is still inside the same focusZone area, let the focusZone handle setting the focus so we\n    // don't jump the view unnecessarily\n    const isInCurrentView =\n      weeks &&\n      nextDate &&\n      weeks.slice(1, weeks.length - 1).some((week: IDayInfo[]) => {\n        return week.some((dayToCompare: IDayInfo) => {\n          return compareDates(dayToCompare.originalDate, nextDate!);\n        });\n      });\n    if (isInCurrentView) {\n      return;\n    }\n\n    // else, fire navigation on the date to change the view to show it\n    if (nextDate) {\n      onNavigateDate(nextDate, true);\n      ev.preventDefault();\n    }\n  };\n\n  const onMouseOverDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement, index: number) => {\n      if (dayRef) {\n        dayRef.classList.add('ms-CalendarDay-hoverStyle');\n        if (\n          !dayInfos[index].isSelected &&\n          dateRangeType === DateRangeType.Day &&\n          daysToSelectInDayView &&\n          daysToSelectInDayView > 1\n        ) {\n          // remove the static classes first to overwrite them\n          dayRef.classList.remove(\n            classNames.bottomLeftCornerDate!,\n            classNames.bottomRightCornerDate!,\n            classNames.topLeftCornerDate!,\n            classNames.topRightCornerDate!,\n          );\n\n          const classNamesToAdd = calculateRoundedStyles(\n            classNames,\n            false,\n            false,\n            index > 0,\n            index < dayRefs.length - 1,\n          ).trim();\n          if (classNamesToAdd) {\n            dayRef.classList.add(...classNamesToAdd.split(' '));\n          }\n        }\n      }\n    });\n  };\n\n  const onMouseDownDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement) => {\n      if (dayRef) {\n        dayRef.classList.add('ms-CalendarDay-pressedStyle');\n      }\n    });\n  };\n\n  const onMouseUpDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement) => {\n      if (dayRef) {\n        dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n      }\n    });\n  };\n\n  const onMouseOutDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement, index: number) => {\n      if (dayRef) {\n        dayRef.classList.remove('ms-CalendarDay-hoverStyle');\n        dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n        if (\n          !dayInfos[index].isSelected &&\n          dateRangeType === DateRangeType.Day &&\n          daysToSelectInDayView &&\n          daysToSelectInDayView > 1\n        ) {\n          const classNamesToAdd = calculateRoundedStyles(\n            classNames,\n            false,\n            false,\n            index > 0,\n            index < dayRefs.length - 1,\n          ).trim();\n          if (classNamesToAdd) {\n            dayRef.classList.remove(...classNamesToAdd.split(' '));\n          }\n        }\n      }\n    });\n  };\n\n  const onDayKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onSelectDate?.(day.originalDate);\n    } else {\n      navigateMonthEdge(ev, day.originalDate);\n    }\n  };\n\n  let ariaLabel =\n    day.originalDate.getDate() +\n    ', ' +\n    strings.months[day.originalDate.getMonth()] +\n    ', ' +\n    day.originalDate.getFullYear();\n\n  if (day.isMarked) {\n    ariaLabel = ariaLabel + ', ' + strings.dayMarkedAriaLabel;\n  }\n\n  return (\n    <td\n      className={css(\n        classNames.dayCell,\n        weekCorners && cornerStyle,\n        day.isSelected && classNames.daySelected,\n        day.isSelected && 'ms-CalendarDay-daySelected',\n        !day.isInBounds && classNames.dayOutsideBounds,\n        !day.isInMonth && classNames.dayOutsideNavigatedMonth,\n      )}\n      ref={(element: HTMLTableCellElement) => {\n        customDayCellRef?.(element, day.originalDate, classNames);\n        day.setRef(element);\n        isNavigatedDate && (navigatedDayRef.current = element);\n      }}\n      aria-hidden={ariaHidden}\n      aria-disabled={!ariaHidden && !day.isInBounds}\n      onClick={day.isInBounds && !ariaHidden ? day.onSelected : undefined}\n      onMouseOver={!ariaHidden ? onMouseOverDay : undefined}\n      onMouseDown={!ariaHidden ? onMouseDownDay : undefined}\n      onMouseUp={!ariaHidden ? onMouseUpDay : undefined}\n      onMouseOut={!ariaHidden ? onMouseOutDay : undefined}\n      onKeyDown={!ariaHidden ? onDayKeyDown : undefined}\n      role=\"gridcell\"\n      tabIndex={isNavigatedDate ? 0 : undefined}\n      aria-current={day.isSelected ? 'date' : undefined}\n      aria-selected={day.isInBounds ? day.isSelected : undefined}\n      data-is-focusable={!ariaHidden && (allFocusable || (day.isInBounds ? true : undefined))}\n    >\n      <button\n        key={day.key + 'button'}\n        aria-hidden={ariaHidden}\n        className={css(\n          classNames.dayButton,\n          day.isToday && classNames.dayIsToday,\n          day.isToday && 'ms-CalendarDay-dayIsToday',\n        )}\n        aria-label={ariaLabel}\n        id={isNavigatedDate ? activeDescendantId : undefined}\n        disabled={!ariaHidden && !day.isInBounds}\n        type=\"button\"\n        tabIndex={-1}\n        data-is-focusable=\"false\"\n      >\n        <span aria-hidden=\"true\">{dateTimeFormatter.formatDay(day.originalDate)}</span>\n        {day.isMarked && <div aria-hidden=\"true\" className={classNames.dayMarker} />}\n      </button>\n    </td>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}