{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { concatStyleSets, getFocusStyle, HighContrastSelector, getScreenSelector, ScreenWidthMaxMedium, IconFontSizes, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nexport var CONTEXTUAL_MENU_ITEM_HEIGHT = 36;\nvar MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\nexport var getMenuItemStyles = memoizeFunction(function (theme) {\n  var _a, _b, _c, _d, _e;\n\n  var semanticColors = theme.semanticColors,\n      fonts = theme.fonts,\n      palette = theme.palette;\n  var ContextualMenuItemBackgroundHoverColor = semanticColors.menuItemBackgroundHovered;\n  var ContextualMenuItemTextHoverColor = semanticColors.menuItemTextHovered;\n  var ContextualMenuItemBackgroundSelectedColor = semanticColors.menuItemBackgroundPressed;\n  var ContextualMenuItemDividerColor = semanticColors.bodyDivider;\n  var menuItemStyles = {\n    item: [fonts.medium, {\n      color: semanticColors.bodyText,\n      position: 'relative',\n      boxSizing: 'border-box'\n    }],\n    divider: {\n      display: 'block',\n      height: '1px',\n      backgroundColor: ContextualMenuItemDividerColor,\n      position: 'relative'\n    },\n    root: [getFocusStyle(theme), fonts.medium, {\n      color: semanticColors.bodyText,\n      backgroundColor: 'transparent',\n      border: 'none',\n      width: '100%',\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      display: 'block',\n      cursor: 'pointer',\n      padding: '0px 8px 0 4px',\n      textAlign: 'left'\n    }],\n    rootDisabled: {\n      color: semanticColors.disabledBodyText,\n      cursor: 'default',\n      pointerEvents: 'none',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        // ensure disabled text looks different than enabled\n        color: 'GrayText',\n        opacity: 1\n      }, _a)\n    },\n    rootHovered: {\n      backgroundColor: ContextualMenuItemBackgroundHoverColor,\n      color: ContextualMenuItemTextHoverColor,\n      selectors: {\n        '.ms-ContextualMenu-icon': {\n          color: palette.themeDarkAlt\n        },\n        '.ms-ContextualMenu-submenuIcon': {\n          color: palette.neutralPrimary\n        }\n      }\n    },\n    rootFocused: {\n      backgroundColor: palette.white\n    },\n    rootChecked: {\n      selectors: {\n        '.ms-ContextualMenu-checkmarkIcon': {\n          color: palette.neutralPrimary\n        }\n      }\n    },\n    rootPressed: {\n      backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n      selectors: {\n        '.ms-ContextualMenu-icon': {\n          color: palette.themeDark\n        },\n        '.ms-ContextualMenu-submenuIcon': {\n          color: palette.neutralPrimary\n        }\n      }\n    },\n    rootExpanded: {\n      backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n      color: semanticColors.bodyTextChecked,\n      selectors: (_b = {\n        '.ms-ContextualMenu-submenuIcon': (_c = {}, _c[HighContrastSelector] = {\n          // icons inside of anchor tags are not properly inheriting color in high contrast\n          color: 'inherit'\n        }, _c)\n      }, _b[HighContrastSelector] = __assign({}, getHighContrastNoAdjustStyle()), _b)\n    },\n    linkContent: {\n      whiteSpace: 'nowrap',\n      height: 'inherit',\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: '100%'\n    },\n    anchorLink: {\n      padding: '0px 8px 0 4px',\n      textRendering: 'auto',\n      color: 'inherit',\n      letterSpacing: 'normal',\n      wordSpacing: 'normal',\n      textTransform: 'none',\n      textIndent: '0px',\n      textShadow: 'none',\n      textDecoration: 'none',\n      boxSizing: 'border-box'\n    },\n    label: {\n      margin: '0 4px',\n      verticalAlign: 'middle',\n      display: 'inline-block',\n      flexGrow: '1',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n    secondaryText: {\n      color: theme.palette.neutralSecondary,\n      paddingLeft: '20px',\n      textAlign: 'right'\n    },\n    icon: {\n      display: 'inline-block',\n      minHeight: '1px',\n      maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      fontSize: IconFontSizes.medium,\n      width: IconFontSizes.medium,\n      margin: '0 4px',\n      verticalAlign: 'middle',\n      flexShrink: '0',\n      selectors: (_d = {}, _d[MediumScreenSelector] = {\n        fontSize: IconFontSizes.large,\n        width: IconFontSizes.large\n      }, _d)\n    },\n    iconColor: {\n      color: semanticColors.menuIcon\n    },\n    iconDisabled: {\n      color: semanticColors.disabledBodyText\n    },\n    checkmarkIcon: {\n      color: semanticColors.bodySubtext\n    },\n    subMenuIcon: {\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      color: palette.neutralSecondary,\n      textAlign: 'center',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      flexShrink: '0',\n      fontSize: IconFontSizes.small,\n      selectors: (_e = {\n        ':hover': {\n          color: palette.neutralPrimary\n        },\n        ':active': {\n          color: palette.neutralPrimary\n        }\n      }, _e[MediumScreenSelector] = {\n        fontSize: IconFontSizes.medium // 16px\n\n      }, _e)\n    },\n    splitButtonFlexContainer: [getFocusStyle(theme), {\n      display: 'flex',\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      flexWrap: 'nowrap',\n      justifyContent: 'center',\n      alignItems: 'flex-start'\n    }]\n  };\n  return concatStyleSets(menuItemStyles);\n});","map":{"version":3,"mappings":"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","names":["concatStyleSets","getFocusStyle","HighContrastSelector","getScreenSelector","ScreenWidthMaxMedium","IconFontSizes","getHighContrastNoAdjustStyle","memoizeFunction","CONTEXTUAL_MENU_ITEM_HEIGHT","MediumScreenSelector","getMenuItemStyles","theme","fonts","palette","ContextualMenuItemBackgroundHoverColor","semanticColors","menuItemBackgroundHovered","ContextualMenuItemTextHoverColor","menuItemTextHovered","ContextualMenuItemBackgroundSelectedColor","menuItemBackgroundPressed","ContextualMenuItemDividerColor","bodyDivider","menuItemStyles","item","medium","color","bodyText","position","boxSizing","divider","display","height","backgroundColor","root","border","width","lineHeight","cursor","padding","textAlign","rootDisabled","disabledBodyText","pointerEvents","selectors","_a","opacity","rootHovered","themeDarkAlt","neutralPrimary","rootFocused","white","rootChecked","rootPressed","themeDark","rootExpanded","bodyTextChecked","_c","_b","__assign","linkContent","whiteSpace","alignItems","maxWidth","anchorLink","textRendering","letterSpacing","wordSpacing","textTransform","textIndent","textShadow","textDecoration","label","margin","verticalAlign","flexGrow","textOverflow","secondaryText","neutralSecondary","paddingLeft","icon","minHeight","maxHeight","fontSize","flexShrink","_d","large","iconColor","menuIcon","iconDisabled","checkmarkIcon","bodySubtext","subMenuIcon","small","_e","splitButtonFlexContainer","flexWrap","justifyContent"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\ContextualMenu\\ContextualMenu.cnstyles.ts"],"sourcesContent":["import {\n  concatStyleSets,\n  getFocusStyle,\n  HighContrastSelector,\n  getScreenSelector,\n  ScreenWidthMaxMedium,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nimport type { ITheme } from '../../Styling';\nimport type { IMenuItemStyles } from './ContextualMenu.types';\n\nexport const CONTEXTUAL_MENU_ITEM_HEIGHT = 36;\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nexport const getMenuItemStyles = memoizeFunction(\n  (theme: ITheme): IMenuItemStyles => {\n    const { semanticColors, fonts, palette } = theme;\n    const ContextualMenuItemBackgroundHoverColor = semanticColors.menuItemBackgroundHovered;\n    const ContextualMenuItemTextHoverColor = semanticColors.menuItemTextHovered;\n    const ContextualMenuItemBackgroundSelectedColor = semanticColors.menuItemBackgroundPressed;\n    const ContextualMenuItemDividerColor = semanticColors.bodyDivider;\n\n    const menuItemStyles: IMenuItemStyles = {\n      item: [\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          position: 'relative',\n          boxSizing: 'border-box',\n        },\n      ],\n      divider: {\n        display: 'block',\n        height: '1px',\n        backgroundColor: ContextualMenuItemDividerColor,\n        position: 'relative',\n      },\n      root: [\n        getFocusStyle(theme),\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          backgroundColor: 'transparent',\n          border: 'none',\n          width: '100%',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          display: 'block',\n          cursor: 'pointer',\n          padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n          textAlign: 'left',\n        },\n      ],\n      rootDisabled: {\n        color: semanticColors.disabledBodyText,\n        cursor: 'default',\n        pointerEvents: 'none',\n        selectors: {\n          [HighContrastSelector]: {\n            // ensure disabled text looks different than enabled\n            color: 'GrayText',\n            opacity: 1,\n          },\n        },\n      },\n      rootHovered: {\n        backgroundColor: ContextualMenuItemBackgroundHoverColor,\n        color: ContextualMenuItemTextHoverColor,\n        selectors: {\n          '.ms-ContextualMenu-icon': {\n            color: palette.themeDarkAlt,\n          },\n          '.ms-ContextualMenu-submenuIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n      },\n      rootFocused: {\n        backgroundColor: palette.white,\n      },\n      rootChecked: {\n        selectors: {\n          '.ms-ContextualMenu-checkmarkIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n      },\n      rootPressed: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        selectors: {\n          '.ms-ContextualMenu-icon': {\n            color: palette.themeDark,\n          },\n          '.ms-ContextualMenu-submenuIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n      },\n      rootExpanded: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        color: semanticColors.bodyTextChecked,\n        selectors: {\n          '.ms-ContextualMenu-submenuIcon': {\n            [HighContrastSelector]: {\n              // icons inside of anchor tags are not properly inheriting color in high contrast\n              color: 'inherit',\n            },\n          },\n          [HighContrastSelector]: {\n            // allow change in background/text to be visible\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n      linkContent: {\n        whiteSpace: 'nowrap',\n        height: 'inherit',\n        display: 'flex',\n        alignItems: 'center',\n        maxWidth: '100%',\n      },\n      anchorLink: {\n        padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n        textRendering: 'auto',\n        color: 'inherit',\n        letterSpacing: 'normal',\n        wordSpacing: 'normal',\n        textTransform: 'none',\n        textIndent: '0px',\n        textShadow: 'none',\n        textDecoration: 'none',\n        boxSizing: 'border-box',\n      },\n      label: {\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        display: 'inline-block',\n        flexGrow: '1',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n      },\n      secondaryText: {\n        color: theme.palette.neutralSecondary,\n        paddingLeft: '20px',\n        textAlign: 'right',\n      },\n      icon: {\n        display: 'inline-block',\n        minHeight: '1px',\n        maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        fontSize: IconFontSizes.medium,\n        width: IconFontSizes.medium,\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        flexShrink: '0',\n        selectors: {\n          [MediumScreenSelector]: {\n            fontSize: IconFontSizes.large,\n            width: IconFontSizes.large,\n          },\n        },\n      },\n      iconColor: {\n        color: semanticColors.menuIcon,\n      },\n      iconDisabled: {\n        color: semanticColors.disabledBodyText,\n      },\n      checkmarkIcon: {\n        color: semanticColors.bodySubtext,\n      },\n      subMenuIcon: {\n        height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        color: palette.neutralSecondary,\n        textAlign: 'center',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        flexShrink: '0',\n        fontSize: IconFontSizes.small, // 12px\n        selectors: {\n          ':hover': {\n            color: palette.neutralPrimary,\n          },\n          ':active': {\n            color: palette.neutralPrimary,\n          },\n          [MediumScreenSelector]: {\n            fontSize: IconFontSizes.medium, // 16px\n          },\n        },\n      },\n      splitButtonFlexContainer: [\n        getFocusStyle(theme),\n        {\n          display: 'flex',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          flexWrap: 'nowrap',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        },\n      ],\n    };\n\n    return concatStyleSets(menuItemStyles);\n  },\n);\n"]},"metadata":{},"sourceType":"module"}