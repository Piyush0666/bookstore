{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css, styled, classNamesFunction, composeRenderFunction, getNativeElementProps } from '../../Utilities';\nimport { Check } from '../../Check';\nimport { getDetailsRowCheckStyles } from './DetailsRowCheck.styles';\nimport { SelectionMode } from '../../Selection';\nvar getClassNames = classNamesFunction();\n\nvar DetailsRowCheckBase = function (props) {\n  var _a = props.isVisible,\n      isVisible = _a === void 0 ? false : _a,\n      _b = props.canSelect,\n      canSelect = _b === void 0 ? false : _b,\n      _c = props.anySelected,\n      anySelected = _c === void 0 ? false : _c,\n      _d = props.selected,\n      selected = _d === void 0 ? false : _d,\n      selectionMode = props.selectionMode,\n      _e = props.isHeader,\n      isHeader = _e === void 0 ? false : _e,\n      className = props.className,\n      checkClassName = props.checkClassName,\n      styles = props.styles,\n      theme = props.theme,\n      compact = props.compact,\n      onRenderDetailsCheckbox = props.onRenderDetailsCheckbox,\n      _f = props.useFastIcons,\n      useFastIcons = _f === void 0 ? true : _f,\n      // must be removed from buttonProps\n  buttonProps = __rest(props, [\"isVisible\", \"canSelect\", \"anySelected\", \"selected\", \"selectionMode\", \"isHeader\", \"className\", \"checkClassName\", \"styles\", \"theme\", \"compact\", \"onRenderDetailsCheckbox\", \"useFastIcons\"]);\n\n  var defaultCheckboxRender = useFastIcons ? _fastDefaultCheckboxRender : _defaultCheckboxRender;\n  var onRenderCheckbox = onRenderDetailsCheckbox ? composeRenderFunction(onRenderDetailsCheckbox, defaultCheckboxRender) : defaultCheckboxRender;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    canSelect: canSelect,\n    selected: selected,\n    anySelected: anySelected,\n    className: className,\n    isHeader: isHeader,\n    isVisible: isVisible,\n    compact: compact\n  });\n  var detailsCheckboxProps = {\n    checked: selected,\n    theme: theme\n  };\n  var divProps = getNativeElementProps('div', buttonProps, ['aria-label', 'aria-labelledby', 'aria-describedby']);\n  var checkRole = selectionMode === SelectionMode.single ? 'radio' : 'checkbox';\n  return canSelect ? React.createElement(\"div\", __assign({}, buttonProps, {\n    role: checkRole,\n    // eslint-disable-next-line deprecation/deprecation\n    className: css(classNames.root, classNames.check),\n    \"aria-checked\": selected,\n    \"data-selection-toggle\": true,\n    \"data-automationid\": \"DetailsRowCheck\",\n    tabIndex: -1\n  }), onRenderCheckbox(detailsCheckboxProps)) : // eslint-disable-next-line deprecation/deprecation\n  React.createElement(\"div\", __assign({}, divProps, {\n    className: css(classNames.root, classNames.check)\n  }));\n};\n\nvar FastCheck = React.memo(function (props) {\n  return React.createElement(Check, {\n    theme: props.theme,\n    checked: props.checked,\n    className: props.className,\n    useFastIcons: true\n  });\n});\n\nfunction _defaultCheckboxRender(checkboxProps) {\n  return React.createElement(Check, {\n    checked: checkboxProps.checked\n  });\n}\n\nfunction _fastDefaultCheckboxRender(checkboxProps) {\n  return React.createElement(FastCheck, {\n    theme: checkboxProps.theme,\n    checked: checkboxProps.checked\n  });\n}\n\nexport var DetailsRowCheck = styled(DetailsRowCheckBase, getDetailsRowCheckStyles, undefined, {\n  scope: 'DetailsRowCheck'\n}, true);","map":{"version":3,"mappings":"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","names":["React","css","styled","classNamesFunction","composeRenderFunction","getNativeElementProps","Check","getDetailsRowCheckStyles","SelectionMode","getClassNames","DetailsRowCheckBase","props","_a","_b","canSelect","_c","anySelected","_d","selected","selectionMode","_e","isHeader","className","checkClassName","styles","theme","compact","onRenderDetailsCheckbox","_f","useFastIcons","buttonProps","defaultCheckboxRender","_fastDefaultCheckboxRender","_defaultCheckboxRender","onRenderCheckbox","classNames","isVisible","detailsCheckboxProps","checked","divProps","checkRole","single","role","root","check","tabIndex","FastCheck","memo","checkboxProps","DetailsRowCheck","undefined","scope"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\DetailsList\\DetailsRowCheck.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css, styled, classNamesFunction, composeRenderFunction, getNativeElementProps } from '../../Utilities';\nimport { Check } from '../../Check';\nimport { getDetailsRowCheckStyles } from './DetailsRowCheck.styles';\nimport { SelectionMode } from '../../Selection';\nimport type {\n  IDetailsRowCheckProps,\n  IDetailsCheckboxProps,\n  IDetailsRowCheckStyleProps,\n  IDetailsRowCheckStyles,\n} from './DetailsRowCheck.types';\nimport type { ITheme } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>();\n\nconst DetailsRowCheckBase: React.FunctionComponent<IDetailsRowCheckProps> = props => {\n  const {\n    isVisible = false,\n    canSelect = false,\n    anySelected = false,\n    selected = false,\n    selectionMode,\n    isHeader = false,\n    className,\n    checkClassName,\n    styles,\n    theme,\n    compact,\n    onRenderDetailsCheckbox,\n    useFastIcons = true, // must be removed from buttonProps\n    ...buttonProps\n  } = props;\n  const defaultCheckboxRender = useFastIcons ? _fastDefaultCheckboxRender : _defaultCheckboxRender;\n\n  const onRenderCheckbox = onRenderDetailsCheckbox\n    ? composeRenderFunction(onRenderDetailsCheckbox, defaultCheckboxRender)\n    : defaultCheckboxRender;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    canSelect,\n    selected,\n    anySelected,\n    className,\n    isHeader,\n    isVisible,\n    compact,\n  });\n\n  const detailsCheckboxProps: IDetailsCheckboxProps = {\n    checked: selected,\n    theme,\n  };\n\n  const divProps = getNativeElementProps('div', buttonProps, ['aria-label', 'aria-labelledby', 'aria-describedby']);\n\n  const checkRole = selectionMode === SelectionMode.single ? 'radio' : 'checkbox';\n\n  return canSelect ? (\n    <div\n      {...buttonProps}\n      role={checkRole}\n      // eslint-disable-next-line deprecation/deprecation\n      className={css(classNames.root, classNames.check)}\n      aria-checked={selected}\n      data-selection-toggle={true}\n      data-automationid=\"DetailsRowCheck\"\n      tabIndex={-1}\n    >\n      {onRenderCheckbox(detailsCheckboxProps)}\n    </div>\n  ) : (\n    // eslint-disable-next-line deprecation/deprecation\n    <div {...divProps} className={css(classNames.root, classNames.check)} />\n  );\n};\n\nconst FastCheck = React.memo((props: { theme?: ITheme; checked?: boolean; className?: string }) => {\n  return <Check theme={props.theme} checked={props.checked} className={props.className} useFastIcons />;\n});\n\nfunction _defaultCheckboxRender(checkboxProps: IDetailsCheckboxProps) {\n  return <Check checked={checkboxProps.checked} />;\n}\n\nfunction _fastDefaultCheckboxRender(checkboxProps: IDetailsCheckboxProps) {\n  return <FastCheck theme={checkboxProps.theme} checked={checkboxProps.checked} />;\n}\n\nexport const DetailsRowCheck = styled<IDetailsRowCheckProps, IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>(\n  DetailsRowCheckBase,\n  getDetailsRowCheckStyles,\n  undefined,\n  { scope: 'DetailsRowCheck' },\n  true,\n);\n"]},"metadata":{},"sourceType":"module"}