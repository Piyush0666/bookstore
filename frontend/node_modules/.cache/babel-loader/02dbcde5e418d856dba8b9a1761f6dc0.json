{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n/** @jsxRuntime classic */\n\n/** @jsx withSlots */\n\nimport { withSlots, getSlots } from '@fluentui/foundation-legacy';\nimport { getNativeProps, htmlElementProperties } from '../../Utilities';\nexport var TextView = function (props) {\n  // eslint-disable-next-line eqeqeq\n  if (props.children == null) {\n    return null;\n  }\n\n  var block = props.block,\n      className = props.className,\n      _a = props.as,\n      RootType = _a === void 0 ? 'span' : _a,\n      variant = props.variant,\n      nowrap = props.nowrap,\n      rest = __rest(props, [\"block\", \"className\", \"as\", \"variant\", \"nowrap\"]);\n\n  var Slots = getSlots(props, {\n    root: RootType\n  });\n  return withSlots(Slots.root, __assign({}, getNativeProps(rest, htmlElementProperties)));\n};","map":{"version":3,"mappings":";AAAA;;AACA;;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,6BAApC;AACA,SAASC,cAAT,EAAyBC,qBAAzB,QAAsD,iBAAtD;AAGA,OAAO,IAAMC,QAAQ,GAA2B,iBAAK;EACnD;EACA,IAAIC,KAAK,CAACC,QAAN,IAAkB,IAAtB,EAA4B;IAC1B,OAAO,IAAP;EACD;;EAEO,SAAK,GAAiED,KAAK,MAA3E;EAAA,IAAOE,SAAS,GAAsDF,KAAK,UAA3E;EAAA,IAAkBG,KAAoDH,KAAK,GAA3E;EAAA,IAAsBI,QAAQ,mBAAG,MAAH,GAASD,EAAvC;EAAA,IAAyCE,OAAO,GAAsBL,KAAK,QAA3E;EAAA,IAAkDM,MAAM,GAAcN,KAAK,OAA3E;EAAA,IAA6DO,IAAI,UAAKP,KAAL,EAAnE,iDAAmE,CAAjE;;EAER,IAAMQ,KAAK,GAAGZ,QAAQ,CAAyBI,KAAzB,EAAgC;IACpDS,IAAI,EAAEL;EAD8C,CAAhC,CAAtB;EAIA,OAAOT,UAACa,KAAK,CAACC,IAAP,EAAWC,aAAKb,cAAc,CAACU,IAAD,EAAOT,qBAAP,CAAnB,CAAX,CAAP;AACD,CAbM","names":["withSlots","getSlots","getNativeProps","htmlElementProperties","TextView","props","children","className","_a","RootType","variant","nowrap","rest","Slots","root","__assign"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\Text\\Text.view.tsx"],"sourcesContent":["/** @jsxRuntime classic */\n/** @jsx withSlots */\nimport { withSlots, getSlots } from '@fluentui/foundation-legacy';\nimport { getNativeProps, htmlElementProperties } from '../../Utilities';\nimport type { ITextComponent, ITextProps, ITextSlots } from './Text.types';\n\nexport const TextView: ITextComponent['view'] = props => {\n  // eslint-disable-next-line eqeqeq\n  if (props.children == null) {\n    return null;\n  }\n\n  const { block, className, as: RootType = 'span', variant, nowrap, ...rest } = props;\n\n  const Slots = getSlots<ITextProps, ITextSlots>(props, {\n    root: RootType,\n  });\n\n  return <Slots.root {...getNativeProps(rest, htmlElementProperties)} />;\n};\n"]},"metadata":{},"sourceType":"module"}