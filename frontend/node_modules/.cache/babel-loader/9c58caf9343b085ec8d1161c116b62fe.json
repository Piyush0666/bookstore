{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { getRTL, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\n\nvar defaultIconRenderer = function (props) {\n  var item = props.item,\n      classNames = props.classNames;\n  var iconProps = item.iconProps;\n  return React.createElement(Icon, __assign({}, iconProps, {\n    className: classNames.icon\n  }));\n};\n\nvar renderItemIcon = function (props) {\n  var item = props.item,\n      hasIcons = props.hasIcons;\n\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props, defaultIconRenderer);\n  }\n\n  return defaultIconRenderer(props);\n};\n\nvar renderCheckMarkIcon = function (_a) {\n  var onCheckmarkClick = _a.onCheckmarkClick,\n      item = _a.item,\n      classNames = _a.classNames;\n  var isItemChecked = getIsChecked(item);\n\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    var onClick = function (e) {\n      return onCheckmarkClick(item, e);\n    };\n\n    return React.createElement(Icon, {\n      iconName: item.canCheck !== false && isItemChecked ? 'CheckMark' : '',\n      className: classNames.checkmarkIcon,\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick: onClick\n    });\n  }\n\n  return null;\n};\n\nvar renderItemName = function (_a) {\n  var item = _a.item,\n      classNames = _a.classNames;\n  /* eslint-disable deprecation/deprecation */\n\n  if (item.text || item.name) {\n    return React.createElement(\"span\", {\n      className: classNames.label\n    }, item.text || item.name);\n  }\n  /* eslint-enable deprecation/deprecation */\n\n\n  return null;\n};\n\nvar renderSecondaryText = function (_a) {\n  var item = _a.item,\n      classNames = _a.classNames;\n\n  if (item.secondaryText) {\n    return React.createElement(\"span\", {\n      className: classNames.secondaryText\n    }, item.secondaryText);\n  }\n\n  return null;\n};\n\nvar renderSubMenuIcon = function (_a) {\n  var item = _a.item,\n      classNames = _a.classNames,\n      theme = _a.theme;\n\n  if (hasSubmenu(item)) {\n    return React.createElement(Icon, __assign({\n      iconName: getRTL(theme) ? 'ChevronLeft' : 'ChevronRight'\n    }, item.submenuIconProps, {\n      className: classNames.subMenuIcon\n    }));\n  }\n\n  return null;\n};\n\nvar ContextualMenuItemBase =\n/** @class */\nfunction (_super) {\n  __extends(ContextualMenuItemBase, _super);\n\n  function ContextualMenuItemBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.openSubMenu = function () {\n      var _a = _this.props,\n          item = _a.item,\n          openSubMenu = _a.openSubMenu,\n          getSubmenuTarget = _a.getSubmenuTarget;\n\n      if (getSubmenuTarget) {\n        var submenuTarget = getSubmenuTarget();\n\n        if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n          openSubMenu(item, submenuTarget);\n        }\n      }\n    };\n\n    _this.dismissSubMenu = function () {\n      var _a = _this.props,\n          item = _a.item,\n          dismissSubMenu = _a.dismissSubMenu;\n\n      if (hasSubmenu(item) && dismissSubMenu) {\n        dismissSubMenu();\n      }\n    };\n\n    _this.dismissMenu = function (dismissAll) {\n      var dismissMenu = _this.props.dismissMenu;\n\n      if (dismissMenu) {\n        dismissMenu(undefined\n        /* ev */\n        , dismissAll);\n      }\n    };\n\n    initializeComponentRef(_this);\n    return _this;\n  }\n\n  ContextualMenuItemBase.prototype.render = function () {\n    var _a = this.props,\n        item = _a.item,\n        classNames = _a.classNames;\n    var renderContent = item.onRenderContent || this._renderLayout;\n    return React.createElement(\"div\", {\n      className: item.split ? classNames.linkContentMenu : classNames.linkContent\n    }, renderContent(this.props, {\n      renderCheckMarkIcon: renderCheckMarkIcon,\n      renderItemIcon: renderItemIcon,\n      renderItemName: renderItemName,\n      renderSecondaryText: renderSecondaryText,\n      renderSubMenuIcon: renderSubMenuIcon\n    }));\n  };\n\n  ContextualMenuItemBase.prototype._renderLayout = function (props, defaultRenders) {\n    return React.createElement(React.Fragment, null, defaultRenders.renderCheckMarkIcon(props), defaultRenders.renderItemIcon(props), defaultRenders.renderItemName(props), defaultRenders.renderSecondaryText(props), defaultRenders.renderSubMenuIcon(props));\n  };\n\n  return ContextualMenuItemBase;\n}(React.Component);\n\nexport { ContextualMenuItemBase };","map":{"version":3,"mappings":"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","names":["React","hasSubmenu","getIsChecked","getRTL","initializeComponentRef","Icon","defaultIconRenderer","props","classNames","item","__assign","iconProps","className","icon","renderItemIcon","hasIcons","onRenderIcon","renderCheckMarkIcon","_a","onCheckmarkClick","isItemChecked","onClick","e","iconName","canCheck","checkmarkIcon","renderItemName","text","name","label","renderSecondaryText","secondaryText","renderSubMenuIcon","theme","submenuIconProps","subMenuIcon","__extends","_super","_this","openSubMenu","getSubmenuTarget","submenuTarget","dismissSubMenu","dismissAll","dismissMenu","undefined","ContextualMenuItemBase","renderContent","onRenderContent","_renderLayout","split","linkContentMenu","linkContent","defaultRenders","Component"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\ContextualMenu\\ContextualMenuItem.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { getRTL, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport type { IContextualMenuItemProps, IContextualMenuItemRenderFunctions } from './ContextualMenuItem.types';\n\nconst defaultIconRenderer = (props: IContextualMenuItemProps) => {\n  const { item, classNames } = props;\n  const { iconProps } = item;\n  return <Icon {...iconProps} className={classNames.icon} />;\n};\n\nconst renderItemIcon = (props: IContextualMenuItemProps) => {\n  const { item, hasIcons } = props;\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props, defaultIconRenderer);\n  }\n\n  return defaultIconRenderer(props);\n};\n\nconst renderCheckMarkIcon = ({ onCheckmarkClick, item, classNames }: IContextualMenuItemProps) => {\n  const isItemChecked = getIsChecked(item);\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    const onClick = (e: React.MouseEvent<HTMLElement>) => onCheckmarkClick(item, e);\n\n    return (\n      <Icon\n        iconName={item.canCheck !== false && isItemChecked ? 'CheckMark' : ''}\n        className={classNames.checkmarkIcon}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={onClick}\n      />\n    );\n  }\n  return null;\n};\n\nconst renderItemName = ({ item, classNames }: IContextualMenuItemProps) => {\n  /* eslint-disable deprecation/deprecation */\n  if (item.text || item.name) {\n    return <span className={classNames.label}>{item.text || item.name}</span>;\n  }\n  /* eslint-enable deprecation/deprecation */\n  return null;\n};\n\nconst renderSecondaryText = ({ item, classNames }: IContextualMenuItemProps) => {\n  if (item.secondaryText) {\n    return <span className={classNames.secondaryText}>{item.secondaryText}</span>;\n  }\n  return null;\n};\n\nconst renderSubMenuIcon = ({ item, classNames, theme }: IContextualMenuItemProps) => {\n  if (hasSubmenu(item)) {\n    return (\n      <Icon\n        iconName={getRTL(theme) ? 'ChevronLeft' : 'ChevronRight'}\n        {...item.submenuIconProps}\n        className={classNames.subMenuIcon}\n      />\n    );\n  }\n  return null;\n};\n\nexport class ContextualMenuItemBase extends React.Component<IContextualMenuItemProps, {}> {\n  constructor(props: IContextualMenuItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render() {\n    const { item, classNames } = this.props;\n    const renderContent = item.onRenderContent || this._renderLayout;\n\n    return (\n      <div className={item.split ? classNames.linkContentMenu : classNames.linkContent}>\n        {renderContent(this.props, {\n          renderCheckMarkIcon,\n          renderItemIcon,\n          renderItemName,\n          renderSecondaryText,\n          renderSubMenuIcon,\n        })}\n      </div>\n    );\n  }\n\n  public openSubMenu = (): void => {\n    const { item, openSubMenu, getSubmenuTarget } = this.props;\n    if (getSubmenuTarget) {\n      const submenuTarget = getSubmenuTarget();\n      if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n        openSubMenu(item, submenuTarget);\n      }\n    }\n  };\n\n  public dismissSubMenu = (): void => {\n    const { item, dismissSubMenu } = this.props;\n    if (hasSubmenu(item) && dismissSubMenu) {\n      dismissSubMenu();\n    }\n  };\n\n  public dismissMenu = (dismissAll?: boolean): void => {\n    const { dismissMenu } = this.props;\n    if (dismissMenu) {\n      dismissMenu(undefined /* ev */, dismissAll);\n    }\n  };\n\n  private _renderLayout(props: IContextualMenuItemProps, defaultRenders: IContextualMenuItemRenderFunctions) {\n    return (\n      <>\n        {defaultRenders.renderCheckMarkIcon(props)}\n        {defaultRenders.renderItemIcon(props)}\n        {defaultRenders.renderItemName(props)}\n        {defaultRenders.renderSecondaryText(props)}\n        {defaultRenders.renderSubMenuIcon(props)}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}