{"ast":null,"code":"import { compareDatePart } from '../dateMath/dateMath';\n/**\n * Checks if `date` happens earlier than min date\n * @param date - date to check\n * @param options - object with min date to check against\n */\n\nexport var isBeforeMinDate = function (date, options) {\n  var minDate = options.minDate;\n  return minDate ? compareDatePart(minDate, date) >= 1 : false;\n};","map":{"version":3,"mappings":"AACA,SAASA,eAAT,QAAgC,sBAAhC;AAEA;;;;;;AAKA,OAAO,IAAMC,eAAe,GAAG,UAACC,IAAD,EAAaC,OAAb,EAA6C;EAClE,WAAO,GAAKA,OAAO,QAAnB;EACR,OAAOC,OAAO,GAAGJ,eAAe,CAACI,OAAD,EAAUF,IAAV,CAAf,IAAkC,CAArC,GAAyC,KAAvD;AACD,CAHM","names":["compareDatePart","isBeforeMinDate","date","options","minDate"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\date-time-utilities\\lib\\src\\dateGrid\\isBeforeMinDate.ts"],"sourcesContent":["import { IRestrictedDatesOptions } from './dateGrid.types';\nimport { compareDatePart } from '../dateMath/dateMath';\n\n/**\n * Checks if `date` happens earlier than min date\n * @param date - date to check\n * @param options - object with min date to check against\n */\nexport const isBeforeMinDate = (date: Date, options: IRestrictedDatesOptions): boolean => {\n  const { minDate } = options;\n  return minDate ? compareDatePart(minDate, date) >= 1 : false;\n};\n"]},"metadata":{},"sourceType":"module"}