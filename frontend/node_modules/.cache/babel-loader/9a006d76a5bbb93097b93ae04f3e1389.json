{"ast":null,"code":"import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { Icon } from '../../../Icon';\nimport { PersonaPresence as PersonaPresenceEnum } from '../Persona.types';\nimport { sizeBoolean } from '../PersonaConsts';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nvar coinSizeFontScaleFactor = 6;\nvar coinSizePresenceScaleFactor = 3;\nvar presenceMaxSize = 40;\nvar presenceFontMaxSize = 20;\nvar getClassNames = classNamesFunction({\n  // There can be many PersonaPresence rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100\n});\n/**\n * PersonaPresence with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\n\nexport var PersonaPresenceBase = React.forwardRef(function (props, forwardedRef) {\n  var coinSize = props.coinSize,\n      isOutOfOffice = props.isOutOfOffice,\n      styles = props.styles,\n      // Use getStyles from props.\n  presence = props.presence,\n      theme = props.theme,\n      presenceTitle = props.presenceTitle,\n      presenceColors = props.presenceColors;\n  var rootRef = React.useRef(null);\n  var mergedRootRef = useMergedRefs(forwardedRef, rootRef);\n  var size = sizeBoolean(props.size); // Render Presence Icon if Persona is above size 32.\n\n  var renderIcon = !(size.isSize8 || size.isSize10 || size.isSize16 || size.isSize24 || size.isSize28 || size.isSize32) && (coinSize ? coinSize > 32 : true);\n  var presenceHeightWidth = coinSize ? coinSize / coinSizePresenceScaleFactor < presenceMaxSize ? coinSize / coinSizePresenceScaleFactor + 'px' : presenceMaxSize + 'px' : '';\n  var presenceFontSize = coinSize ? coinSize / coinSizeFontScaleFactor < presenceFontMaxSize ? coinSize / coinSizeFontScaleFactor + 'px' : presenceFontMaxSize + 'px' : '';\n  var coinSizeWithPresenceIconStyle = coinSize ? {\n    fontSize: presenceFontSize,\n    lineHeight: presenceHeightWidth\n  } : undefined;\n  var coinSizeWithPresenceStyle = coinSize ? {\n    width: presenceHeightWidth,\n    height: presenceHeightWidth\n  } : undefined; // Use getStyles from props, or fall back to getStyles from styles file.\n\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    presence: presence,\n    size: props.size,\n    isOutOfOffice: isOutOfOffice,\n    presenceColors: presenceColors\n  });\n\n  if (presence === PersonaPresenceEnum.none) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    role: \"presentation\",\n    className: classNames.presence,\n    style: coinSizeWithPresenceStyle,\n    title: presenceTitle,\n    ref: mergedRootRef\n  }, renderIcon && React.createElement(Icon, {\n    className: classNames.presenceIcon,\n    iconName: determineIcon(props.presence, props.isOutOfOffice),\n    style: coinSizeWithPresenceIconStyle\n  }));\n});\nPersonaPresenceBase.displayName = 'PersonaPresenceBase';\n\nfunction determineIcon(presence, isOutOfOffice) {\n  if (!presence) {\n    return undefined;\n  }\n\n  var oofIcon = 'SkypeArrow';\n\n  switch (PersonaPresenceEnum[presence]) {\n    case 'online':\n      return 'SkypeCheck';\n\n    case 'away':\n      return isOutOfOffice ? oofIcon : 'SkypeClock';\n\n    case 'dnd':\n      return 'SkypeMinus';\n\n    case 'offline':\n      return isOutOfOffice ? oofIcon : '';\n  }\n\n  return '';\n}","map":{"version":3,"mappings":"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","names":["React","classNamesFunction","Icon","PersonaPresence","PersonaPresenceEnum","sizeBoolean","useMergedRefs","coinSizeFontScaleFactor","coinSizePresenceScaleFactor","presenceMaxSize","presenceFontMaxSize","getClassNames","cacheSize","PersonaPresenceBase","forwardRef","props","forwardedRef","isOutOfOffice","styles","presence","theme","presenceTitle","presenceColors","rootRef","useRef","mergedRootRef","size","renderIcon","isSize8","isSize10","isSize16","isSize24","isSize28","isSize32","coinSize","presenceHeightWidth","presenceFontSize","coinSizeWithPresenceIconStyle","fontSize","lineHeight","undefined","coinSizeWithPresenceStyle","width","height","classNames","none","role","className","style","title","ref","presenceIcon","iconName","determineIcon","displayName","oofIcon"],"sources":["C:\\Users\\Admin\\Desktop\\bookstore\\frontend\\node_modules\\@fluentui\\react\\lib\\components\\Persona\\src\\components\\Persona\\PersonaPresence\\PersonaPresence.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { Icon } from '../../../Icon';\nimport { PersonaPresence as PersonaPresenceEnum, PersonaSize } from '../Persona.types';\nimport { sizeBoolean } from '../PersonaConsts';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport type { IPersonaPresenceProps, IPersonaPresenceStyleProps, IPersonaPresenceStyles } from '../Persona.types';\n\nconst coinSizeFontScaleFactor = 6;\nconst coinSizePresenceScaleFactor = 3;\nconst presenceMaxSize = 40;\nconst presenceFontMaxSize = 20;\n\nconst getClassNames = classNamesFunction<IPersonaPresenceStyleProps, IPersonaPresenceStyles>({\n  // There can be many PersonaPresence rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\n/**\n * PersonaPresence with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport const PersonaPresenceBase: React.FunctionComponent<IPersonaPresenceProps> = React.forwardRef<\n  HTMLDivElement,\n  IPersonaPresenceProps\n>((props, forwardedRef) => {\n  const {\n    coinSize,\n    isOutOfOffice,\n    styles, // Use getStyles from props.\n    presence,\n    theme,\n    presenceTitle,\n    presenceColors,\n  } = props;\n\n  const rootRef = React.useRef<HTMLDivElement>(null);\n  const mergedRootRef = useMergedRefs(forwardedRef, rootRef);\n\n  const size = sizeBoolean(props.size as PersonaSize);\n\n  // Render Presence Icon if Persona is above size 32.\n  const renderIcon =\n    !(size.isSize8 || size.isSize10 || size.isSize16 || size.isSize24 || size.isSize28 || size.isSize32) &&\n    (coinSize ? coinSize > 32 : true);\n\n  const presenceHeightWidth: string = coinSize\n    ? coinSize / coinSizePresenceScaleFactor < presenceMaxSize\n      ? coinSize / coinSizePresenceScaleFactor + 'px'\n      : presenceMaxSize + 'px'\n    : '';\n  const presenceFontSize: string = coinSize\n    ? coinSize / coinSizeFontScaleFactor < presenceFontMaxSize\n      ? coinSize / coinSizeFontScaleFactor + 'px'\n      : presenceFontMaxSize + 'px'\n    : '';\n  const coinSizeWithPresenceIconStyle = coinSize\n    ? { fontSize: presenceFontSize, lineHeight: presenceHeightWidth }\n    : undefined;\n  const coinSizeWithPresenceStyle = coinSize ? { width: presenceHeightWidth, height: presenceHeightWidth } : undefined;\n\n  // Use getStyles from props, or fall back to getStyles from styles file.\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    presence,\n    size: props.size,\n    isOutOfOffice,\n    presenceColors,\n  });\n\n  if (presence === PersonaPresenceEnum.none) {\n    return null;\n  }\n\n  return (\n    <div\n      role=\"presentation\"\n      className={classNames.presence}\n      style={coinSizeWithPresenceStyle}\n      title={presenceTitle}\n      ref={mergedRootRef}\n    >\n      {renderIcon && (\n        <Icon\n          className={classNames.presenceIcon}\n          iconName={determineIcon(props.presence, props.isOutOfOffice)}\n          style={coinSizeWithPresenceIconStyle}\n        />\n      )}\n    </div>\n  );\n});\nPersonaPresenceBase.displayName = 'PersonaPresenceBase';\n\nfunction determineIcon(\n  presence: PersonaPresenceEnum | undefined,\n  isOutOfOffice: boolean | undefined,\n): string | undefined {\n  if (!presence) {\n    return undefined;\n  }\n\n  const oofIcon = 'SkypeArrow';\n\n  switch (PersonaPresenceEnum[presence]) {\n    case 'online':\n      return 'SkypeCheck';\n    case 'away':\n      return isOutOfOffice ? oofIcon : 'SkypeClock';\n    case 'dnd':\n      return 'SkypeMinus';\n    case 'offline':\n      return isOutOfOffice ? oofIcon : '';\n  }\n\n  return '';\n}\n"]},"metadata":{},"sourceType":"module"}